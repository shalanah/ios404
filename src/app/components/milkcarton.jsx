/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 milkcartons-noart.glb 
*/

import React from 'react';
import { useGLTF, useTexture } from '@react-three/drei';
import useCanIUseContext from '../hooks/useCanIUseContext';

const textureUrlLight = '/milkcarton-texture-bake-light2.png';
const textureUrlDark = '/milkcarton-texture-bake-dark.png';

export const Model = (props) => {
  const { isDarkMode } = useCanIUseContext();
  const { nodes } = useGLTF('/milkcartons-noart.glb');
  nodes.carton.geometry.attributes.uv = nodes.carton.geometry.attributes.uv1; // overwrite pme iv fpr now
  return (
    <group {...props} dispose={null}>
      {isDarkMode ? <ModelDark nodes={nodes} /> : <ModelLight nodes={nodes} />}
    </group>
  );
};

const ModelDark = ({ nodes }) => {
  const bakedTextureDark = useTexture(textureUrlDark);
  return (
    <>
      <mesh geometry={nodes.carton.geometry}>
        <meshBasicMaterial
          map={bakedTextureDark}
          map-flipY={false}
          transparent={false}
        />
      </mesh>
      <mesh geometry={nodes.ground.geometry}>
        <meshBasicMaterial
          map={bakedTextureDark}
          map-flipY={false}
          transparent={true}
        />
      </mesh>
    </>
  );
};

const ModelLight = ({ nodes }) => {
  const bakedTextureLight = useTexture(textureUrlLight);
  return (
    <>
      <mesh geometry={nodes.carton.geometry}>
        <meshBasicMaterial
          map={bakedTextureLight}
          map-flipY={false}
          transparent={false}
        />
      </mesh>
      <mesh geometry={nodes.ground.geometry}>
        <meshBasicMaterial
          map={bakedTextureLight}
          map-flipY={false}
          transparent={true}
        />
      </mesh>
    </>
  );
};

useTexture.preload(textureUrlLight);
useTexture.preload(textureUrlDark);
useGLTF.preload('/milkcartons-noart.glb');
