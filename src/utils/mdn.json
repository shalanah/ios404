{
  "api/abortcontroller": "The **`AbortController`** interface represents a controller object that allows you to abort one or more Web requests as and when desired.",
  "api/abortsignal": "The **`AbortSignal`** interface represents a signal object that allows you to communicate with an asynchronous operation (such as a fetch request) and abort it if required via an [AbortController--](/docs/Web/API/AbortController) object.",
  "api/absoluteorientationsensor": "The **`AbsoluteOrientationSensor`** interface of the [Sensor APIs](/en-US/docs/Web/API/Sensor_APIs) describes the device's physical orientation in relation to the Earth's reference coordinate system.",
  "api/abstractrange": "The **`AbstractRange`** abstract interface is the base class upon which all [DOM--](/docs/Glossary/DOM) range types are defined. A **range** is an object that indicates the start and end points of a section of content within the document.",
  "api/accelerometer": "The **`Accelerometer`** interface of the [Sensor APIs](/en-US/docs/Web/API/Sensor_APIs) provides on each reading the acceleration applied to the device along all three axes.",
  "api/aescbcparams": "The **`AesCbcParams`** dictionary of the [Web Crypto API](/en-US/docs/Web/API/Web_Crypto_API) represents the object that should be passed as the `algorithm` parameter into [SubtleCrypto.encrypt()--](/docs/Web/API/SubtleCrypto/encrypt), [SubtleCrypto.decrypt()--](/docs/Web/API/SubtleCrypto/decrypt), [SubtleCrypto.wrapKey()--](/docs/Web/API/SubtleCrypto/wrapKey), or [SubtleCrypto.unwrapKey()--](/docs/Web/API/SubtleCrypto/unwrapKey), when using the [AES-CBC](/en-US/docs/Web/API/SubtleCrypto/encrypt#aes-cbc) algorithm.",
  "api/aesctrparams": "The **`AesCtrParams`** dictionary of the [Web Crypto API](/en-US/docs/Web/API/Web_Crypto_API) represents the object that should be passed as the `algorithm` parameter into [SubtleCrypto.encrypt()--](/docs/Web/API/SubtleCrypto/encrypt), [SubtleCrypto.decrypt()--](/docs/Web/API/SubtleCrypto/decrypt), [SubtleCrypto.wrapKey()--](/docs/Web/API/SubtleCrypto/wrapKey), or [SubtleCrypto.unwrapKey()--](/docs/Web/API/SubtleCrypto/unwrapKey), when using the [AES-CTR](/en-US/docs/Web/API/SubtleCrypto/encrypt#aes-ctr) algorithm.",
  "api/aesgcmparams": "The **`AesGcmParams`** dictionary of the [Web Crypto API](/en-US/docs/Web/API/Web_Crypto_API) represents the object that should be passed as the `algorithm` parameter into [SubtleCrypto.encrypt()--](/docs/Web/API/SubtleCrypto/encrypt), [SubtleCrypto.decrypt()--](/docs/Web/API/SubtleCrypto/decrypt), [SubtleCrypto.wrapKey()--](/docs/Web/API/SubtleCrypto/wrapKey), or [SubtleCrypto.unwrapKey()--](/docs/Web/API/SubtleCrypto/unwrapKey), when using the [AES-GCM](/en-US/docs/Web/API/SubtleCrypto/encrypt#aes-gcm) algorithm.",
  "api/aeskeygenparams": "The **`AesKeyGenParams`** dictionary of the [Web Crypto API](/en-US/docs/Web/API/Web_Crypto_API) represents the object that should be passed as the `algorithm` parameter into [SubtleCrypto.generateKey()--](/docs/Web/API/SubtleCrypto/generateKey), when generating an AES key: that is, when the algorithm is identified as any of [AES-CBC](/en-US/docs/Web/API/SubtleCrypto/encrypt#aes-cbc), [AES-CTR](/en-US/docs/Web/API/SubtleCrypto/encrypt#aes-ctr), [AES-GCM](/en-US/docs/Web/API/SubtleCrypto/encrypt#aes-gcm), or [AES-KW](/en-US/docs/Web/API/SubtleCrypto/wrapKey#aes-kw).",
  "api/ambientlightsensor": "The **`AmbientLightSensor`** interface of the [Sensor APIs](/en-US/docs/Web/API/Sensor_APIs) returns the current light level or illuminance of the ambient light around the hosting device.",
  "api/analysernode": "The **`AnalyserNode`** interface represents a node able to provide real-time frequency and time-domain analysis information. It is an [AudioNode--](/docs/Web/API/AudioNode) that passes the audio stream unchanged from the input to the output, but allows you to take the generated data, process it, and create audio visualizations.",
  "api/angle_instanced_arrays": "The **`ANGLE_instanced_arrays`** extension is part of the [WebGL API](/en-US/docs/Web/API/WebGL_API) and allows to draw the same object, or groups of similar objects multiple times, if they share the same vertex data, primitive count and type.",
  "api/animation": "The **`Animation`** interface of the [Web Animations API](/en-US/docs/Web/API/Web_Animations_API) represents a single animation player and provides playback controls and a timeline for an animation node or source.",
  "api/animationeffect": "The `AnimationEffect` interface of the [Web Animations API](/en-US/docs/Web/API/Web_Animations_API) is an interface representing animation effects.",
  "api/animationevent": "The **`AnimationEvent`** interface represents events providing information related to [animations](/en-US/docs/Web/CSS/CSS_animations/Using_CSS_animations).",
  "api/animationplaybackevent": "The AnimationPlaybackEvent interface of the [Web Animations API](/en-US/docs/Web/API/Web_Animations_API) represents animation events.",
  "api/animationtimeline": "The `AnimationTimeline` interface of the [Web Animations API](/en-US/docs/Web/API/Web_Animations_API) represents the timeline of an animation. This interface exists to define timeline features, inherited by other timeline types:",
  "api/atob": "The **`atob()`** function decodes a\nstring of data which has been encoded using [Base64--](/docs/Glossary/Base64) encoding. You can use\nthe [btoa()--](/docs/Web/API/btoa) method to encode and transmit\ndata which may otherwise cause communication problems, then transmit it and use the\n`atob()` method to decode the data again. For example, you can encode,\ntransmit, and decode control characters such as [ASCII--](/docs/Glossary/ASCII) values 0 through 31.",
  "api/attr": "|\n| `myAttr`  | _none_         | _none_           | `myAttr`             | `myAttr`                 |\n| `myAttr`  | `mynamespace`  | _none_           | `myAttr`             | `myAttr`                 |\n| `myAttr`  | `mynamespace`  | `myns`           | `myAttr`             | `myns:myAttr`            |",
  "api/audio_output_devices_api": "The **Audio Output Devices API** allows web applications to prompt users about what output device should be used for audio playback.",
  "api/audiobuffer": "The **`AudioBuffer`** interface represents a short audio asset residing in memory, created from an audio file using the [AudioContext.decodeAudioData()--](/docs/Web/API/BaseAudioContext/decodeAudioData) method, or from raw data using [AudioContext.createBuffer()--](/docs/Web/API/BaseAudioContext/createBuffer). Once put into an AudioBuffer, the audio can then be played by being passed into an [AudioBufferSourceNode--](/docs/Web/API/AudioBufferSourceNode).",
  "api/audiobuffersourcenode": "The **`AudioBufferSourceNode`** interface is an [AudioScheduledSourceNode--](/docs/Web/API/AudioScheduledSourceNode) which represents an audio source consisting of in-memory audio data, stored in an [AudioBuffer--](/docs/Web/API/AudioBuffer).",
  "api/audiocontext": "The `AudioContext` interface represents an audio-processing graph built from audio modules linked together, each represented by an [AudioNode--](/docs/Web/API/AudioNode).",
  "api/audiodata": "The **`AudioData`** interface of the [WebCodecs API](/en-US/docs/Web/API/WebCodecs_API) represents an audio sample.",
  "api/audiodecoder": "The **`AudioDecoder`** interface of the [WebCodecs API--](/docs/Web/API/WebCodecs_API) decodes chunks of audio.",
  "api/audiodestinationnode": "The `AudioDestinationNode` interface represents the end destination of an audio graph in a given context — usually the speakers of your device. It can also be the node that will \"record\" the audio data when used with an `OfflineAudioContext`.",
  "api/audioencoder": "The **`AudioEncoder`** interface of the [WebCodecs API](/en-US/docs/Web/API/WebCodecs_API) encodes [AudioData--](/docs/Web/API/AudioData) objects.",
  "api/audiolistener": "The `AudioListener` interface represents the position and orientation of the unique person listening to the audio scene, and is used in [audio spatialization](/en-US/docs/Web/API/Web_Audio_API/Web_audio_spatialization_basics). All [PannerNode--](/docs/Web/API/PannerNode)s spatialize in relation to the `AudioListener` stored in the [BaseAudioContext.listener--](/docs/Web/API/BaseAudioContext/listener) attribute.",
  "api/audionode": "The **`AudioNode`** interface is a generic interface for representing an audio processing module.",
  "api/audioparam": "The Web Audio API's `AudioParam` interface represents an audio-related parameter, usually a parameter of an [AudioNode--](/docs/Web/API/AudioNode) (such as [GainNode.gain--](/docs/Web/API/GainNode/gain)).",
  "api/audioparamdescriptor": "The **`AudioParamDescriptor`** dictionary of the [Web Audio API](/en-US/docs/Web/API/Web_Audio_API) specifies properties for [AudioParam--](/docs/Web/API/AudioParam) objects.",
  "api/audioparammap": "The **`AudioParamMap`** interface of the [Web Audio API](/en-US/docs/Web/API/Web_Audio_API) represents an iterable and read-only set of multiple audio parameters.",
  "api/audioprocessingevent": "The `AudioProcessingEvent` interface of the [Web Audio API](/en-US/docs/Web/API/Web_Audio_API) represents events that occur when a [ScriptProcessorNode--](/docs/Web/API/ScriptProcessorNode) input buffer is ready to be processed.",
  "api/audioscheduledsourcenode": "The `AudioScheduledSourceNode` interface—part of the Web Audio API—is a parent interface for several types of audio source node interfaces which share the ability to be started and stopped, optionally at specified times. Specifically, this interface defines the [start()--](/docs/Web/API/AudioScheduledSourceNode/start) and [stop()--](/docs/Web/API/AudioScheduledSourceNode/stop) methods, as well as the [ended--](/docs/Web/API/AudioScheduledSourceNode/ended_event) event.",
  "api/audiosinkinfo": "The **`AudioSinkInfo`** interface of the [Web Audio API--](/docs/Web/API/Web_Audio_API) represents information describing an [AudioContext--](/docs/Web/API/AudioContext)'s sink ID, retrieved via [AudioContext.sinkId--](/docs/Web/API/AudioContext/sinkId).",
  "api/audiotrack": "The **`AudioTrack`** interface represents a single audio track from one of the HTML media elements, [audio--](/docs/Web/HTML/Element/audio) or [video--](/docs/Web/HTML/Element/video).",
  "api/audiotracklist": "The **`AudioTrackList`** interface is used to represent a list of the audio tracks contained within a given HTML media element, with each track represented by a separate [AudioTrack--](/docs/Web/API/AudioTrack) object in the list.",
  "api/audioworklet": "The **`AudioWorklet`** interface of the [Web Audio API](/en-US/docs/Web/API/Web_Audio_API) is used to supply custom audio processing scripts that execute in a separate thread to provide very low latency audio processing.",
  "api/audioworkletglobalscope": "The **`AudioWorkletGlobalScope`** interface of the [Web Audio API](/en-US/docs/Web/API/Web_Audio_API) represents a global execution context for user-supplied code, which defines custom [AudioWorkletProcessor--](/docs/Web/API/AudioWorkletProcessor)-derived classes.",
  "api/audioworkletnode": "The **`AudioWorkletNode`** interface of the [Web Audio API](/en-US/docs/Web/API/Web_Audio_API) represents a base class for a user-defined [AudioNode--](/docs/Web/API/AudioNode), which can be connected to an audio routing graph along with other nodes. It has an associated [AudioWorkletProcessor--](/docs/Web/API/AudioWorkletProcessor), which does the actual audio processing in a Web Audio rendering thread.",
  "api/audioworkletprocessor": "The **`AudioWorkletProcessor`** interface of the [Web Audio API](/en-US/docs/Web/API/Web_Audio_API) represents an audio processing code behind a custom [AudioWorkletNode--](/docs/Web/API/AudioWorkletNode). It lives in the [AudioWorkletGlobalScope--](/docs/Web/API/AudioWorkletGlobalScope) and runs on the Web Audio rendering thread. In turn, an [AudioWorkletNode--](/docs/Web/API/AudioWorkletNode) based on it runs on the main thread.",
  "api/authenticatorassertionresponse": "The **`AuthenticatorAssertionResponse`** interface of the [Web Authentication API](/en-US/docs/Web/API/Web_Authentication_API) contains a [digital signature](/en-US/docs/Glossary/Signature/Security) from the private key of a particular WebAuthn credential. The relying party's server can verify this signature to authenticate a user, for example when they sign in.",
  "api/authenticatorattestationresponse": "The **`AuthenticatorAttestationResponse`** interface of the [Web Authentication API](/en-US/docs/Web/API/Web_Authentication_API) is the result of a WebAuthn credential registration. It contains information about the credential that the server needs to perform WebAuthn assertions, such as its credential ID and public key.",
  "api/authenticatorresponse": "The **`AuthenticatorResponse`** interface of the [Web Authentication API](/en-US/docs/Web/API/Web_Authentication_API) is the base interface for interfaces that provide a cryptographic root of trust for a key pair. The child interfaces include information from the browser such as the challenge origin and either may be returned from [PublicKeyCredential.response--](/docs/Web/API/PublicKeyCredential/response).",
  "api/background_fetch_api": "The **Background Fetch API** provides a method for managing downloads that may take a significant amount of time such as movies, audio files, and software.",
  "api/background_synchronization_api": "The **Background Synchronization API** enables a web app to defer tasks so that they can be run in a [service worker](/en-US/docs/Web/API/Service_Worker_API) once the user has a stable network connection.",
  "api/background_tasks_api": "The **Cooperative Scheduling of Background Tasks API** (also referred to as the Background Tasks API or the `requestIdleCallback()` API) provides the ability to queue tasks to be executed automatically by the user agent when it determines that there is free time to do so.",
  "api/backgroundfetchevent": "The **`BackgroundFetchEvent`** interface of the [Background Fetch API--](/docs/Web/API/Background_Fetch_API) is the event type for background fetch events dispatched on the [service worker global scope--](/docs/Web/API/ServiceWorkerGlobalScope).",
  "api/backgroundfetchmanager": "The **`BackgroundFetchManager`** interface of the [Background Fetch API--](/docs/Web/API/Background_Fetch_API) is a map where the keys are background fetch IDs and the values are [BackgroundFetchRegistration--](/docs/Web/API/BackgroundFetchRegistration) objects.",
  "api/backgroundfetchrecord": "The **`BackgroundFetchRecord`** interface of the [Background Fetch API--](/docs/Web/API/Background_Fetch_API) represents an individual request and response.",
  "api/backgroundfetchregistration": "The **`BackgroundFetchRegistration`** interface of the [Background Fetch API--](/docs/Web/API/Background_Fetch_API) represents an individual background fetch.",
  "api/backgroundfetchupdateuievent": "The **`BackgroundFetchUpdateUIEvent`** interface of the [Background Fetch API--](/docs/Web/API/Background_Fetch_API) is an event type for the [backgroundfetchsuccess--](/docs/Web/API/ServiceWorkerGlobalScope/backgroundfetchsuccess_event) and [backgroundfetchfail--](/docs/Web/API/ServiceWorkerGlobalScope/backgroundfetchfail_event) events, and provides a method for updating the title and icon of the app to inform a user of the success or failure of a background fetch.",
  "api/badging_api": "The **Badging API** gives web developers a method of setting a badge on a document or application, to act as a notification that state has changed without displaying a more distracting notification. A common use case for this would be an application with a messaging feature displaying a badge on the app icon to show that new messages have arrived.",
  "api/barcode_detection_api": "The Barcode Detection API detects linear and two-dimensional barcodes in images.",
  "api/barcodedetector": "The **`BarcodeDetector`** interface of the [Barcode Detection API--](/docs/Web/API/Barcode_Detection_API) allows detection of linear and two dimensional barcodes in images.",
  "api/barprop": "The **`BarProp`** interface of the [Document Object Model--](/docs/Web/API/Document_Object_Model) represents the web browser user interface elements that are exposed to scripts in web pages. Each of the following interface elements are represented by a `BarProp` object.",
  "api/baseaudiocontext": "The `BaseAudioContext` interface of the [Web Audio API](/en-US/docs/Web/API/Web_Audio_API) acts as a base definition for online and offline audio-processing graphs, as represented by [AudioContext--](/docs/Web/API/AudioContext) and [OfflineAudioContext--](/docs/Web/API/OfflineAudioContext) respectively. You wouldn't use `BaseAudioContext` directly — you'd use its features via one of these two inheriting interfaces.",
  "api/battery_status_api": "The **Battery Status API**, more often referred to as the **Battery API**, provides information about the system's battery charge level and lets you be notified by events that are sent when the battery level or charging status change. This can be used to adjust your app's resource usage to reduce battery drain when the battery is low, or to save changes before the battery runs out in order to prevent data loss.",
  "api/batterymanager": "The **`BatteryManager`** interface of the [Battery Status API--](/docs/Web/API/Battery_Status_API) provides information about the system's battery charge level. The [navigator.getBattery()--](/docs/Web/API/navigator/getBattery) method returns a promise that resolves with a `BatteryManager` interface.",
  "api/beacon_api": "The **`Beacon`** API is used to send an asynchronous and non-blocking request to a web server. The request does not expect a response. Unlike requests made using [XMLHttpRequest--](/docs/Web/API/XMLHttpRequest) or the [Fetch API](/en-US/docs/Web/API/Fetch_API), the browser guarantees to initiate beacon requests before the page is unloaded and to run them to completion.",
  "api/beforeinstallpromptevent": "The **`BeforeInstallPromptEvent`** is the interface of the [beforeinstallprompt--](/docs/Web/API/Window/beforeinstallprompt_event) event fired at the [Window--](/docs/Web/API/Window) object before a user is prompted to \"install\" a website to a home screen on mobile.",
  "api/beforeunloadevent": "The **`BeforeUnloadEvent`** interface represents the event object for the [beforeunload--](/docs/Web/API/Window/beforeunload_event) event, which is fired when the current window, contained document, and associated resources are about to be unloaded.",
  "api/biquadfilternode": "The `BiquadFilterNode` interface represents a simple low-order filter, and is created using the [BaseAudioContext/createBiquadFilter--](/docs/Web/API/BaseAudioContext/createBiquadFilter) method. It is an [AudioNode--](/docs/Web/API/AudioNode) that can represent different kinds of filters, tone control devices, and graphic equalizers. A `BiquadFilterNode` always has exactly one input and one output.",
  "api/blob": "The **`Blob`** object represents a blob, which is a file-like object of immutable, raw data; they can be read as text or binary data, or converted into a [ReadableStream--](/docs/Web/API/ReadableStream) so its methods can be used for processing the data.",
  "api/blobevent": "The **`BlobEvent`** interface of the [MediaStream Recording API](/en-US/docs/Web/API/MediaStream_Recording_API) represents events associated with a [Blob--](/docs/Web/API/Blob). These blobs are typically, but not necessarily, associated with media content.",
  "api/bluetooth": "The **`Bluetooth`** interface of the [Web Bluetooth API](/en-US/docs/Web/API/Web_Bluetooth_API) provides methods to query Bluetooth availability and request access to devices.",
  "api/bluetoothcharacteristicproperties": "The **`BluetoothCharacteristicProperties`** interface of the [Web Bluetooth API](/en-US/docs/Web/API/Web_Bluetooth_API) provides the operations that are valid on the given [BluetoothRemoteGATTCharacteristic--](/docs/Web/API/BluetoothRemoteGATTCharacteristic).",
  "api/bluetoothdevice": "The BluetoothDevice interface of the [Web Bluetooth API](/en-US/docs/Web/API/Web_Bluetooth_API) represents a Bluetooth device inside a particular script execution\nenvironment.",
  "api/bluetoothremotegattcharacteristic": "The `BluetoothRemoteGattCharacteristic` interface of the [Web Bluetooth API](/en-US/docs/Web/API/Web_Bluetooth_API) represents a GATT Characteristic, which is a basic data element that provides further information about a peripheral's service.",
  "api/bluetoothremotegattdescriptor": "The `BluetoothRemoteGATTDescriptor` interface of the [Web Bluetooth API](/en-US/docs/Web/API/Web_Bluetooth_API) provides a GATT Descriptor,\nwhich provides further information about a characteristic's value.",
  "api/bluetoothremotegattserver": "The **`BluetoothRemoteGATTServer`** interface of the [Web Bluetooth API](/en-US/docs/Web/API/Web_Bluetooth_API) represents a GATT\nServer on a remote device.",
  "api/bluetoothremotegattservice": "The `BluetoothRemoteGATTService` interface of the [Web Bluetooth API](/en-US/docs/Web/API/Web_Bluetooth_API) represents a\nservice provided by a GATT server, including a device, a list of referenced services,\nand a list of the characteristics of this service.",
  "api/bluetoothuuid": "The **`BluetoothUUID`** interface of the [Web Bluetooth API--](/docs/Web/API/Web_Bluetooth_API) provides a way to look up Universally Unique Identifier (UUID) values by name in the\n[registry](https://www.bluetooth.com/specifications/assigned-numbers/) maintained by the Bluetooth SIG.",
  "api/broadcast_channel_api": "The **Broadcast Channel API** allows basic communication between [browsing contexts--](/docs/Glossary/browsing_context) (that is, _windows_, _tabs_, _frames_, or _iframes_) and workers on the same [origin--](/docs/Glossary/origin).",
  "api/broadcastchannel": "The **`BroadcastChannel`** interface represents a named channel that any [browsing context--](/docs/Glossary/browsing_context) of a given [origin--](/docs/Glossary/origin) can subscribe to. It allows communication between different documents (in different windows, tabs, frames or iframes) of the same origin. Messages are broadcasted via a [message--](/docs/Web/API/BroadcastChannel/message_event) event fired at all `BroadcastChannel` objects listening to the channel, except the object that sent the message.",
  "api/btoa": "The **`btoa()`** method creates a\n[Base64--](/docs/Glossary/Base64)-encoded [ASCII--](/docs/Glossary/ASCII) string from a _binary string_ (i.e., a\nstring in which each character in the string is treated as a byte\nof binary data).",
  "api/bytelengthqueuingstrategy": "The **`ByteLengthQueuingStrategy`** interface of the [Streams API](/en-US/docs/Web/API/Streams_API) provides a built-in byte length queuing strategy that can be used when constructing streams.",
  "api/cache": "The **`Cache`** interface provides a persistent storage mechanism for [Request--](/docs/Web/API/Request) / [Response--](/docs/Web/API/Response) object pairs that are cached in long lived memory. How long a `Cache` object lives is browser dependent, but a single origin's scripts can typically rely on the presence of a previously populated `Cache` object. Note that the `Cache` interface is exposed to windowed scopes as well as workers. You don't have to use it in conjunction with service workers, even though it is defined in the service worker spec.",
  "api/caches": "The global **`caches`** read-only property returns the [CacheStorage--](/docs/Web/API/CacheStorage) object associated with the current context.\nThis object enables functionality such as storing assets for offline use, and generating custom responses to requests.",
  "api/cachestorage": "The **`CacheStorage`** interface represents the storage for [Cache--](/docs/Web/API/Cache) objects.",
  "api/canmakepaymentevent": "The **`CanMakePaymentEvent`** interface of the [Payment Handler API--](/docs/Web/API/Payment_Handler_API) is the event object for the [canmakepayment--](/docs/Web/API/ServiceWorkerGlobalScope/canmakepayment_event) event, fired on a payment app's service worker to check whether it is ready to handle a payment. Specifically, it is fired when the merchant website calls [new PaymentRequest()--](/docs/Web/API/PaymentRequest/PaymentRequest).",
  "api/canvas_api": "The **Canvas API** provides a means for drawing graphics via [JavaScript](/en-US/docs/Web/JavaScript) and the [HTML](/en-US/docs/Web/HTML) [canvas--](/docs/Web/HTML/Element/canvas) element. Among other things, it can be used for animation, game graphics, data visualization, photo manipulation, and real-time video processing.",
  "api/canvascapturemediastreamtrack": "The **`CanvasCaptureMediaStreamTrack`** interface of the [Media Capture and Streams API--](/docs/Web/API/Media_Capture_and_Streams_API) represents the video track contained in a [MediaStream--](/docs/Web/API/MediaStream) being generated from a [canvas--](/docs/Web/HTML/Element/canvas) following a call to [HTMLCanvasElement.captureStream()--](/docs/Web/API/HTMLCanvasElement/captureStream).",
  "api/canvasgradient": "The **`CanvasGradient`** interface represents an [opaque object](https://en.wikipedia.org/wiki/Opaque_data_type) describing a gradient. It is returned by the methods [CanvasRenderingContext2D.createLinearGradient()--](/docs/Web/API/CanvasRenderingContext2D/createLinearGradient), [CanvasRenderingContext2D.createConicGradient()--](/docs/Web/API/CanvasRenderingContext2D/createConicGradient) or [CanvasRenderingContext2D.createRadialGradient()--](/docs/Web/API/CanvasRenderingContext2D/createRadialGradient).",
  "api/canvaspattern": "The **`CanvasPattern`** interface represents an [opaque object](https://en.wikipedia.org/wiki/Opaque_data_type) describing a pattern, based on an image, a canvas, or a video, created by the [CanvasRenderingContext2D.createPattern()--](/docs/Web/API/CanvasRenderingContext2D/createPattern) method.",
  "api/canvasrenderingcontext2d": "The **`CanvasRenderingContext2D`** interface, part of the [Canvas API](/en-US/docs/Web/API/Canvas_API), provides the 2D rendering context for the drawing surface of a [canvas--](/docs/Web/HTML/Element/canvas) element.\nIt is used for drawing shapes, text, images, and other objects.",
  "api/capturecontroller": "The **`CaptureController`** interface provides methods that can be used to further manipulate a capture session separate from its initiation via [MediaDevices.getDisplayMedia()--](/docs/Web/API/MediaDevices/getDisplayMedia).",
  "api/caretposition": "The `CaretPosition` interface represents the caret position, an indicator for the text insertion point. You can get a `CaretPosition` using the [Document.caretPositionFromPoint()--](/docs/Web/API/Document/caretPositionFromPoint) method.",
  "api/cdatasection": "The **`CDATASection`** interface represents a CDATA section\nthat can be used within XML to include extended portions of unescaped text.\nWhen inside a CDATA section, the symbols `<` and `&` don't need escaping\nas they normally do.",
  "api/channel_messaging_api": "The **Channel Messaging API** allows two separate scripts running in different browsing contexts attached to the same document (e.g., two IFrames, or the main document and an IFrame, two documents via a [SharedWorker--](/docs/Web/API/SharedWorker), or two workers) to communicate directly, passing messages between one another through two-way channels (or pipes) with a port at each end.",
  "api/channelmergernode": "The `ChannelMergerNode` interface, often used in conjunction with its opposite, [ChannelSplitterNode--](/docs/Web/API/ChannelSplitterNode), reunites different mono inputs into a single output. Each input is used to fill a channel of the output. This is useful for accessing each channels separately, e.g. for performing channel mixing where gain must be separately controlled on each channel.",
  "api/channelsplitternode": "The `ChannelSplitterNode` interface, often used in conjunction with its opposite, [ChannelMergerNode--](/docs/Web/API/ChannelMergerNode), separates the different channels of an audio source into a set of mono outputs. This is useful for accessing each channel separately, e.g. for performing channel mixing where gain must be separately controlled on each channel.",
  "api/characterboundsupdateevent": "The **`CharacterBoundsUpdateEvent`** interface is a [DOM event--](/docs/Web/API/Event) that represents a request from the operating system to know the bounds of certain characters within an editable region that's attached to an [EditContext--](/docs/Web/API/EditContext) instance.",
  "api/characterdata": "The **`CharacterData`** abstract interface represents a [Node--](/docs/Web/API/Node) object that contains characters. This is an abstract interface, meaning there aren't any objects of type `CharacterData`: it is implemented by other interfaces like [Text--](/docs/Web/API/Text), [Comment--](/docs/Web/API/Comment), [CDATASection--](/docs/Web/API/CDATASection), or [ProcessingInstruction--](/docs/Web/API/ProcessingInstruction), which aren't abstract.",
  "api/clearinterval": "The global **`clearInterval()`** method cancels a timed, repeating action which\nwas previously established by a call to [setInterval()--](/docs/Web/API/setInterval).\nIf the parameter provided does not identify a previously established action,\nthis method does nothing.",
  "api/cleartimeout": "The global **`clearTimeout()`** method cancels a timeout previously established\nby calling [setTimeout()--](/docs/Web/API/setTimeout).",
  "api/client": "The `Client` interface represents an executable context such as a [Worker--](/docs/Web/API/Worker), or a [SharedWorker--](/docs/Web/API/SharedWorker). [Window--](/docs/Web/API/Window) clients are represented by the more-specific [WindowClient--](/docs/Web/API/WindowClient). You can get `Client`/`WindowClient` objects from methods such as [Clients.matchAll()--](/docs/Web/API/Clients/matchAll) and [Clients.get()--](/docs/Web/API/Clients/get).",
  "api/clients": "The `Clients` interface provides access to [Client--](/docs/Web/API/Client) objects. Access it via `[self--](/docs/Web/API/ServiceWorkerGlobalScope).clients` within a [service worker](/en-US/docs/Web/API/Service_Worker_API).",
  "api/clipboard": "The **`Clipboard`** interface of the [Clipboard API](/en-US/docs/Web/API/Clipboard_API) provides read and write access to the contents of the system clipboard.\nThis allows a web application to implement cut, copy, and paste features.",
  "api/clipboard_api": "The **Clipboard API** provides the ability to respond to clipboard commands (cut, copy, and paste), as well as to asynchronously read from and write to the system clipboard.",
  "api/clipboardevent": "The **`ClipboardEvent`** interface of the [Clipboard API](/en-US/docs/Web/API/Clipboard_API) represents events providing information related to modification of the clipboard, that is [cut--](/docs/Web/API/Element/cut_event), [copy--](/docs/Web/API/Element/copy_event), and [paste--](/docs/Web/API/Element/paste_event) events.",
  "api/clipboarditem": "The **`ClipboardItem`** interface of the [Clipboard API](/en-US/docs/Web/API/Clipboard_API) represents a single item format, used when reading or writing clipboard data using [clipboard.read()--](/docs/Web/API/clipboard/read) and [clipboard.write()--](/docs/Web/API/clipboard/write) respectively.",
  "api/closeevent": "A `CloseEvent` is sent to clients using [WebSockets--](/docs/Glossary/WebSockets) when the connection is closed. This is delivered to the listener indicated by the `WebSocket` object's `onclose` attribute.",
  "api/comment": "The **`Comment`** interface represents textual notations within markup; although it is generally not visually shown, such comments are available to be read in the source view.",
  "api/compositionevent": "The DOM **`CompositionEvent`** represents events that occur due to the user indirectly entering text.",
  "api/compression_streams_api": "The **Compression Streams API** provides a JavaScript API for compressing and decompressing streams of data using the gzip or deflate formats.",
  "api/compressionstream": "The **`CompressionStream`** interface of the [Compression Streams API--](/docs/Web/API/Compression_Streams_API) is an API for compressing a stream of data.",
  "api/console": "The **`console`** object provides access to the debugging console (e.g., the [Web console](https://firefox-source-docs.mozilla.org/devtools-user/web_console/index.html) in Firefox). The specifics of how it works vary from browser to browser or server runtimes (Node.js, for example), but there is a _de facto_ set of features that are typically provided.",
  "api/console_api": "The Console API provides functionality to allow developers to perform debugging tasks, such as logging messages or the values of variables at set points in your code, or timing how long an operation takes to complete.",
  "api/constantsourcenode": "The `ConstantSourceNode` interface—part of the Web Audio API—represents an audio source (based upon [AudioScheduledSourceNode--](/docs/Web/API/AudioScheduledSourceNode)) whose output is single unchanging value. This makes it useful for cases in which you need a constant value coming in from an audio source. In addition, it can be used like a constructible [AudioParam--](/docs/Web/API/AudioParam) by automating the value of its [offset--](/docs/Web/API/ConstantSourceNode/offset) or by connecting another node to it; see [Controlling multiple parameters with ConstantSourceNode](/en-US/docs/Web/API/Web_Audio_API/Controlling_multiple_parameters_with_ConstantSourceNode).",
  "api/contact_picker_api": "The Contact Picker API allows users to select entries from their contact list and share limited details of the selected entries with a website or application.",
  "api/contactaddress": "The **`ContactAddress`** interface of the [Contact Picker API](/en-US/docs/Web/API/Contact_Picker_API) represents a physical address. Instances of this interface are retrieved from the `address` property of the objects returned by [ContactsManager.getProperties()--](/docs/Web/API/ContactsManager/getProperties).",
  "api/contactsmanager": "The **`ContactsManager`** interface of the [Contact Picker API--](/docs/Web/API/Contact_Picker_API) allows users to select entries from their contact list and share limited details of the selected entries with a website or application.",
  "api/content_index_api": "The **Content Index API** allows developers to register their offline enabled content with the browser.",
  "api/contentindex": "The **`ContentIndex`** interface of the [Content Index API](/en-US/docs/Web/API/Content_Index_API) allows developers to register their offline enabled content with the browser.",
  "api/contentindexevent": "The **`ContentIndexEvent`** interface of the [content index](/en-US/docs/Web/API/Content_Index_API) defines the object used to represent the [contentdelete--](/docs/Web/API/ServiceWorkerGlobalScope/contentdelete_event) event.",
  "api/contentvisibilityautostatechangeevent": "The **`ContentVisibilityAutoStateChangeEvent`** interface is the event object for the [contentvisibilityautostatechange--](/docs/Web/API/element/contentvisibilityautostatechange_event) event, which fires on any element with [content-visibility: auto--](/docs/Web/CSS/content-visibility) set on it when it starts or stops being [relevant to the user](/en-US/docs/Web/CSS/CSS_containment#relevant_to_the_user) and [skipping its contents](/en-US/docs/Web/CSS/CSS_containment#skips_its_contents).",
  "api/convolvernode": "The `ConvolverNode` interface is an [AudioNode--](/docs/Web/API/AudioNode) that performs a Linear Convolution on a given [AudioBuffer--](/docs/Web/API/AudioBuffer), often used to achieve a reverb effect. A `ConvolverNode` always has exactly one input and one output.",
  "api/cookie_store_api": "The **Cookie Store API** is an asynchronous API for managing cookies, available in windows and also [service workers](/en-US/docs/Web/API/Service_Worker_API).",
  "api/cookiechangeevent": "The **`CookieChangeEvent`** interface of the [Cookie Store API--](/docs/Web/API/Cookie_Store_API) is the event type of the [change--](/docs/Web/API/CookieStore/change_event) event fired at a [CookieStore--](/docs/Web/API/CookieStore) when any cookie changes occur. A cookie change consists of a cookie and a type (either \"changed\" or \"deleted\").",
  "api/cookiestore": "The **`CookieStore`** interface of the [Cookie Store API--](/docs/Web/API/Cookie_Store_API) provides methods for getting and setting cookies asynchronously from either a page or a service worker.",
  "api/cookiestoremanager": "The **`CookieStoreManager`** interface of the [Cookie Store API--](/docs/Web/API/Cookie_Store_API) allows service workers to subscribe to cookie change events. Call [subscribe()--](/docs/Web/API/CookieStoreManager/subscribe) on a particular service worker registration to receive change events.",
  "api/countqueuingstrategy": "The **`CountQueuingStrategy`** interface of the [Streams API](/en-US/docs/Web/API/Streams_API) provides a built-in chunk counting queuing strategy that can be used when constructing streams.",
  "api/createimagebitmap": "The **`createImageBitmap()`** method creates a bitmap from a\ngiven source, optionally cropped to contain only a portion of that source. The method\nexists on the global scope in both windows and workers. It accepts a variety of\ndifferent image sources, and returns a {{jsxref(\"Promise\")}} which resolves to an\n[ImageBitmap--](/docs/Web/API/ImageBitmap).",
  "api/credential": "The **`Credential`** interface of the [Credential Management API](/en-US/docs/Web/API/Credential_Management_API) provides information about an entity (usually a user) normally as a prerequisite to a trust decision.",
  "api/credential_management_api": "The Credential Management API lets a website store and retrieve password, public key, and federated credentials. These capabilities allow users to sign in without typing passwords, see the federated account they used to sign in to a site, and resume a session without the explicit sign-in flow of an expired session.",
  "api/credentialscontainer": "The **`CredentialsContainer`** interface of the [Credential Management API](/en-US/docs/Web/API/Credential_Management_API) exposes methods to request credentials and notify the user agent when events such as successful sign in or sign out happen. This interface is accessible from [Navigator.credentials--](/docs/Web/API/Navigator/credentials).",
  "api/crypto": "The **`Crypto`** interface represents basic cryptography features available in the current context.\nIt allows access to a cryptographically strong random number generator and to cryptographic primitives.",
  "api/crypto_property": "The global read-only **`crypto`** property returns the [Crypto--](/docs/Web/API/Crypto) object associated to the global object. This object allows web pages access to certain cryptographic related services.",
  "api/cryptokey": "The **`CryptoKey`** interface of the [Web Crypto API](/en-US/docs/Web/API/Web_Crypto_API) represents a cryptographic [key--](/docs/Glossary/key) obtained from one of the [SubtleCrypto--](/docs/Web/API/SubtleCrypto) methods [generateKey()--](/docs/Web/API/SubtleCrypto/generateKey), [deriveKey()--](/docs/Web/API/SubtleCrypto/deriveKey), [importKey()--](/docs/Web/API/SubtleCrypto/importKey), or [unwrapKey()--](/docs/Web/API/SubtleCrypto/unwrapKey).",
  "api/cryptokeypair": "The **`CryptoKeyPair`** dictionary of the [Web Crypto API](/en-US/docs/Web/API/Web_Crypto_API) represents a key pair for an asymmetric cryptography algorithm, also known as a public-key algorithm.",
  "api/cspviolationreportbody": "The `CSPViolationReportBody` interface contains the report data for a Content Security Policy (CSP) violation. CSP violations are thrown when the webpage attempts to load a resource that violates the CSP set by the [Content-Security-Policy--](/docs/Web/HTTP/Headers/Content-Security-Policy) HTTP header.",
  "api/css": "The **`CSS`** interface holds useful CSS-related methods. No objects with this interface are implemented: it contains only static methods and is therefore a utilitarian interface.",
  "api/css_counter_styles": "The CSS Counter Styles module allows to define custom counter styles, which can be used for CSS list-marker and generated-content counters.",
  "api/css_custom_highlight_api": "The CSS Custom Highlight API provides a mechanism for styling arbitrary text ranges on a document by using JavaScript to create the ranges, and CSS to style them.",
  "api/css_font_loading_api": "The CSS Font Loading API provides events and interfaces for dynamically loading font resources.",
  "api/css_object_model": "The **CSS Object Model** is a set of APIs allowing the manipulation of CSS from JavaScript. It is much like the DOM, but for the CSS rather than the HTML. It allows users to read and modify CSS style dynamically.",
  "api/css_painting_api": "The CSS Painting API — part of the [CSS Houdini](/en-US/docs/Web/API/Houdini_APIs) umbrella of APIs — allows developers to write JavaScript functions that can draw directly into an element's background, border, or content.",
  "api/css_properties_and_values_api": "The **CSS Properties and Values API** — part of the [CSS Houdini](/en-US/docs/Web/API/Houdini_APIs) umbrella of APIs — allows developers to explicitly define their [CSS custom properties--](/docs/Web/CSS/--*), allowing for property type checking, default values, and properties that do or do not inherit their value.",
  "api/css_typed_om_api": "The CSS Typed Object Model API simplifies CSS property manipulation by exposing CSS values as typed JavaScript objects rather than strings. This not only simplifies CSS manipulation, but also lessens the negative impact on performance as compared to [HTMLElement.style--](/docs/Web/API/HTMLElement/style).",
  "api/cssanimation": "The **`CSSAnimation`** interface of the [Web Animations API--](/docs/Web/API/Web_Animations_API) represents an [Animation--](/docs/Web/API/Animation) object.",
  "api/cssconditionrule": "An object implementing the **`CSSConditionRule`** interface represents a single condition CSS [at-rule](/en-US/docs/Web/CSS/At-rule), which consists of a condition and a statement block.",
  "api/csscontainerrule": "The **`CSSContainerRule`** interface represents a single CSS [@container--](/docs/Web/CSS/@container) rule.",
  "api/csscounterstylerule": "The **`CSSCounterStyleRule`** interface represents an [@counter-style--](/docs/Web/CSS/@counter-style) [at-rule](/en-US/docs/Web/CSS/At-rule).",
  "api/cssfontfacerule": "The **`CSSFontFaceRule`** interface represents an [@font-face--](/docs/Web/CSS/@font-face) [at-rule](/en-US/docs/Web/CSS/At-rule).",
  "api/cssfontfeaturevaluesrule": "The **`CSSFontFeatureValuesRule`** interface represents an [@font-feature-values--](/docs/Web/CSS/@font-feature-values) [at-rule](/en-US/docs/Web/CSS/At-rule), letting developers assign for each font face a common name to specify features indices to be used in [font-variant-alternates--](/docs/Web/CSS/font-variant-alternates).",
  "api/cssfontpalettevaluesrule": "The **`CSSFontPaletteValuesRule`** interface represents an [@font-palette-values--](/docs/Web/CSS/@font-palette-values) [at-rule](/en-US/docs/Web/CSS/At-rule).",
  "api/cssgroupingrule": "The **`CSSGroupingRule`** interface of the [CSS Object Model](/en-US/docs/Web/API/CSS_Object_Model) represents any CSS [at-rule](/en-US/docs/Web/CSS/At-rule) that contains other rules nested within it.",
  "api/cssimagevalue": "The **`CSSImageValue`** interface of the [CSS Typed Object Model API](/en-US/docs/Web/API/CSS_Object_Model#css_typed_object_model) represents values for properties that take an image, for example [background-image--](/docs/Web/CSS/background-image), [list-style-image--](/docs/Web/CSS/list-style-image), or [border-image-source--](/docs/Web/CSS/border-image-source).",
  "api/cssimportrule": "The **`CSSImportRule`** interface represents an [@import--](/docs/Web/CSS/@import) [at-rule](/en-US/docs/Web/CSS/At-rule).",
  "api/csskeyframerule": "The **`CSSKeyframeRule`** interface describes an object representing a set of styles for a given keyframe. It corresponds to the contents of a single keyframe of a [@keyframes--](/docs/Web/CSS/@keyframes) [at-rule](/en-US/docs/Web/CSS/At-rule).",
  "api/csskeyframesrule": "The **`CSSKeyframesRule`** interface describes an object representing a complete set of keyframes for a CSS animation. It corresponds to the contents of a whole [@keyframes--](/docs/Web/CSS/@keyframes) [at-rule](/en-US/docs/Web/CSS/At-rule).",
  "api/csskeywordvalue": "The **`CSSKeywordValue`** interface of the [CSS Typed Object Model API](/en-US/docs/Web/API/CSS_Object_Model#css_typed_object_model) creates an object to represent CSS keywords and other identifiers.",
  "api/csslayerblockrule": "The **`CSSLayerBlockRule`** represents a [@layer--](/docs/Web/CSS/@layer) block rule. It is a grouping at-rule meaning that it can contain other rules, and is associated to a given cascade layer, identified by its _name_.",
  "api/csslayerstatementrule": "The **`CSSLayerStatementRule`** represents a [@layer--](/docs/Web/CSS/@layer) statement rule. Unlike [CSSLayerBlockRule--](/docs/Web/API/CSSLayerBlockRule), it doesn't contain other rules and merely defines one or several layers by providing their names.",
  "api/cssmathinvert": "The **`CSSMathInvert`** interface of the [CSS_Object_Model#css_typed_object_model--](/docs/Web/API/CSS_Object_Model#css_typed_object_model) represents a CSS [calc()--](/docs/Web/CSS/calc) used as `calc(1 / <value>).` It inherits properties and methods from its parent [CSSNumericValue--](/docs/Web/API/CSSNumericValue).",
  "api/cssmathmax": "The **`CSSMathMax`** interface of the [CSS_Object_Model#css_typed_object_model--](/docs/Web/API/CSS_Object_Model#css_typed_object_model) represents the CSS [max()--](/docs/Web/CSS/max) function. It inherits properties and methods from its parent [CSSNumericValue--](/docs/Web/API/CSSNumericValue).",
  "api/cssmathmin": "The **`CSSMathMin`** interface of the [CSS_Object_Model#css_typed_object_model--](/docs/Web/API/CSS_Object_Model#css_typed_object_model) represents the CSS [min()--](/docs/Web/CSS/min) function. It inherits properties and methods from its parent [CSSNumericValue--](/docs/Web/API/CSSNumericValue).",
  "api/cssmathnegate": "The **`CSSMathNegate`** interface of the [CSS_Object_Model#css_typed_object_model--](/docs/Web/API/CSS_Object_Model#css_typed_object_model) negates the value passed into it. It inherits properties and methods from its parent [CSSNumericValue--](/docs/Web/API/CSSNumericValue).",
  "api/cssmathproduct": "The **`CSSMathProduct`** interface of the [CSS_Object_Model#css_typed_object_model--](/docs/Web/API/CSS_Object_Model#css_typed_object_model) represents the result obtained by calling [add()--](/docs/Web/API/CSSNumericValue/add), [sub()--](/docs/Web/API/CSSNumericValue/sub), or [toSum()--](/docs/Web/API/CSSNumericValue/toSum) on [CSSNumericValue--](/docs/Web/API/CSSNumericValue). It inherits properties and methods from its parent [CSSNumericValue--](/docs/Web/API/CSSNumericValue).",
  "api/cssmathsum": "The **`CSSMathSum`** interface of the [CSS_Object_Model#css_typed_object_model--](/docs/Web/API/CSS_Object_Model#css_typed_object_model) represents the result obtained by calling [add()--](/docs/Web/API/CSSNumericValue/add), [sub()--](/docs/Web/API/CSSNumericValue/sub), or [toSum()--](/docs/Web/API/CSSNumericValue/toSum) on [CSSNumericValue--](/docs/Web/API/CSSNumericValue).",
  "api/cssmathvalue": "The **`CSSMathValue`** interface of the [CSS_Object_Model#css_typed_object_model--](/docs/Web/API/CSS_Object_Model#css_typed_object_model) a base class for classes representing complex numeric values.",
  "api/cssmatrixcomponent": "The **`CSSMatrixComponent`** interface of the [CSS_Object_Model#css_typed_object_model--](/docs/Web/API/CSS_Object_Model#css_typed_object_model) represents the [matrix()](/en-US/docs/Web/CSS/transform-function/matrix) and [matrix3d()](/en-US/docs/Web/CSS/transform-function/matrix3d) values of the individual [transform--](/docs/Web/CSS/transform) property in CSS. It inherits properties and methods from its parent [CSSTransformValue--](/docs/Web/API/CSSTransformValue).",
  "api/cssmediarule": "The **`CSSMediaRule`** interface represents a single CSS [@media--](/docs/Web/CSS/@media) rule.",
  "api/cssnamespacerule": "The **`CSSNamespaceRule`** interface describes an object representing a single CSS [@namespace--](/docs/Web/CSS/@namespace) [at-rule](/en-US/docs/Web/CSS/At-rule).",
  "api/cssnumericarray": "The **`CSSNumericArray`** interface of the [CSS_Object_Model#css_typed_object_model--](/docs/Web/API/CSS_Object_Model#css_typed_object_model) contains a list of [CSSNumericValue--](/docs/Web/API/CSSNumericValue) objects.",
  "api/cssnumericvalue": "The **`CSSNumericValue`** interface of the [CSS Typed Object Model API](/en-US/docs/Web/API/CSS_Object_Model#css_typed_object_model) represents operations that all numeric values can perform.",
  "api/csspagerule": "**`CSSPageRule`** represents a single CSS [@page--](/docs/Web/CSS/@page) rule.",
  "api/cssperspective": "The **`CSSPerspective`** interface of the [CSS_Object_Model#css_typed_object_model--](/docs/Web/API/CSS_Object_Model#css_typed_object_model) represents the [perspective()](/en-US/docs/Web/CSS/transform-function/perspective) value of the individual [transform--](/docs/Web/CSS/transform) property in CSS. It inherits properties and methods from its parent [CSSTransformValue--](/docs/Web/API/CSSTransformValue).",
  "api/csspositionvalue": "The **`CSSPositionValue`** interface of the [CSS Typed Object Model API](/en-US/docs/Web/API/CSS_Object_Model#css_typed_object_model) represents values for properties that take a position, for example [object-position--](/docs/Web/CSS/object-position).",
  "api/cssprimitivevalue": "The **`CSSPrimitiveValue`** interface derives from the [CSSValue--](/docs/Web/API/CSSValue) interface and represents the current computed value of a CSS property.",
  "api/csspropertyrule": "The **`CSSPropertyRule`** interface of the [CSS Properties and Values API](/en-US/docs/Web/API/CSS_Properties_and_Values_API) represents a single CSS [@property--](/docs/Web/CSS/@property) rule.",
  "api/csspseudoelement": "The **`CSSPseudoElement`** interface represents a pseudo-element that may be the target of an event or animated using the [Web Animations API--](/docs/Web/API/Web_Animations_API). Instances of this interface may be obtained by calling [Element.pseudo()--](/docs/Web/API/Element/pseudo).",
  "api/cssrotate": "The **`CSSRotate`** interface of the [CSS_Object_Model#css_typed_object_model--](/docs/Web/API/CSS_Object_Model#css_typed_object_model) represents the rotate value of the individual [transform--](/docs/Web/CSS/transform) property in CSS. It inherits properties and methods from its parent [CSSTransformValue--](/docs/Web/API/CSSTransformValue).",
  "api/cssrule": "The **`CSSRule`** interface represents a single CSS rule. There are several types of rules which inherit properties from `CSSRule`.",
  "api/cssrulelist": "A `CSSRuleList` represents an ordered collection of read-only [CSSRule--](/docs/Web/API/CSSRule) objects.",
  "api/cssscale": "The **`CSSScale`** interface of the [CSS_Object_Model#css_typed_object_model--](/docs/Web/API/CSS_Object_Model#css_typed_object_model) represents the [scale()](/en-US/docs/Web/CSS/transform-function/scale) and [scale3d()](/en-US/docs/Web/CSS/transform-function/scale3d) values of the individual [transform--](/docs/Web/CSS/transform) property in CSS. It inherits properties and methods from its parent [CSSTransformValue--](/docs/Web/API/CSSTransformValue).",
  "api/cssscoperule": "The **`CSSScopeRule`** interface of the [CSS Object Model](/en-US/docs/Web/API/CSS_Object_Model) represents a CSS [@scope--](/docs/Web/CSS/@scope) at-rule.",
  "api/cssskew": "The **`CSSSkew`** interface of the [CSS_Object_Model#css_typed_object_model--](/docs/Web/API/CSS_Object_Model#css_typed_object_model) is part of the [CSSTransformValue--](/docs/Web/API/CSSTransformValue) interface. It represents the [`skew()`](/en-US/docs/Web/CSS/transform-function/skew) value of the individual [transform--](/docs/Web/CSS/transform) property in CSS.",
  "api/cssskewx": "The **`CSSSkewX`** interface of the [CSS_Object_Model#css_typed_object_model--](/docs/Web/API/CSS_Object_Model#css_typed_object_model) represents the [`skewX()`](/en-US/docs/Web/CSS/transform-function/skewX) value of the individual [transform--](/docs/Web/CSS/transform) property in CSS. It inherits properties and methods from its parent [CSSTransformValue--](/docs/Web/API/CSSTransformValue).",
  "api/cssskewy": "The **`CSSSkewY`** interface of the [CSS_Object_Model#css_typed_object_model--](/docs/Web/API/CSS_Object_Model#css_typed_object_model) represents the [`skewY()`](/en-US/docs/Web/CSS/transform-function/skewY) value of the individual [transform--](/docs/Web/CSS/transform) property in CSS. It inherits properties and methods from its parent [CSSTransformValue--](/docs/Web/API/CSSTransformValue).",
  "api/cssstartingstylerule": "The **`CSSStartingStyleRule`** interface of the [CSS Object Model](/en-US/docs/Web/API/CSS_Object_Model) represents a CSS [@starting-style--](/docs/Web/CSS/@starting-style) at-rule.",
  "api/cssstyledeclaration": "The **`CSSStyleDeclaration`** interface represents an object that is a CSS declaration block, and exposes style information and various style-related methods and properties.",
  "api/cssstylerule": "The **`CSSStyleRule`** interface represents a single CSS style rule.",
  "api/cssstylesheet": "The **`CSSStyleSheet`** interface represents a single [CSS](/en-US/docs/Web/CSS) stylesheet, and lets you inspect and modify the list of rules contained in the stylesheet. It inherits properties and methods from its parent, [StyleSheet--](/docs/Web/API/StyleSheet).",
  "api/cssstylevalue": "The **`CSSStyleValue`** interface of the [CSS Typed Object Model API](/en-US/docs/Web/API/CSS_Object_Model#css_typed_object_model) is the base class of all CSS values accessible through the Typed OM API. An instance of this class may be used anywhere a string is expected.",
  "api/csssupportsrule": "The **`CSSSupportsRule`** interface represents a single CSS [@supports--](/docs/Web/CSS/@supports) [at-rule](/en-US/docs/Web/CSS/At-rule).",
  "api/csstransformcomponent": "The **`CSSTransformComponent`** interface of the [CSS_Object_Model#css_typed_object_model--](/docs/Web/API/CSS_Object_Model#css_typed_object_model) is part of the [CSSTransformValue--](/docs/Web/API/CSSTransformValue) interface.",
  "api/csstransformvalue": "The **`CSSTransformValue`** interface of the [CSS_Object_Model#css_typed_object_model--](/docs/Web/API/CSS_Object_Model#css_typed_object_model) represents `transform-list` values as used by the CSS [transform--](/docs/Web/CSS/transform) property.",
  "api/csstransition": "The **`CSSTransition`** interface of the [Web Animations API--](/docs/Web/API/Web_Animations_API) represents an [Animation--](/docs/Web/API/Animation) object used for a [CSS Transition](/en-US/docs/Web/CSS/CSS_transitions).",
  "api/csstranslate": "The **`CSSTranslate`** interface of the [CSS_Object_Model#css_typed_object_model--](/docs/Web/API/CSS_Object_Model#css_typed_object_model) represents the [translate()](/en-US/docs/Web/CSS/transform-function/translate) value of the individual [transform--](/docs/Web/CSS/transform) property in CSS. It inherits properties and methods from its parent [CSSTransformValue--](/docs/Web/API/CSSTransformValue).",
  "api/cssunitvalue": "The **`CSSUnitValue`** interface of the [CSS_Object_Model#css_typed_object_model--](/docs/Web/API/CSS_Object_Model#css_typed_object_model) represents values that contain a single unit type. For example, \"42px\" would be represented by a `CSSNumericValue`.",
  "api/cssunparsedvalue": "The **`CSSUnparsedValue`** interface of the [CSS_Object_Model#css_typed_object_model--](/docs/Web/API/CSS_Object_Model#css_typed_object_model) represents property values that reference [custom properties](/en-US/docs/Web/CSS/CSS_cascading_variables). It consists of a list of string fragments and variable references.",
  "api/cssvalue": "The **`CSSValue`** interface represents the current computed value of a CSS property.",
  "api/cssvaluelist": "The **`CSSValueList`** interface derives from the [CSSValue--](/docs/Web/API/CSSValue) interface and provides the abstraction of an ordered collection of CSS values.",
  "api/cssvariablereferencevalue": "The **`CSSVariableReferenceValue`** interface of the [CSS_Object_Model#css_typed_object_model--](/docs/Web/API/CSS_Object_Model#css_typed_object_model) allows you to create a custom name for a built-in CSS value. This object functionality is sometimes called a \"CSS variable\" and serves the same purpose as the [var()--](/docs/Web/CSS/var) function. The custom name must begin with two dashes.",
  "api/customelementregistry": "The **`CustomElementRegistry`** interface provides methods for registering custom elements and querying registered elements. To get an instance of it, use the [window.customElements--](/docs/Web/API/window/customElements) property.",
  "api/customevent": "The **`CustomEvent`** interface represents events initialized by an application for any purpose.",
  "api/customstateset": "The **`CustomStateSet`** interface of the [Document Object Model](/en-US/docs/Web/API/Document_Object_Model) stores a list of states for an [autonomous custom element](/en-US/docs/Web/API/Web_components/Using_custom_elements#types_of_custom_element), and allows states to be added and removed from the set.",
  "api/datatransfer": "The **`DataTransfer`** object is used to hold the data that is being dragged during a drag and drop operation. It may hold one or more data items, each of one or more data types. For more information about drag and drop, see [HTML Drag and Drop API](/en-US/docs/Web/API/HTML_Drag_and_Drop_API).",
  "api/datatransferitem": "The **`DataTransferItem`** object represents one drag data item. During a _drag operation_, each [drag event--](/docs/Web/API/DragEvent) has a [dataTransfer--](/docs/Web/API/DragEvent/dataTransfer) property which contains a [list--](/docs/Web/API/DataTransferItemList) of drag data items. Each item in the list is a `DataTransferItem` object.",
  "api/datatransferitemlist": "The **`DataTransferItemList`** object is a list of [DataTransferItem--](/docs/Web/API/DataTransferItem) objects representing items being dragged. During a _drag operation_, each [DragEvent--](/docs/Web/API/DragEvent) has a [dataTransfer--](/docs/Web/API/DragEvent/dataTransfer) property and that property is a `DataTransferItemList`.",
  "api/decompressionstream": "The **`DecompressionStream`** interface of the [Compression Streams API--](/docs/Web/API/Compression_Streams_API) is an API for decompressing a stream of data.",
  "api/dedicatedworkerglobalscope": "The **`DedicatedWorkerGlobalScope`** object (the [Worker--](/docs/Web/API/Worker) global scope) is accessible through the [self--](/docs/Web/API/WorkerGlobalScope/self) keyword. Some additional global functions, namespaces objects, and constructors, not typically associated with the worker global scope, but available on it, are listed in the [JavaScript Reference](/en-US/docs/Web/JavaScript/Reference). See also: [Functions available to workers](/en-US/docs/Web/API/Web_Workers_API/Functions_and_classes_available_to_workers).",
  "api/delaynode": "The **`DelayNode`** interface represents a [delay-line](https://en.wikipedia.org/wiki/Digital_delay_line); an [AudioNode--](/docs/Web/API/AudioNode) audio-processing module that causes a delay between the arrival of an input data and its propagation to the output.",
  "api/deprecationreportbody": "The `DeprecationReportBody` interface of the [Reporting API](/en-US/docs/Web/API/Reporting_API) represents the body of a deprecation report.",
  "api/device_memory_api": "The capabilities of a client device largely depend on the amount of available RAM. Traditionally, developers had to use heuristics and either benchmark a device or infer device capabilities based on other factors like the device manufacturer or User Agent strings.",
  "api/device_orientation_events": "Device orientation events are events that allow you to [detect a device's physical orientation](/en-US/docs/Web/API/Device_orientation_events/Detecting_device_orientation#processing_orientation_events), as well as allowing you to [detect the device's motion](/en-US/docs/Web/API/Device_orientation_events/Detecting_device_orientation#processing_motion_events).",
  "api/devicemotionevent": "The **`DeviceMotionEvent`** interface of the [Device Orientation Events--](/docs/Web/API/Device_Orientation_Events) provides web developers with information about the speed of changes for the device's position and orientation.",
  "api/devicemotioneventacceleration": "The **`DeviceMotionEventAcceleration`** interface of the [Device Orientation Events--](/docs/Web/API/Device_Orientation_Events) provides information about the amount of acceleration the device is experiencing along all three axes.",
  "api/devicemotioneventrotationrate": "A **`DeviceMotionEventRotationRate`** interface of the [Device Orientation Events--](/docs/Web/API/Device_Orientation_Events) provides information about the rate at which the device is rotating around all three axes.",
  "api/deviceorientationevent": "The **`DeviceOrientationEvent`** interface of the [Device Orientation Events--](/docs/Web/API/Device_Orientation_Events) provides web developers with information from the physical orientation of the device running the web page.",
  "api/directoryentrysync": "The `DirectoryEntrySync` interface represents a directory in a file system. It includes methods for creating, reading, looking up, and recursively removing files in a directory.",
  "api/directoryreadersync": "The `DirectoryReaderSync` interface lets you read the entries in a directory.",
  "api/document": "The **`Document`** interface represents any web page loaded in the browser and serves as an entry point into the web page's content, which is the [DOM tree](/en-US/docs/Web/API/Document_object_model/Using_the_Document_Object_Model#what_is_a_dom_tree).",
  "api/document_object_model": "The **Document Object Model** (**DOM**) connects web pages to scripts or programming languages by representing the structure of a document—such as the HTML representing a web page—in memory. Usually it refers to JavaScript, even though modeling HTML, SVG, or XML documents as objects are not part of the core JavaScript language.",
  "api/document_picture-in-picture_api": "The **Document Picture-in-Picture API** makes it possible to open an always-on-top window that can be populated with arbitrary HTML content — for example a video with custom controls or a set of streams showing the participants of a video conference call. It extends the earlier [Picture-in-Picture API for `<video>`](/en-US/docs/Web/API/Picture-in-Picture_API), which specifically enables an HTML [video--](/docs/Web/HTML/Element/video) element to be put into an always-on-top window.",
  "api/documentfragment": "The **`DocumentFragment`** interface represents a minimal document object that has no parent.",
  "api/documentpictureinpicture": "The **`DocumentPictureInPicture`** interface of the [Document Picture-in-Picture API--](/docs/Web/API/Document_Picture-in-Picture_API) is the entry point for creating and handling document picture-in-picture windows.",
  "api/documentpictureinpictureevent": "The **`DocumentPictureInPictureEvent`** interface of the [Document Picture-in-Picture API--](/docs/Web/API/Document_Picture-in-Picture_API) is the event object for the [enter--](/docs/Web/API/DocumentPictureInPicture/enter_event) event, which fires when the Picture-in-Picture window is opened.",
  "api/documenttimeline": "The **`DocumentTimeline`** interface of the [Web Animations API](/en-US/docs/Web/API/Web_Animations_API) represents animation timelines, including the default document timeline (accessed via [Document.timeline--](/docs/Web/API/Document/timeline)).",
  "api/documenttype": "The **`DocumentType`** interface represents a [Node--](/docs/Web/API/Node) containing a doctype.",
  "api/domerror": "The **`DOMError`** interface describes an error object that contains an error name.",
  "api/domexception": "The **`DOMException`** interface represents an abnormal event (called an **exception**) that occurs as a result of calling a method or accessing a property of a web API. This is how error conditions are described in web APIs.",
  "api/domhighrestimestamp": "The **`DOMHighResTimeStamp`** type is a `double` and is used to store a time value in milliseconds.",
  "api/domimplementation": "The **`DOMImplementation`** interface represents an object providing methods which are not dependent on any particular document. Such an object is returned by the [Document.implementation--](/docs/Web/API/Document/implementation) property.",
  "api/dommatrix": "The **`DOMMatrix`** interface represents 4×4 matrices, suitable for 2D and 3D operations including rotation and translation. It is a mutable version of the [DOMMatrixReadOnly--](/docs/Web/API/DOMMatrixReadOnly) interface.",
  "api/dommatrixreadonly": "The **`DOMMatrixReadOnly`** interface represents a read-only 4×4 matrix, suitable for 2D and 3D operations. The [DOMMatrix--](/docs/Web/API/DOMMatrix) interface — which is based upon `DOMMatrixReadOnly`—adds [mutability](https://en.wikipedia.org/wiki/Immutable_object), allowing you to alter the matrix after creating it.",
  "api/domparser": "The **`DOMParser`** interface provides\nthe ability to parse [XML--](/docs/Glossary/XML) or [HTML--](/docs/Glossary/HTML) source code from a\nstring into a DOM [Document--](/docs/Web/API/Document).",
  "api/dompoint": "A **`DOMPoint`** object represents a 2D or 3D point in a coordinate system; it includes values for the coordinates in up to three dimensions, as well as an optional perspective value. `DOMPoint` is based on [DOMPointReadOnly--](/docs/Web/API/DOMPointReadOnly) but allows its properties' values to be changed.",
  "api/dompointreadonly": "The **`DOMPointReadOnly`** interface specifies the coordinate and perspective fields used by [DOMPoint--](/docs/Web/API/DOMPoint) to define a 2D or 3D point in a coordinate system.",
  "api/domquad": "A `DOMQuad` is a collection of four `DOMPoint`s defining the corners of an arbitrary quadrilateral. Returning `DOMQuad`s lets `getBoxQuads()` return accurate information even when arbitrary 2D or 3D transforms are present. It has a handy `bounds` attribute returning a `DOMRectReadOnly` for those cases where you just want an axis-aligned bounding rectangle.",
  "api/domrect": "A **`DOMRect`** describes the size and position of a rectangle.",
  "api/domrectreadonly": "The **`DOMRectReadOnly`** interface specifies the standard properties (also used by [DOMRect--](/docs/Web/API/DOMRect)) to define a rectangle whose properties are immutable.",
  "api/domstringlist": "The **`DOMStringList`** interface is a legacy type returned by some APIs and represents a non-modifiable list of strings (`DOMString`). Modern APIs use {{jsxref(\"Array\")}} objects (in WebIDL: `sequence<DOMString>`) instead.",
  "api/domstringmap": "The **`DOMStringMap`** interface is used for the [HTMLElement.dataset--](/docs/Web/API/HTMLElement/dataset) attribute, to represent data for custom attributes added to elements.",
  "api/domtokenlist": "The **`DOMTokenList`** interface represents a set of space-separated tokens. Such a set is returned by [Element.classList--](/docs/Web/API/Element/classList) or [HTMLLinkElement.relList--](/docs/Web/API/HTMLLinkElement/relList), and many others.",
  "api/dragevent": "The **`DragEvent`** interface is a [DOM event--](/docs/Web/API/Event) that represents a drag and drop interaction. The user initiates a drag by placing a pointer device (such as a mouse) on the touch surface and then dragging the pointer to a new location (such as another DOM element). Applications are free to interpret a drag and drop interaction in an application-specific way.",
  "api/dynamicscompressornode": "The `DynamicsCompressorNode` interface provides a compression effect, which lowers the volume of the loudest parts of the signal in order to help prevent clipping and distortion that can occur when multiple sounds are played and multiplexed together at once. This is often used in musical production and game audio. `DynamicsCompressorNode` is an [AudioNode--](/docs/Web/API/AudioNode) that has exactly one input and one output.",
  "api/ecdhkeyderiveparams": "The **`EcdhKeyDeriveParams`** dictionary of the [Web Crypto API](/en-US/docs/Web/API/Web_Crypto_API) represents the object that should be passed as the `algorithm` parameter into [SubtleCrypto.deriveKey()--](/docs/Web/API/SubtleCrypto/deriveKey), when using the [ECDH](/en-US/docs/Web/API/SubtleCrypto/deriveKey#ecdh) algorithm.",
  "api/ecdsaparams": "The **`EcdsaParams`** dictionary of the [Web Crypto API](/en-US/docs/Web/API/Web_Crypto_API) represents the object that should be passed as the `algorithm` parameter into [SubtleCrypto.sign()--](/docs/Web/API/SubtleCrypto/sign) or [SubtleCrypto.verify()--](/docs/Web/API/SubtleCrypto/verify) when using the [ECDSA](/en-US/docs/Web/API/SubtleCrypto/sign#ecdsa) algorithm.",
  "api/eckeygenparams": "The **`EcKeyGenParams`** dictionary of the [Web Crypto API](/en-US/docs/Web/API/Web_Crypto_API) represents the object that should be passed as the `algorithm` parameter into [SubtleCrypto.generateKey()--](/docs/Web/API/SubtleCrypto/generateKey), when generating any elliptic-curve-based key pair: that is, when the algorithm is identified as either of [ECDSA](/en-US/docs/Web/API/SubtleCrypto/sign#ecdsa) or [ECDH](/en-US/docs/Web/API/SubtleCrypto/deriveKey#ecdh).",
  "api/eckeyimportparams": "The **`EcKeyImportParams`** dictionary of the [Web Crypto API](/en-US/docs/Web/API/Web_Crypto_API) represents the object that should be passed as the `algorithm` parameter into [SubtleCrypto.importKey()--](/docs/Web/API/SubtleCrypto/importKey) or [SubtleCrypto.unwrapKey()--](/docs/Web/API/SubtleCrypto/unwrapKey), when generating any elliptic-curve-based key pair: that is, when the algorithm is identified as either of [ECDSA](/en-US/docs/Web/API/SubtleCrypto/sign#ecdsa) or [ECDH](/en-US/docs/Web/API/SubtleCrypto/deriveKey#ecdh).",
  "api/editcontext": "The **`EditContext`** interface represents the text edit context of an element that was made editable by using the [EditContext API--](/docs/Web/API/EditContext_API).",
  "api/editcontext_api": "The **EditContext API** can be used to build rich text editors on the web that support advanced text input experiences, such as [Input Method Editor--](/docs/Glossary/Input_Method_Editor) (IME) composition, emoji picker, or any other platform-specific editing-related UI surfaces.",
  "api/element": "**`Element`** is the most general base class from which all element objects (i.e. objects that represent elements) in a [Document--](/docs/Web/API/Document) inherit. It only has methods and properties common to all kinds of elements. More specific classes inherit from `Element`.",
  "api/elementinternals": "The **`ElementInternals`** interface of the [Document Object Model](/en-US/docs/Web/API/Document_Object_Model) gives web developers a way to allow custom elements to fully participate in HTML forms. It provides utilities for working with these elements in the same way you would work with any standard HTML form element, and also exposes the [Accessibility Object Model](https://wicg.github.io/aom/explainer.html) to the element.",
  "api/encodedaudiochunk": "The **`EncodedAudioChunk`** interface of the [WebCodecs API--](/docs/Web/API/WebCodecs_API) represents a chunk of encoded audio data.",
  "api/encodedvideochunk": "The **`EncodedVideoChunk`** interface of the [WebCodecs API--](/docs/Web/API/WebCodecs_API) represents a chunk of encoded video data.",
  "api/encoding_api": "The **Encoding API** provides a mechanism for handling text in various [character encodings--](/docs/Glossary/character_encoding), including legacy non-[UTF-8--](/docs/Glossary/UTF-8) encodings.",
  "api/encrypted_media_extensions_api": "The Encrypted Media Extensions API provides interfaces for controlling the playback of content which is subject to a digital restrictions management scheme.",
  "api/errorevent": "The **`ErrorEvent`** interface represents events providing information related to errors in scripts or in files.",
  "api/event": "The **`Event`** interface represents an event which takes place on an [`EventTarget`](/en-US/docs/Web/API/EventTarget).",
  "api/eventcounts": "The **`EventCounts`** interface of the [Performance API](/en-US/docs/Web/API/Performance_API) provides the number of events that have been dispatched for each event type.",
  "api/eventsource": "The **`EventSource`** interface is web content's interface to [server-sent events](/en-US/docs/Web/API/Server-sent_events).",
  "api/eventtarget": "The **`EventTarget`** interface is implemented by objects that can receive events and may have listeners for them.\nIn other words, any target of events implements the three methods associated with this interface.",
  "api/ext_blend_minmax": "The **`EXT_blend_minmax`** extension is part of the [WebGL API](/en-US/docs/Web/API/WebGL_API) and extends blending capabilities by adding two new blend equations: the minimum or maximum color components of the source and destination colors.",
  "api/ext_color_buffer_float": "The **`EXT_color_buffer_float`** extension is part of [WebGL](/en-US/docs/Web/API/WebGL_API) and adds the ability to render a variety of floating point formats.",
  "api/ext_color_buffer_half_float": "The **`EXT_color_buffer_half_float`** extension is part of the [WebGL API](/en-US/docs/Web/API/WebGL_API) and adds the ability to render to 16-bit floating-point color buffers.",
  "api/ext_disjoint_timer_query": "The **EXT_disjoint_timer_query** extension is part of the [WebGL API](/en-US/docs/Web/API/WebGL_API) and provides a way to measure the duration of a set of GL commands, without stalling the rendering pipeline.",
  "api/ext_float_blend": "The [WebGL API](/en-US/docs/Web/API/WebGL_API)'s `EXT_float_blend` extension allows blending and draw buffers with 32-bit floating-point components.",
  "api/ext_frag_depth": "The **`EXT_frag_depth`** extension is part of the [WebGL API](/en-US/docs/Web/API/WebGL_API) and enables to set a depth value of a fragment from within the fragment shader.",
  "api/ext_shader_texture_lod": "The **`EXT_shader_texture_lod`** extension is part of the [WebGL API](/en-US/docs/Web/API/WebGL_API) and adds additional texture functions to the OpenGL ES Shading Language which provide the shader writer with explicit control of LOD ([Level of detail](https://en.wikipedia.org/wiki/Level_of_detail)).",
  "api/ext_srgb": "The **`EXT_sRGB`** extension is part of the [WebGL API](/en-US/docs/Web/API/WebGL_API) and adds sRGB support to textures and framebuffer objects.",
  "api/ext_texture_compression_bptc": "The `EXT_texture_compression_bptc` extension is part of the [WebGL API](/en-US/docs/Web/API/WebGL_API) and exposes 4 BPTC compressed texture formats. These compression formats are called [BC7](https://docs.microsoft.com/windows/win32/direct3d11/bc7-format) and [BC6H](https://docs.microsoft.com/windows/win32/direct3d11/bc6h-format) in [Microsoft's DirectX API](https://docs.microsoft.com/windows/win32/direct3d11/texture-block-compression-in-direct3d-11).",
  "api/ext_texture_compression_rgtc": "The `EXT_texture_compression_rgtc` extension is part of the [WebGL API](/en-US/docs/Web/API/WebGL_API) and exposes 4 RGTC compressed texture formats. RGTC is a block-based texture compression format suited for unsigned and signed red and red-green textures (**R**ed-**G**reen **T**exture **C**ompression).",
  "api/ext_texture_filter_anisotropic": "The **`EXT_texture_filter_anisotropic`** extension is part of the [WebGL API](/en-US/docs/Web/API/WebGL_API) and exposes two constants for [anisotropic filtering (AF)](https://en.wikipedia.org/wiki/Anisotropic_filtering).",
  "api/ext_texture_norm16": "The **`EXT_texture_norm16`** extension is part of the [WebGL API](/en-US/docs/Web/API/WebGL_API) and provides a set of new 16-bit signed normalized and unsigned normalized formats (fixed-point texture, renderbuffer and texture buffer).",
  "api/extendablecookiechangeevent": "The **`ExtendableCookieChangeEvent`** interface of the [Cookie Store API--](/docs/Web/API/Cookie_Store_API) is the event type passed to [cookiechange--](/docs/Web/API/ServiceWorkerGlobalScope/cookiechange_event) event fired at the [ServiceWorkerGlobalScope--](/docs/Web/API/ServiceWorkerGlobalScope) when any cookie changes occur which match the service worker's cookie change subscription list. A cookie change event consists of a cookie and a type. (either \"changed\" or \"deleted\")",
  "api/extendableevent": "The **`ExtendableEvent`** interface extends the lifetime of the [`install`](/en-US/docs/Web/API/ServiceWorkerGlobalScope/install_event) and [`activate`](/en-US/docs/Web/API/ServiceWorkerGlobalScope/activate_event) events dispatched on the global scope as part of the service worker lifecycle. This ensures that any functional events (like [FetchEvent--](/docs/Web/API/FetchEvent)) are not dispatched until it upgrades database schemas and deletes the outdated cache entries.",
  "api/extendablemessageevent": "The **`ExtendableMessageEvent`** interface of the [Service Worker API](/en-US/docs/Web/API/Service_Worker_API) represents the event object of a [message--](/docs/Web/API/ServiceWorkerGlobalScope/message_event) event fired on a service worker (when a message is received on the [ServiceWorkerGlobalScope--](/docs/Web/API/ServiceWorkerGlobalScope) from another context) — extends the lifetime of such events.",
  "api/eyedropper": "The **`EyeDropper`** interface represents an instance of an eyedropper tool that can be opened and used by the user to select colors from the screen.",
  "api/eyedropper_api": "The **EyeDropper API** provides a mechanism for creating an eyedropper tool. Using this tool, users can sample colors from their screens, including outside of the browser window.",
  "api/featurepolicy": "The `FeaturePolicy` interface represents the set of [Permissions Policies](/en-US/docs/Web/HTTP/Permissions_Policy) applied to the current execution context.",
  "api/fedcm_api": "The **Federated Credential Management API** (or _FedCM API_) provides a standard mechanism for identity providers (IdPs) to make identity federation services available on the web in a privacy-preserving way, without the need for third-party cookies and redirects. This includes a JavaScript API that enables the use of federated authentication for activities such as signing in or signing up on a website.",
  "api/federatedcredential": "The **`FederatedCredential`** interface of the [Credential Management API](/en-US/docs/Web/API/Credential_Management_API) provides information about credentials from a federated identity provider. A federated identity provider is an entity that a website trusts to correctly authenticate a user, and that provides an API for that purpose. [OpenID Connect](https://openid.net/developers/specs/) is an example of a federated identity provider framework.",
  "api/fence": "The **`Fence`** interface of the [Fenced Frame API--](/docs/Web/API/Fenced_Frame_API) contains several functions relevant to [fencedframe--](/docs/Web/HTML/Element/fencedframe) functionality.",
  "api/fenced_frame_api": "The **Fenced Frame API** provides functionality for controlling content embedded in [fencedframe--](/docs/Web/HTML/Element/fencedframe) elements.",
  "api/fencedframeconfig": "The **`FencedFrameConfig`** interface represents the navigation of a [fencedframe--](/docs/Web/HTML/Element/fencedframe), i.e. what content will be displayed in it.",
  "api/fetch": "The global **`fetch()`** method starts the process of fetching a resource from the network, returning a promise that is fulfilled once the response is available.",
  "api/fetch_api": "The Fetch API provides an interface for fetching resources (including across the network). It is a more powerful and flexible replacement for [XMLHttpRequest--](/docs/Web/API/XMLHttpRequest).",
  "api/fetchevent": "This is the event type for `fetch` events dispatched on the [service worker global scope--](/docs/Web/API/ServiceWorkerGlobalScope). It contains information about the fetch, including the request and how the receiver will treat the response. It provides the [event.respondWith()--](/docs/Web/API/FetchEvent/respondWith) method, which allows us to provide a response to this fetch.",
  "api/file": "The **`File`** interface provides information about files and allows JavaScript in a web page to access their content.",
  "api/file_and_directory_entries_api": "The File and Directory Entries API simulates a local file system that web apps can navigate within and access files in. You can develop apps which read, write, and create files and/or directories in a virtual, sandboxed file system.",
  "api/file_api": "",
  "api/file_system_api": "The **File System API** — with extensions provided via the [**File System Access API**](https://wicg.github.io/file-system-access/) to access files on the device file system — allows read, write and file management capabilities.",
  "api/fileentrysync": "The `FileEntrySync` interface represents a file in a file system. It lets you write content to a file.",
  "api/filelist": "The **`FileList`** interface represents an object of this type returned by the `files` property of the HTML [input--](/docs/Web/HTML/Element/input) element; this lets you access the list of files selected with the `<input type=\"file\">` element. It's also used for a list of files dropped into web content when using the drag and drop API; see the [DataTransfer--](/docs/Web/API/DataTransfer) object for details on this usage.",
  "api/filereader": "The **`FileReader`** object lets web applications asynchronously read the contents of files (or raw data buffers) stored on the user's computer, using [File--](/docs/Web/API/File) or [Blob--](/docs/Web/API/Blob) objects to specify the file or data to read.",
  "api/filereadersync": "The **`FileReaderSync`** interface allows to read [File--](/docs/Web/API/File) or [Blob--](/docs/Web/API/Blob) objects synchronously. This interface is [only available](/en-US/docs/Web/API/Web_Workers_API/Functions_and_classes_available_to_workers) in [workers](/en-US/docs/Web/API/Worker) as it enables synchronous I/O that could potentially block.",
  "api/filesystem": "The File and Directory Entries API interface **`FileSystem`** is used to represent a file system. These objects can be obtained from the [filesystem--](/docs/Web/API/FileSystemEntry/filesystem) property on any file system entry. Some browsers offer additional APIs to create and manage file systems, such as Chrome's [requestFileSystem()--](/docs/Web/API/Window/requestFileSystem) method.",
  "api/filesystemdirectoryentry": "The **`FileSystemDirectoryEntry`** interface of the [File and Directory Entries API](/en-US/docs/Web/API/File_and_Directory_Entries_API) represents a directory in a file system. It provides methods which make it possible to access and manipulate the files in a directory, as well as to access the entries within the directory.",
  "api/filesystemdirectoryhandle": "The **`FileSystemDirectoryHandle`** interface of the [File System API--](/docs/Web/API/File_System_API) provides a handle to a file system directory.",
  "api/filesystemdirectoryreader": "The `FileSystemDirectoryReader` interface of the [File and Directory Entries API](/en-US/docs/Web/API/File_and_Directory_Entries_API) lets you access the [FileSystemFileEntry--](/docs/Web/API/FileSystemFileEntry)-based objects (generally [FileSystemFileEntry--](/docs/Web/API/FileSystemFileEntry) or [FileSystemDirectoryEntry--](/docs/Web/API/FileSystemDirectoryEntry)) representing each entry in a directory.",
  "api/filesystementry": "The **`FileSystemEntry`** interface of the File and Directory Entries API represents a single entry in a file system. The entry can be a file or a directory (directories are represented by the [FileSystemDirectoryEntry--](/docs/Web/API/FileSystemDirectoryEntry) interface). It includes methods for working with files—including copying, moving, removing, and reading files—as well as information about a file it points to—including the file name and its path from the root to the entry.",
  "api/filesystemfileentry": "The **`FileSystemFileEntry`** interface of the [File and Directory Entries API](/en-US/docs/Web/API/File_and_Directory_Entries_API/Introduction) represents a file in a file system. It offers properties describing the file's attributes, as well as the [file()--](/docs/Web/API/FileSystemFileEntry/file) method, which creates a [File--](/docs/Web/API/File) object that can be used to read the file.",
  "api/filesystemfilehandle": "The **`FileSystemFileHandle`** interface of the [File System API--](/docs/Web/API/File_System_API) represents a handle to a file system entry. The interface is accessed through the [window.showOpenFilePicker()--](/docs/Web/API/window/showOpenFilePicker) method.",
  "api/filesystemhandle": "The **`FileSystemHandle`** interface of the [File System API--](/docs/Web/API/File_System_API) is an object which represents a file or directory entry. Multiple handles can represent the same entry. For the most part you do not work with `FileSystemHandle` directly but rather its child interfaces [FileSystemFileHandle--](/docs/Web/API/FileSystemFileHandle) and [FileSystemDirectoryHandle--](/docs/Web/API/FileSystemDirectoryHandle).",
  "api/filesystemsync": "In the [File and Directory Entries API](/en-US/docs/Web/API/File_and_Directory_Entries_API/Introduction), a `FileSystemSync` object represents a file system. It has two properties.",
  "api/filesystemsyncaccesshandle": "The **`FileSystemSyncAccessHandle`** interface of the [File System API--](/docs/Web/API/File_System_API) represents a synchronous handle to a file system entry.",
  "api/filesystemwritablefilestream": "The **`FileSystemWritableFileStream`** interface of the [File System API--](/docs/Web/API/File_System_API) is a [WritableStream--](/docs/Web/API/WritableStream) object with additional convenience methods, which operates on a single file on disk. The interface is accessed through the [FileSystemFileHandle.createWritable()--](/docs/Web/API/FileSystemFileHandle/createWritable) method.",
  "api/focusevent": "The **`FocusEvent`** interface represents focus-related events, including [focus--](/docs/Web/API/Element/focus_event), [blur--](/docs/Web/API/Element/blur_event), [focusin--](/docs/Web/API/Element/focusin_event), and [focusout--](/docs/Web/API/Element/focusout_event).",
  "api/fontdata": "The **`FontData`** interface of the [Local Font Access API--](/docs/Web/API/Local_Font_Access_API) represents a single local font face.",
  "api/fontface": "The **`FontFace`** interface of the [CSS Font Loading API](/en-US/docs/Web/API/CSS_Font_Loading_API) represents a single usable font face.",
  "api/fontfaceset": "The **`FontFaceSet`** interface of the [CSS Font Loading API](/en-US/docs/Web/API/CSS_Font_Loading_API) manages the loading of font-faces and querying of their download status.",
  "api/fontfacesetloadevent": "The **`FontFaceSetLoadEvent`** interface of the [CSS Font Loading API](/en-US/docs/Web/API/CSS_Font_Loading_API) represents events fired at a [FontFaceSet--](/docs/Web/API/FontFaceSet) after it starts loading font faces.",
  "api/force_touch_events": "**Force Touch Events** are a proprietary, Apple-specific feature which makes possible (where supported by the input hardware) new interactions based on how hard the user clicks or presses down on the touchscreen or trackpad.",
  "api/formdata": "The **`FormData`** interface provides a way to construct a set of key/value pairs representing form fields and their values, which can be sent using the [fetch()--](/docs/Web/API/fetch), [XMLHttpRequest.send()--](/docs/Web/API/XMLHttpRequest/send) or [navigator.sendBeacon()--](/docs/Web/API/navigator/sendBeacon) methods. It uses the same format a form would use if the encoding type were set to `\"multipart/form-data\"`.",
  "api/formdataevent": "The **`FormDataEvent`** interface represents a [`formdata` event](/en-US/docs/Web/API/HTMLFormElement/formdata_event) — such an event is fired on an [HTMLFormElement--](/docs/Web/API/HTMLFormElement) object after the entry list representing the form's data is constructed. This happens when the form is submitted, but can also be triggered by the invocation of a [FormData()--](/docs/Web/API/FormData/FormData) constructor.",
  "api/fragmentdirective": "The **`FragmentDirective`** interface is an object exposed for feature detectability, that is, whether or not a browser supports text fragments.",
  "api/fullscreen_api": "The **Fullscreen API** adds methods to present a specific [Element--](/docs/Web/API/Element) (and its descendants) in fullscreen mode, and to exit fullscreen mode once it is no longer needed. This makes it possible to present desired content—such as an online game—using the user's entire screen, removing all browser user interface elements and other applications from the screen until fullscreen mode is shut off.",
  "api/gainnode": "The `GainNode` interface represents a change in volume. It is an [AudioNode--](/docs/Web/API/AudioNode) audio-processing module that causes a given gain to be applied to the input data before its propagation to the output. A `GainNode` always has exactly one input and one output, both with the same number of channels.",
  "api/gamepad": "The **`Gamepad`** interface of the [Gamepad API](/en-US/docs/Web/API/Gamepad_API) defines an individual gamepad or other controller, allowing access to information such as button presses, axis positions, and id.",
  "api/gamepad_api": "The **Gamepad API** is a way for developers to access and respond to signals from gamepads and other game controllers in a simple, consistent way. It contains three interfaces, two events and one specialist function, to respond to gamepads being connected and disconnected, and to access other information about the gamepads themselves, and what buttons and other controls are currently being pressed.",
  "api/gamepadbutton": "The **`GamepadButton`** interface defines an individual button of a gamepad or other controller, allowing access to the current state of different types of buttons available on the control device.",
  "api/gamepadevent": "The GamepadEvent interface of the Gamepad API contains references to gamepads connected to the system, which is what the gamepad events [gamepadconnected--](/docs/Web/API/Window/gamepadconnected_event) and [gamepaddisconnected--](/docs/Web/API/Window/gamepaddisconnected_event) are fired in response to.",
  "api/gamepadhapticactuator": "The **`GamepadHapticActuator`** interface of the [Gamepad API](/en-US/docs/Web/API/Gamepad_API) represents hardware in the controller designed to provide haptic feedback to the user (if available), most commonly vibration hardware.",
  "api/gamepadpose": "The **`GamepadPose`** interface of the [Gamepad API](/en-US/docs/Web/API/Gamepad_API) represents the pose of a [WebVR](/en-US/docs/Web/API/WebVR_API) controller at a given timestamp (which includes orientation, position, velocity, and acceleration information).",
  "api/geolocation": "The **`Geolocation`** interface represents an object able to obtain the position of the device programmatically. It gives Web content access to the location of the device. This allows a website or app to offer customized results based on the user's location.",
  "api/geolocation_api": "The **Geolocation API** allows the user to provide their location to web applications if they so desire. For privacy reasons, the user is asked for permission to report location information.",
  "api/geolocationcoordinates": "The **`GeolocationCoordinates`** interface represents the position and altitude of the device on Earth, as well as the accuracy with which these properties are calculated.\nThe geographic position information is provided in terms of World Geodetic System coordinates (WGS84).",
  "api/geolocationposition": "The **`GeolocationPosition`** interface represents the position of the concerned device at a given time. The position, represented by a [GeolocationCoordinates--](/docs/Web/API/GeolocationCoordinates) object, comprehends the 2D position of the device, on a spheroid representing the Earth, but also its altitude and its speed.",
  "api/geolocationpositionerror": "The **`GeolocationPositionError`** interface represents the reason of an error occurring when using the geolocating device.",
  "api/geometry_interfaces": "**Geometry interfaces** is a CSS module that provides interfaces for working with 3D and 2D graphics — in particular, for working with points, rectangles, quadrilaterals and [transformation matrices](/en-US/docs/Web/API/WebGL_API/Matrix_math_for_the_web#transformation_matrices) (for operations that translate/move, scale, rotate, skew/shear/slant, and flip graphics, as well as for multiplying/chaining and inverting/undoing those operations).",
  "api/gestureevent": "The **`GestureEvent`** is a proprietary interface specific to WebKit which gives information regarding multi-touch gestures. Events using this interface include [gesturestart--](/docs/Web/API/Element/gesturestart_event), [gesturechange--](/docs/Web/API/Element/gesturechange_event), and [gestureend--](/docs/Web/API/Element/gestureend_event).",
  "api/gpu": "The **`GPU`** interface of the [WebGPU API--](/docs/Web/API/WebGPU_API) is the starting point for using WebGPU. It can be used to return a [GPUAdapter--](/docs/Web/API/GPUAdapter) from which you can request devices, configure features and limits, and more.",
  "api/gpuadapter": "The **`GPUAdapter`** interface of the [WebGPU API--](/docs/Web/API/WebGPU_API) represents a GPU adapter. From this you can request a [GPUDevice--](/docs/Web/API/GPUDevice), adapter info, features, and limits.",
  "api/gpuadapterinfo": "The **`GPUAdapterInfo`** interface of the [WebGPU API--](/docs/Web/API/WebGPU_API) contains identifying information about a [GPUAdapter--](/docs/Web/API/GPUAdapter).",
  "api/gpubindgroup": "The **`GPUBindGroup`** interface of the [WebGPU API--](/docs/Web/API/WebGPU_API) is based on a [GPUBindGroupLayout--](/docs/Web/API/GPUBindGroupLayout) and defines a set of resources to be bound together in a group and how those resources are used in shader stages.",
  "api/gpubindgrouplayout": "The **`GPUBindGroupLayout`** interface of the [WebGPU API--](/docs/Web/API/WebGPU_API) defines the structure and purpose of related GPU resources such as buffers that will be used in a pipeline, and is used as a template when creating [GPUBindGroup--](/docs/Web/API/GPUBindGroup)s.",
  "api/gpubuffer": "The **`GPUBuffer`** interface of the [WebGPU API--](/docs/Web/API/WebGPU_API) represents a block of memory that can be used to store raw data to use in GPU operations.",
  "api/gpucanvascontext": "The **`GPUCanvasContext`** interface of the [WebGPU API--](/docs/Web/API/WebGPU_API) represents the WebGPU rendering context of a [canvas--](/docs/Web/HTML/Element/canvas) element, returned via an [HTMLCanvasElement.getContext()--](/docs/Web/API/HTMLCanvasElement/getContext) call with a `contextType` of `\"webgpu\"`.",
  "api/gpucommandbuffer": "The **`GPUCommandBuffer`** interface of the [WebGPU API--](/docs/Web/API/WebGPU_API) represents a pre-recorded list of GPU commands that can be submitted to a [GPUQueue--](/docs/Web/API/GPUQueue) for execution.",
  "api/gpucommandencoder": "The **`GPUCommandEncoder`** interface of the [WebGPU API--](/docs/Web/API/WebGPU_API) represents a command encoder, used to encode commands to be issued to the GPU.",
  "api/gpucompilationinfo": "The **`GPUCompilationInfo`** interface of the [WebGPU API--](/docs/Web/API/WebGPU_API) represents an array of [GPUCompilationMessage--](/docs/Web/API/GPUCompilationMessage) objects generated by the GPU shader module compiler to help diagnose problems with shader code.",
  "api/gpucompilationmessage": "The **`GPUCompilationMessage`** interface of the [WebGPU API--](/docs/Web/API/WebGPU_API) represents a single informational, warning, or error message generated by the GPU shader module compiler.",
  "api/gpucomputepassencoder": "The **`GPUComputePassEncoder`** interface of the [WebGPU API--](/docs/Web/API/WebGPU_API) encodes commands related to controlling the compute shader stage, as issued by a [GPUComputePipeline--](/docs/Web/API/GPUComputePipeline). It forms part of the overall encoding activity of a [GPUCommandEncoder--](/docs/Web/API/GPUCommandEncoder).",
  "api/gpucomputepipeline": "The **`GPUComputePipeline`** interface of the [WebGPU API--](/docs/Web/API/WebGPU_API) represents a pipeline that controls the compute shader stage and can be used in a [GPUComputePassEncoder--](/docs/Web/API/GPUComputePassEncoder).",
  "api/gpudevice": "The **`GPUDevice`** interface of the [WebGPU API--](/docs/Web/API/WebGPU_API) represents a logical GPU device. This is the main interface through which the majority of WebGPU functionality is accessed.",
  "api/gpudevicelostinfo": "The **`GPUDeviceLostInfo`** interface of the [WebGPU API--](/docs/Web/API/WebGPU_API) represents the object returned when the [GPUDevice.lost--](/docs/Web/API/GPUDevice/lost) {{jsxref(\"Promise\")}} resolves. This provides information as to why a device has been lost.",
  "api/gpuerror": "The **`GPUError`** interface of the [WebGPU API--](/docs/Web/API/WebGPU_API) is the base interface for errors surfaced by [GPUDevice.popErrorScope--](/docs/Web/API/GPUDevice/popErrorScope) and the [uncapturederror--](/docs/Web/API/GPUDevice/uncapturederror_event) event.",
  "api/gpuexternaltexture": "The **`GPUExternalTexture`** interface of the [WebGPU API--](/docs/Web/API/WebGPU_API) represents a wrapper object containing an [HTMLVideoElement--](/docs/Web/API/HTMLVideoElement) snapshot that can be used as a texture in GPU rendering operations.",
  "api/gpuinternalerror": "The **`GPUInternalError`** interface of the [WebGPU API--](/docs/Web/API/WebGPU_API) describes an application error indicating that an operation did not pass the WebGPU API's validation constraints.",
  "api/gpuoutofmemoryerror": "The **`GPUOutOfMemoryError`** interface of the [WebGPU API--](/docs/Web/API/WebGPU_API) describes an out-of-memory (oom) error indicating that there was not enough free memory to complete the requested operation.",
  "api/gpupipelineerror": "The **`GPUPipelineError`** interface of the [WebGPU API--](/docs/Web/API/WebGPU_API) describes a pipeline failure. This is the value received when a {{jsxref(\"Promise\")}} returned by a [GPUDevice.createComputePipelineAsync()--](/docs/Web/API/GPUDevice/createComputePipelineAsync) or [GPUDevice.createRenderPipelineAsync()--](/docs/Web/API/GPUDevice/createRenderPipelineAsync) call rejects.",
  "api/gpupipelinelayout": "The **`GPUPipelineLayout`** interface of the [WebGPU API--](/docs/Web/API/WebGPU_API) defines the [GPUBindGroupLayout--](/docs/Web/API/GPUBindGroupLayout)s used by a pipeline. [GPUBindGroup--](/docs/Web/API/GPUBindGroup)s used with the pipeline during command encoding must have compatible [GPUBindGroupLayout--](/docs/Web/API/GPUBindGroupLayout)s.",
  "api/gpuqueryset": "The **`GPUQuerySet`** interface of the [WebGPU API--](/docs/Web/API/WebGPU_API) is used to record the results of queries on passes, such as occlusion or timestamp queries.",
  "api/gpuqueue": "The **`GPUQueue`** interface of the [WebGPU API--](/docs/Web/API/WebGPU_API) controls execution of encoded commands on the GPU.",
  "api/gpurenderbundle": "The **`GPURenderBundle`** interface of the [WebGPU API--](/docs/Web/API/WebGPU_API) represents a container for pre-recorded bundles of commands.",
  "api/gpurenderbundleencoder": "The **`GPURenderBundleEncoder`** interface of the [WebGPU API--](/docs/Web/API/WebGPU_API) is used to pre-record bundles of commands.",
  "api/gpurenderpassencoder": "The **`GPURenderPassEncoder`** interface of the [WebGPU API--](/docs/Web/API/WebGPU_API) encodes commands related to controlling the vertex and fragment shader stages, as issued by a [GPURenderPipeline--](/docs/Web/API/GPURenderPipeline). It forms part of the overall encoding activity of a [GPUCommandEncoder--](/docs/Web/API/GPUCommandEncoder).",
  "api/gpurenderpipeline": "The **`GPURenderPipeline`** interface of the [WebGPU API--](/docs/Web/API/WebGPU_API) represents a pipeline that controls the vertex and fragment shader stages and can be used in a [GPURenderPassEncoder--](/docs/Web/API/GPURenderPassEncoder) or [GPURenderBundleEncoder--](/docs/Web/API/GPURenderBundleEncoder).",
  "api/gpusampler": "The **`GPUSampler`** interface of the [WebGPU API--](/docs/Web/API/WebGPU_API) represents an object that can control how shaders transform and filter texture resource data.",
  "api/gpushadermodule": "The **`GPUShaderModule`** interface of the [WebGPU API--](/docs/Web/API/WebGPU_API) represents an internal shader module object, a container for [WGSL](https://gpuweb.github.io/gpuweb/wgsl/) shader code that can be submitted to the GPU for execution by a pipeline.",
  "api/gpusupportedfeatures": "The **`GPUSupportedFeatures`** interface of the [WebGPU API--](/docs/Web/API/WebGPU_API) is a [`Set`-like object](/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set#set-like_browser_apis) that describes additional functionality supported by a [GPUAdapter--](/docs/Web/API/GPUAdapter).",
  "api/gpusupportedlimits": "The **`GPUSupportedLimits`** interface of the [WebGPU API--](/docs/Web/API/WebGPU_API) describes the limits supported by a [GPUAdapter--](/docs/Web/API/GPUAdapter).",
  "api/gputexture": "The **`GPUTexture`** interface of the [WebGPU API--](/docs/Web/API/WebGPU_API) represents a container used to store 1D, 2D, or 3D arrays of data, such as images, to use in GPU rendering operations.",
  "api/gputextureview": "The **`GPUTextureView`** interface of the [WebGPU API--](/docs/Web/API/WebGPU_API) represents a view into a subset of the texture resources defined by a particular [GPUTexture--](/docs/Web/API/GPUTexture).",
  "api/gpuuncapturederrorevent": "The **`GPUUncapturedErrorEvent`** interface of the [WebGPU API--](/docs/Web/API/WebGPU_API) is the event object type for the [GPUDevice--](/docs/Web/API/GPUDevice) [uncapturederror--](/docs/Web/API/GPUDevice/uncapturederror_event) event, used for telemetry and to report unexpected errors.",
  "api/gpuvalidationerror": "The **`GPUValidationError`** interface of the [WebGPU API--](/docs/Web/API/WebGPU_API) describes an application error indicating that an operation did not pass the WebGPU API's validation constraints.",
  "api/gravitysensor": "The **`GravitySensor`** interface of the [Sensor APIs](/en-US/docs/Web/API/Sensor_APIs) provides on each reading the gravity applied to the device along all three axes.",
  "api/gyroscope": "The **`Gyroscope`** interface of the [Sensor APIs](/en-US/docs/Web/API/Sensor_APIs) provides on each reading the angular velocity of the device along all three axes.",
  "api/hashchangeevent": "The **`HashChangeEvent`** interface represents events that fire when the fragment identifier of the URL has changed.",
  "api/headers": "The **`Headers`** interface of the [Fetch API](/en-US/docs/Web/API/Fetch_API) allows you to perform various actions on [HTTP request and response headers](/en-US/docs/Web/HTTP/Headers). These actions include retrieving, setting, adding to, and removing headers from the list of the request's headers.",
  "api/hid": "The **`HID`** interface provides methods for connecting to _HID devices_, listing attached HID devices and event handlers for connected HID devices.",
  "api/hidconnectionevent": "The **`HIDConnectionEvent`** interface of the [WebHID API--](/docs/Web/API/WebHID_API) represents HID connection events, and is the event type passed to [connect--](/docs/Web/API/HID/connect_event) and [disconnect--](/docs/Web/API/HID/disconnect_event) event handlers when an input report is received.",
  "api/hiddevice": "The **`HIDDevice`** interface of the [WebHID API--](/docs/Web/API/WebHID_API) represents a HID Device. It provides properties for accessing information about the device, methods for opening and closing the connection, and the sending and receiving of reports.",
  "api/hidinputreportevent": "The **`HIDInputReportEvent`** interface of the [WebHID API--](/docs/Web/API/WebHID_API) is passed to [HIDDevice.inputreport_event--](/docs/Web/API/HIDDevice/inputreport_event) when an input report is received from any associated HID device.",
  "api/highlight": "The **`Highlight`** interface of the [CSS Custom Highlight API](/en-US/docs/Web/API/CSS_Custom_Highlight_API) is used to represent a collection of [Range--](/docs/Web/API/Range) instances to be styled using the API.",
  "api/highlightregistry": "The **`HighlightRegistry`** interface of the [CSS Custom Highlight API](/en-US/docs/Web/API/CSS_Custom_Highlight_API) is used to register [Highlight--](/docs/Web/API/Highlight) objects to be styled using the API.\nIt is accessed via [CSS.highlights--](/docs/Web/API/CSS/highlights_static).",
  "api/history": "The **`History`** interface of the [History API--](/docs/Web/API/History_API) allows manipulation of the browser _session history_, that is the pages visited in the tab or frame that the current page is loaded in.",
  "api/history_api": "The **History API** provides access to the browser's session history (not to be confused with [WebExtensions history](/en-US/docs/Mozilla/Add-ons/WebExtensions/API/history)) through the [history--](/docs/Web/API/Window/history) global object. It exposes useful methods and properties that let you navigate back and forth through the user's history, and manipulate the contents of the history stack.",
  "api/hkdfparams": "The **`HkdfParams`** dictionary of the [Web Crypto API](/en-US/docs/Web/API/Web_Crypto_API) represents the object that should be passed as the `algorithm` parameter into [SubtleCrypto.deriveKey()--](/docs/Web/API/SubtleCrypto/deriveKey), when using the [HKDF](/en-US/docs/Web/API/SubtleCrypto/deriveKey#hkdf) algorithm.",
  "api/hmacimportparams": "The **`HmacImportParams`** dictionary of the [Web Crypto API](/en-US/docs/Web/API/Web_Crypto_API) represents the object that should be passed as the `algorithm` parameter into [SubtleCrypto.importKey()--](/docs/Web/API/SubtleCrypto/importKey) or [SubtleCrypto.unwrapKey()--](/docs/Web/API/SubtleCrypto/unwrapKey), when generating a key for the [HMAC](/en-US/docs/Web/API/SubtleCrypto/sign#hmac) algorithm.",
  "api/hmackeygenparams": "The **`HmacKeyGenParams`** dictionary of the [Web Crypto API](/en-US/docs/Web/API/Web_Crypto_API) represents the object that should be passed as the `algorithm` parameter into [SubtleCrypto.generateKey()--](/docs/Web/API/SubtleCrypto/generateKey), when generating a key for the [HMAC](/en-US/docs/Web/API/SubtleCrypto/sign#hmac) algorithm.",
  "api/hmdvrdevice": "The **`HMDVRDevice`** interface of the [WebVR API](/en-US/docs/Web/API/WebVR_API) represents a head mounted display, providing access to information about each eye, and allowing us to modify the current field of view.",
  "api/houdini_apis": "Houdini is a set of low-level APIs that exposes parts of the CSS engine,\ngiving developers the power to extend CSS by hooking into the styling and layout process of a browser's rendering engine.\nHoudini is a group of APIs that give developers direct access to the [CSS Object Model](/en-US/docs/Web/API/CSS_Object_Model) (CSSOM),\nenabling developers to write code the browser can parse as CSS,\nthereby creating new CSS features without waiting for them to be implemented natively in browsers.",
  "api/html_dom_api": "The **HTML DOM API** is made up of the interfaces that define the functionality of each of the [elements--](/docs/Glossary/element) in [HTML--](/docs/Glossary/HTML), as well as any supporting types and interfaces they rely upon.",
  "api/html_drag_and_drop_api": "**HTML Drag and Drop** interfaces enable applications to use drag-and-drop features in browsers.",
  "api/html_sanitizer_api": "The **HTML Sanitizer API** allow developers to take untrusted strings of HTML and [Document--](/docs/Web/API/Document) or [DocumentFragment--](/docs/Web/API/DocumentFragment) objects, and sanitize them for safe insertion into a document's DOM.",
  "api/htmlallcollection": "The **`HTMLAllCollection`** interface represents a collection of _all_ of the document's elements, accessible by index (like an array) and by the element's [`id`](/en-US/docs/Web/HTML/Global_attributes/id). It is returned by the [document.all--](/docs/Web/API/document/all) property.",
  "api/htmlanchorelement": "The **`HTMLAnchorElement`** interface represents hyperlink elements and provides special properties and methods (beyond those of the regular [HTMLElement--](/docs/Web/API/HTMLElement) object interface that they inherit from) for manipulating the layout and presentation of such elements. This interface corresponds to [`<a>`](/en-US/docs/Web/HTML/Element/a) element; not to be confused with [`<link>`](/en-US/docs/Web/HTML/Element/link), which is represented by [`HTMLLinkElement`](/en-US/docs/Web/API/HTMLLinkElement).",
  "api/htmlareaelement": "The **`HTMLAreaElement`** interface provides special properties and methods (beyond those of the regular object [HTMLElement--](/docs/Web/API/HTMLElement) interface it also has available to it by inheritance) for manipulating the layout and presentation of [area--](/docs/Web/HTML/Element/area) elements.",
  "api/htmlaudioelement": "The **`HTMLAudioElement`** interface provides access to the properties of [audio--](/docs/Web/HTML/Element/audio) elements, as well as methods to manipulate them.",
  "api/htmlbaseelement": "The **`HTMLBaseElement`** interface contains the base URI for a document. This object inherits all of the properties and methods as described in the [HTMLElement--](/docs/Web/API/HTMLElement) interface.",
  "api/htmlbodyelement": "The **`HTMLBodyElement`** interface provides special properties (beyond those inherited from the regular [HTMLElement--](/docs/Web/API/HTMLElement) interface) for manipulating [body--](/docs/Web/HTML/Element/body) elements.",
  "api/htmlbrelement": "The **`HTMLBRElement`** interface represents an HTML line break element ([br--](/docs/Web/HTML/Element/br)). It inherits from [HTMLElement--](/docs/Web/API/HTMLElement).",
  "api/htmlbuttonelement": "The **`HTMLButtonElement`** interface provides properties and methods (beyond the regular [HTMLElement--](/docs/Web/API/HTMLElement) interface it also has available to it by inheritance) for manipulating [button--](/docs/Web/HTML/Element/button) elements.",
  "api/htmlcanvaselement": "The **`HTMLCanvasElement`** interface provides properties and methods for manipulating the layout and presentation of [canvas--](/docs/Web/HTML/Element/canvas) elements. The `HTMLCanvasElement` interface also inherits the properties and methods of the [HTMLElement--](/docs/Web/API/HTMLElement) interface.",
  "api/htmlcollection": "The **`HTMLCollection`** interface represents a generic collection (array-like object similar to {{jsxref(\"Functions/arguments\", \"arguments\")}}) of elements (in document order) and offers methods and properties for selecting from the list.",
  "api/htmldataelement": "The **`HTMLDataElement`** interface provides special properties (beyond the regular [HTMLElement--](/docs/Web/API/HTMLElement) interface it also has available to it by inheritance) for manipulating [data--](/docs/Web/HTML/Element/data) elements.",
  "api/htmldatalistelement": "The **`HTMLDataListElement`** interface provides special properties (beyond the [HTMLElement--](/docs/Web/API/HTMLElement) object interface it also has available to it by inheritance) to manipulate [datalist--](/docs/Web/HTML/Element/datalist) elements and their content.",
  "api/htmldetailselement": "The **`HTMLDetailsElement`** interface provides special properties (beyond the regular [HTMLElement--](/docs/Web/API/HTMLElement) interface it also has available to it by inheritance) for manipulating [details--](/docs/Web/HTML/Element/details) elements.",
  "api/htmldialogelement": "The **`HTMLDialogElement`** interface provides methods to manipulate [dialog--](/docs/Web/HTML/Element/dialog) elements. It inherits properties and methods from the [HTMLElement--](/docs/Web/API/HTMLElement) interface.",
  "api/htmldivelement": "The **`HTMLDivElement`** interface provides special properties (beyond the regular [HTMLElement--](/docs/Web/API/HTMLElement) interface it also has available to it by inheritance) for manipulating [div--](/docs/Web/HTML/Element/div) elements.",
  "api/htmldlistelement": "The **`HTMLDListElement`** interface provides special properties (beyond those of the regular [HTMLElement--](/docs/Web/API/HTMLElement) interface it also has available to it by inheritance) for manipulating definition list ([dl--](/docs/Web/HTML/Element/dl)) elements.",
  "api/htmldocument": "For historical reasons, [Window--](/docs/Web/API/Window) objects have a `window.HTMLDocument` property whose value is the [Document--](/docs/Web/API/Document) interface. So you can think of `HTMLDocument` as an alias for [Document--](/docs/Web/API/Document), and you can find documentation for `HTMLDocument` members under the documentation for the [Document--](/docs/Web/API/Document) interface.",
  "api/htmlelement": "The **`HTMLElement`** interface represents any [HTML](/en-US/docs/Web/HTML) element. Some elements directly implement this interface, while others implement it via an interface that inherits it.",
  "api/htmlembedelement": "The **`HTMLEmbedElement`** interface provides special properties (beyond the regular [HTMLElement--](/docs/Web/API/HTMLElement) interface it also has available to it by inheritance) for manipulating [embed--](/docs/Web/HTML/Element/embed) elements.",
  "api/htmlfencedframeelement": "The **`HTMLFencedFrameElement`** interface represents a [fencedframe--](/docs/Web/HTML/Element/fencedframe) element in JavaScript and provides configuration properties.",
  "api/htmlfieldsetelement": "The **`HTMLFieldSetElement`** interface provides special properties and methods (beyond the regular [HTMLElement--](/docs/Web/API/HTMLElement) interface it also has available to it by inheritance) for manipulating the layout and presentation of [fieldset--](/docs/Web/HTML/Element/fieldset) elements.",
  "api/htmlfontelement": "Implements the document object model (DOM) representation of the font element. The HTML Font Element [font--](/docs/Web/HTML/Element/font) defines the font size, font face and color of text.",
  "api/htmlformcontrolscollection": "The **`HTMLFormControlsCollection`** interface represents a _collection_ of HTML _form control elements_, returned by the [HTMLFormElement--](/docs/Web/API/HTMLFormElement) interface's [elements--](/docs/Web/API/HTMLFormElement/elements) property.",
  "api/htmlformelement": "The **`HTMLFormElement`** interface represents a [form--](/docs/Web/HTML/Element/form) element in the DOM. It allows access to—and, in some cases, modification of—aspects of the form, as well as access to its component elements.",
  "api/htmlframesetelement": "The **`HTMLFrameSetElement`** interface provides special properties (beyond those of the regular [HTMLElement--](/docs/Web/API/HTMLElement) interface they also inherit) for manipulating [frameset--](/docs/Web/HTML/Element/frameset) elements.",
  "api/htmlheadelement": "The **`HTMLHeadElement`** interface contains the descriptive information, or metadata, for a document. This object inherits all of the properties and methods described in the [HTMLElement--](/docs/Web/API/HTMLElement) interface.",
  "api/htmlheadingelement": "The **`HTMLHeadingElement`** interface represents the different heading elements, [`<h1>` through `<h6>`](/en-US/docs/Web/HTML/Element/Heading_Elements). It inherits methods and properties from the [HTMLElement--](/docs/Web/API/HTMLElement) interface.",
  "api/htmlhrelement": "The **`HTMLHRElement`** interface provides special properties (beyond those of the [HTMLElement--](/docs/Web/API/HTMLElement) interface it also has available to it by inheritance) for manipulating [hr--](/docs/Web/HTML/Element/hr) elements.",
  "api/htmlhtmlelement": "The **`HTMLHtmlElement`** interface serves as the root node for a given HTML document. This object inherits the properties and methods described in the [HTMLElement--](/docs/Web/API/HTMLElement) interface.",
  "api/htmliframeelement": "The **`HTMLIFrameElement`** interface provides special properties and methods (beyond those of the [HTMLElement--](/docs/Web/API/HTMLElement) interface it also has available to it by inheritance) for manipulating the layout and presentation of inline frame elements.",
  "api/htmlimageelement": "The **`HTMLImageElement`** interface represents an HTML [img--](/docs/Web/HTML/Element/img) element, providing the properties and methods used to manipulate image elements.",
  "api/htmlinputelement": "The **`HTMLInputElement`** interface provides special properties and methods for manipulating the options, layout, and presentation of [input--](/docs/Web/HTML/Element/input) elements.",
  "api/htmllabelelement": "The **`HTMLLabelElement`** interface gives access to properties specific to [label--](/docs/Web/HTML/Element/label) elements. It inherits methods and properties from the base [HTMLElement--](/docs/Web/API/HTMLElement) interface.",
  "api/htmllegendelement": "The **`HTMLLegendElement`** is an interface allowing to access properties of the [legend--](/docs/Web/HTML/Element/legend) elements. It inherits properties and methods from the [HTMLElement--](/docs/Web/API/HTMLElement) interface.",
  "api/htmllielement": "The **`HTMLLIElement`** interface exposes specific properties and methods (beyond those defined by regular [HTMLElement--](/docs/Web/API/HTMLElement) interface it also has available to it by inheritance) for manipulating list elements.",
  "api/htmllinkelement": "The **`HTMLLinkElement`** interface represents reference information for external resources and the relationship of those resources to a document and vice versa (corresponds to [`<link>`](/en-US/docs/Web/HTML/Element/link) element; not to be confused with [`<a>`](/en-US/docs/Web/HTML/Element/a), which is represented by [`HTMLAnchorElement`](/en-US/docs/Web/API/HTMLAnchorElement)). This object inherits all of the properties and methods of the [HTMLElement--](/docs/Web/API/HTMLElement) interface.",
  "api/htmlmapelement": "The **`HTMLMapElement`** interface provides special properties and methods (beyond those of the regular object [HTMLElement--](/docs/Web/API/HTMLElement) interface it also has available to it by inheritance) for manipulating the layout and presentation of map elements.",
  "api/htmlmarqueeelement": "The **`HTMLMarqueeElement`** interface provides methods to manipulate [marquee--](/docs/Web/HTML/Element/marquee) elements.",
  "api/htmlmediaelement": "The **`HTMLMediaElement`** interface adds to [HTMLElement--](/docs/Web/API/HTMLElement) the properties and methods needed to support basic media-related capabilities that are common to audio and video.",
  "api/htmlmenuelement": "The **`HTMLMenuElement`** interface provides additional properties (beyond those inherited from the [HTMLElement--](/docs/Web/API/HTMLElement) interface) for manipulating a [menu--](/docs/Web/HTML/Element/menu) element.\n`<menu>` is a semantic alternative to the [ul--](/docs/Web/HTML/Element/ul) element.",
  "api/htmlmenuitemelement": "The **`HTMLMenuItemElement`** interface provides special properties (beyond those defined on the regular [HTMLElement--](/docs/Web/API/HTMLElement) interface it also has available to it by inheritance) for manipulating [menuitem--](/docs/Web/HTML/Element/menuitem) elements.",
  "api/htmlmetaelement": "The **`HTMLMetaElement`** interface contains descriptive metadata about a document provided in HTML as [`<meta>`](/en-US/docs/Web/HTML/Element/meta) elements.\nThis interface inherits all of the properties and methods described in the [HTMLElement--](/docs/Web/API/HTMLElement) interface.",
  "api/htmlmeterelement": "The HTML [meter--](/docs/Web/HTML/Element/meter) elements expose the **`HTMLMeterElement`** interface, which provides special properties and methods (beyond the [HTMLElement--](/docs/Web/API/HTMLElement) object interface they also have available to them by inheritance) for manipulating the layout and presentation of [meter--](/docs/Web/HTML/Element/meter) elements.",
  "api/htmlmodelement": "The **`HTMLModElement`** interface provides special properties (beyond the regular methods and properties available through the [HTMLElement--](/docs/Web/API/HTMLElement) interface they also have available to them by inheritance) for manipulating modification elements, that is [del--](/docs/Web/HTML/Element/del) and [ins--](/docs/Web/HTML/Element/ins).",
  "api/htmlobjectelement": "The **`HTMLObjectElement`** interface provides special properties and methods (beyond those on the [HTMLElement--](/docs/Web/API/HTMLElement) interface it also has available to it by inheritance) for manipulating the layout and presentation of [object--](/docs/Web/HTML/Element/object) element, representing external resources.",
  "api/htmlolistelement": "The **`HTMLOListElement`** interface provides special properties (beyond those defined on the regular [HTMLElement--](/docs/Web/API/HTMLElement) interface it also has available to it by inheritance) for manipulating ordered list elements.",
  "api/htmloptgroupelement": "The **`HTMLOptGroupElement`** interface provides special properties and methods (beyond the regular [HTMLElement--](/docs/Web/API/HTMLElement) object interface they also have available to them by inheritance) for manipulating the layout and presentation of [optgroup--](/docs/Web/HTML/Element/optgroup) elements.",
  "api/htmloptionelement": "The **`HTMLOptionElement`** interface represents [option--](/docs/Web/HTML/Element/option) elements and inherits all properties and methods of the [HTMLElement--](/docs/Web/API/HTMLElement) interface.",
  "api/htmloptionscollection": "The **`HTMLOptionsCollection`** interface represents a collection of [`<option>`](/en-US/docs/Web/HTML/Element/option) HTML elements (in document order) and offers methods and properties for selecting from the list as well as optionally altering its items. This object is returned only by the `options` property of [select](/en-US/docs/Web/API/HTMLSelectElement).",
  "api/htmloutputelement": "The **`HTMLOutputElement`** interface provides properties and methods (beyond those inherited from [HTMLElement--](/docs/Web/API/HTMLElement)) for manipulating the layout and presentation of [output--](/docs/Web/HTML/Element/output) elements.",
  "api/htmlparagraphelement": "The **`HTMLParagraphElement`** interface provides special properties (beyond those of the regular [HTMLElement--](/docs/Web/API/HTMLElement) object interface it inherits) for manipulating [p--](/docs/Web/HTML/Element/p) elements.",
  "api/htmlparamelement": "The **`HTMLParamElement`** interface provides special properties (beyond those of the regular [HTMLElement--](/docs/Web/API/HTMLElement) object interface it inherits) for manipulating [param--](/docs/Web/HTML/Element/param) elements, representing a pair of a key and a value that acts as a parameter for an [object--](/docs/Web/HTML/Element/object) element.",
  "api/htmlpictureelement": "The **`HTMLPictureElement`** interface represents a [picture--](/docs/Web/HTML/Element/picture) HTML element. It doesn't implement specific properties or methods.",
  "api/htmlpreelement": "The **`HTMLPreElement`** interface exposes specific properties and methods (beyond those of the [HTMLElement--](/docs/Web/API/HTMLElement) interface it also has available to it by inheritance) for manipulating a block of preformatted text ([pre--](/docs/Web/HTML/Element/pre)).",
  "api/htmlprogresselement": "The **`HTMLProgressElement`** interface provides special properties and methods (beyond the regular [HTMLElement--](/docs/Web/API/HTMLElement) interface it also has available to it by inheritance) for manipulating the layout and presentation of [progress--](/docs/Web/HTML/Element/progress) elements.",
  "api/htmlquoteelement": "The **`HTMLQuoteElement`** interface provides special properties and methods (beyond the regular [HTMLElement--](/docs/Web/API/HTMLElement) interface it also has available to it by inheritance) for manipulating quoting elements, like [blockquote--](/docs/Web/HTML/Element/blockquote) and [q--](/docs/Web/HTML/Element/q), but not the [cite--](/docs/Web/HTML/Element/cite) element.",
  "api/htmlscriptelement": "HTML [script--](/docs/Web/HTML/Element/script) elements expose the **`HTMLScriptElement`** interface, which provides special properties and methods for manipulating the behavior and execution of `<script>` elements (beyond the inherited [HTMLElement--](/docs/Web/API/HTMLElement) interface).",
  "api/htmlselectelement": "The **`HTMLSelectElement`** interface represents a [select--](/docs/Web/HTML/Element/select) HTML Element. These elements also share all of the properties and methods of other HTML elements via the [HTMLElement--](/docs/Web/API/HTMLElement) interface.",
  "api/htmlslotelement": "The **`HTMLSlotElement`** interface of the [Shadow DOM API](/en-US/docs/Web/API/Web_components/Using_shadow_DOM) enables access to the name and assigned nodes of an HTML [slot--](/docs/Web/HTML/Element/slot) element.",
  "api/htmlsourceelement": "The **`HTMLSourceElement`** interface provides special properties (beyond the regular [HTMLElement--](/docs/Web/API/HTMLElement) object interface it also has available to it by inheritance) for manipulating [source--](/docs/Web/HTML/Element/source) elements.",
  "api/htmlspanelement": "The **`HTMLSpanElement`** interface represents a [span--](/docs/Web/HTML/Element/span) element and derives from the [HTMLElement--](/docs/Web/API/HTMLElement) interface, but without implementing any additional properties or methods.",
  "api/htmlstyleelement": "The **`HTMLStyleElement`** interface represents a [style--](/docs/Web/HTML/Element/style) element. It inherits properties and methods from its parent, [HTMLElement--](/docs/Web/API/HTMLElement).",
  "api/htmltablecaptionelement": "The **`HTMLTableCaptionElement`** interface provides special properties (beyond the regular [HTMLElement--](/docs/Web/API/HTMLElement) interface it also has available to it by inheritance) for manipulating table [caption--](/docs/Web/HTML/Element/caption) elements.",
  "api/htmltablecellelement": "The **`HTMLTableCellElement`** interface provides special properties and methods (beyond the regular [HTMLElement--](/docs/Web/API/HTMLElement) interface it also has available to it by inheritance) for manipulating the layout and presentation of table cells, either header cells ([th--](/docs/Web/HTML/Element/th))) or data cells ([td--](/docs/Web/HTML/Element/td)), in an HTML document.",
  "api/htmltablecolelement": "The **`HTMLTableColElement`** interface provides properties for manipulating single or grouped table column elements.",
  "api/htmltableelement": "The **`HTMLTableElement`** interface provides special properties and methods (beyond the regular [HTMLElement--](/docs/Web/API/HTMLElement) object interface it also has available to it by inheritance) for manipulating the layout and presentation of tables in an HTML document.",
  "api/htmltablerowelement": "The **`HTMLTableRowElement`** interface provides special properties and methods (beyond the [HTMLElement--](/docs/Web/API/HTMLElement) interface it also has available to it by inheritance) for manipulating the layout and presentation of rows in an HTML table.",
  "api/htmltablesectionelement": "The **`HTMLTableSectionElement`** interface provides special properties and methods (beyond the [HTMLElement--](/docs/Web/API/HTMLElement) interface it also has available to it by inheritance) for manipulating the layout and presentation of sections, that is headers, footers and bodies ([thead--](/docs/Web/HTML/Element/thead), [tfoot--](/docs/Web/HTML/Element/tfoot), and [tbody--](/docs/Web/HTML/Element/tbody), respectively) in an HTML table.",
  "api/htmltemplateelement": "The **`HTMLTemplateElement`** interface enables access to the contents of an HTML [template--](/docs/Web/HTML/Element/template) element.",
  "api/htmltextareaelement": "The **`HTMLTextAreaElement`** interface provides special properties and methods for manipulating the layout and presentation of [textarea--](/docs/Web/HTML/Element/textarea) elements.",
  "api/htmltimeelement": "The **`HTMLTimeElement`** interface provides special properties (beyond the regular [HTMLElement--](/docs/Web/API/HTMLElement) interface it also has available to it by inheritance) for manipulating [time--](/docs/Web/HTML/Element/time) elements.",
  "api/htmltitleelement": "The **`HTMLTitleElement`** interface is implemented by a document's [title--](/docs/Web/HTML/Element/title). This element inherits all of the properties and methods of the [HTMLElement--](/docs/Web/API/HTMLElement) interface.",
  "api/htmltrackelement": "The **`HTMLTrackElement`** interface represents an [HTML--](/docs/Glossary/HTML) [track--](/docs/Web/HTML/Element/track) element within the [DOM--](/docs/Glossary/DOM). This element can be used as a child of either [audio--](/docs/Web/HTML/Element/audio) or [video--](/docs/Web/HTML/Element/video) to specify a text track containing information such as closed captions or subtitles.",
  "api/htmlulistelement": "The **`HTMLUListElement`** interface provides special properties (beyond those defined on the regular [HTMLElement--](/docs/Web/API/HTMLElement) interface it also has available to it by inheritance) for manipulating unordered list ([ul--](/docs/Web/HTML/Element/ul)) elements.",
  "api/htmlunknownelement": "The **`HTMLUnknownElement`** interface represents an invalid HTML element and derives from the [HTMLElement--](/docs/Web/API/HTMLElement) interface, but without implementing any additional properties or methods.",
  "api/htmlvideoelement": "Implemented by the [video--](/docs/Web/HTML/Element/video) element, the **`HTMLVideoElement`** interface provides special properties and methods for manipulating video objects. It also inherits properties and methods of [HTMLMediaElement--](/docs/Web/API/HTMLMediaElement) and [HTMLElement--](/docs/Web/API/HTMLElement).",
  "api/idbcursor": "The **`IDBCursor`** interface of the [IndexedDB API](/en-US/docs/Web/API/IndexedDB_API) represents a [cursor](/en-US/docs/Web/API/IndexedDB_API/Basic_Terminology#cursor) for traversing or iterating over multiple records in a database.",
  "api/idbcursorwithvalue": "The **`IDBCursorWithValue`** interface of the [IndexedDB API](/en-US/docs/Web/API/IndexedDB_API) represents a [cursor](/en-US/docs/Web/API/IndexedDB_API/Basic_Terminology#cursor) for traversing or iterating over multiple records in a database. It is the same as the [IDBCursor--](/docs/Web/API/IDBCursor), except that it includes the `value` property.",
  "api/idbdatabase": "The **`IDBDatabase`** interface of the IndexedDB API provides a [connection to a database](/en-US/docs/Web/API/IndexedDB_API#database_connection); you can use an `IDBDatabase` object to open a [transaction](/en-US/docs/Web/API/IndexedDB_API/Basic_Terminology#transaction) on your database then create, manipulate, and delete objects (data) in that database. The interface provides the only way to get and manage versions of the database.",
  "api/idbfactory": "The **`IDBFactory`** interface of the [IndexedDB API](/en-US/docs/Web/API/IndexedDB_API) lets applications asynchronously access the indexed databases. The object that implements the interface is `window.indexedDB`. You open — that is, create and access — and delete a database with this object, and not directly with `IDBFactory`.",
  "api/idbindex": "`IDBIndex` interface of the [IndexedDB API](/en-US/docs/Web/API/IndexedDB_API) provides asynchronous access to an [index](/en-US/docs/Web/API/IndexedDB_API/Basic_Terminology#index) in a database. An index is a kind of object store for looking up records in another object store, called the referenced object store. You use this interface to retrieve data.",
  "api/idbkeyrange": "|\n| All keys ≥ **x**            | `IDBKeyRange.lowerBound(x)`            |\n| All keys > **x**            | `IDBKeyRange.lowerBound(x, true)`      |\n| All keys ≤ **y**            | `IDBKeyRange.upperBound(y)`            |\n| All keys < **y**            | `IDBKeyRange.upperBound(y, true)`      |\n| All keys ≥ **x** && ≤ **y** | `IDBKeyRange.bound(x, y)`              |\n| All keys > **x** &&< **y**  | `IDBKeyRange.bound(x, y, true, true)`  |\n| All keys > **x** && ≤ **y** | `IDBKeyRange.bound(x, y, true, false)` |\n| All keys ≥ **x** &&< **y**  | `IDBKeyRange.bound(x, y, false, true)` |\n| The key = **z**             | `IDBKeyRange.only(z)`                  |",
  "api/idbobjectstore": "The **`IDBObjectStore`** interface of the [IndexedDB API](/en-US/docs/Web/API/IndexedDB_API) represents an object store in a database. Records within an object store are sorted according to their keys. This sorting enables fast insertion, look-up, and ordered retrieval.",
  "api/idbopendbrequest": "The **`IDBOpenDBRequest`** interface of the IndexedDB API provides access to the results of requests to open or delete databases (performed using [IDBFactory.open--](/docs/Web/API/IDBFactory/open) and [IDBFactory.deleteDatabase--](/docs/Web/API/IDBFactory/deleteDatabase)), using specific event handler attributes.",
  "api/idbrequest": "The **`IDBRequest`** interface of the IndexedDB API provides access to results of asynchronous requests to databases and database objects using event handler attributes. Each reading and writing operation on a database is done using a request.",
  "api/idbtransaction": "The **`IDBTransaction`** interface of the [IndexedDB API](/en-US/docs/Web/API/IndexedDB_API) provides a static, asynchronous transaction on a database using event handler attributes. All reading and writing of data is done within transactions. You use [IDBDatabase--](/docs/Web/API/IDBDatabase) to start transactions, [IDBTransaction--](/docs/Web/API/IDBTransaction) to set the mode of the transaction (e.g. is it `readonly` or `readwrite`), and you access an [IDBObjectStore--](/docs/Web/API/IDBObjectStore) to make a request. You can also use an `IDBTransaction` object to abort transactions.",
  "api/idbversionchangeevent": "The **`IDBVersionChangeEvent`** interface of the [IndexedDB API](/en-US/docs/Web/API/IndexedDB_API) indicates that the version of the database has changed, as the result of an [onupgradeneeded--](/docs/Web/API/IDBOpenDBRequest/upgradeneeded_event) event handler function.",
  "api/identitycredential": "The **`IdentityCredential`** interface of the [Federated Credential Management API (FedCM)](/en-US/docs/Web/API/FedCM_API) represents a user identity credential arising from a successful federated sign-in.",
  "api/identityprovider": "The **`IdentityProvider`** interface of the [Federated Credential Management (FedCM) API](/en-US/docs/Web/API/FedCM_API) represents an identity provider (IdP) and provides access to related information and functionality.",
  "api/idle_detection_api": "The Idle Detection API provides a means to detect the user's idle status, active, idle, and locked, specifically, and to be notified of changes to idle status without polling from a script.",
  "api/idledeadline": "The `IdleDeadline` interface is used as the data type of the input parameter to idle callbacks established by calling [Window.requestIdleCallback()--](/docs/Web/API/Window/requestIdleCallback). It offers a method, [timeRemaining()--](/docs/Web/API/IdleDeadline/timeRemaining), which lets you determine how much longer the user agent estimates it will remain idle and a property, [didTimeout--](/docs/Web/API/IdleDeadline/didTimeout), which lets you determine if your callback is executing because its timeout duration expired.",
  "api/idledetector": "The **`IdleDetector`** interface of the [Idle Detection API--](/docs/Web/API/idle_detection_api) provides methods and events for detecting user activity on a device or screen.",
  "api/iirfilternode": "The **`IIRFilterNode`** interface of the [Web Audio API](/en-US/docs/Web/API/Web_Audio_API) is a [AudioNode--](/docs/Web/API/AudioNode) processor which implements a general **[infinite impulse response](https://en.wikipedia.org/wiki/Infinite_impulse_response)** (IIR) filter; this type of filter can be used to implement tone control devices and graphic equalizers as well. It lets the parameters of the filter response be specified, so that it can be tuned as needed.",
  "api/imagebitmap": "The **`ImageBitmap`** interface represents a bitmap image which can be drawn to a [canvas--](/docs/Web/HTML/Element/canvas) without undue latency. It can be created from a variety of source objects using the [createImageBitmap()--](/docs/Web/API/createImageBitmap) factory method. `ImageBitmap` provides an asynchronous and resource efficient pathway to prepare textures for rendering in WebGL.",
  "api/imagebitmaprenderingcontext": "The **`ImageBitmapRenderingContext`** interface is a canvas rendering context that provides the functionality to replace the canvas's contents with the given [ImageBitmap--](/docs/Web/API/ImageBitmap). Its context id (the first argument to [HTMLCanvasElement.getContext()--](/docs/Web/API/HTMLCanvasElement/getContext) or [OffscreenCanvas.getContext()--](/docs/Web/API/OffscreenCanvas/getContext)) is `\"bitmaprenderer\"`.",
  "api/imagecapture": "The **`ImageCapture`** interface of the [MediaStream Image Capture API](/en-US/docs/Web/API/MediaStream_Image_Capture_API) provides methods to enable the capture of images or photos from a camera or other photographic device. It provides an interface for capturing images from a photographic device referenced through a valid [MediaStreamTrack--](/docs/Web/API/MediaStreamTrack).",
  "api/imagedata": "The **`ImageData`** interface represents the underlying pixel data of an area of a [canvas--](/docs/Web/HTML/Element/canvas) element.",
  "api/imagedecoder": "The **`ImageDecoder`** interface of the [WebCodecs API--](/docs/Web/API/WebCodecs_API) provides a way to unpack and decode encoded image data.",
  "api/imagetrack": "The **`ImageTrack`** interface of the [WebCodecs API--](/docs/Web/API/WebCodecs_API) represents an individual image track.",
  "api/imagetracklist": "The **`ImageTrackList`** interface of the [WebCodecs API--](/docs/Web/API/WebCodecs_API) represents a list of image tracks.",
  "api/indexeddb_api": "IndexedDB is a low-level API for client-side storage of significant amounts of structured data, including files/blobs. This API uses indexes to enable high-performance searches of this data. While [Web Storage](/en-US/docs/Web/API/Web_Storage_API) is useful for storing smaller amounts of data, it is less useful for storing larger amounts of structured data. IndexedDB provides a solution. This is the main landing page for MDN's IndexedDB coverage — here we provide links to the full API reference and usage guides, browser support details, and some explanation of key concepts.",
  "api/ink": "The **`Ink`** interface of the [Ink API](/en-US/docs/Web/API/Ink_API) provides access to [InkPresenter--](/docs/Web/API/InkPresenter) objects for the application to use to render ink strokes.",
  "api/ink_api": "The Ink API allows browsers to directly make use of available OS-level compositors when drawing pen strokes in an inking app feature, thereby reducing latency and increasing performance.",
  "api/inkpresenter": "The **`InkPresenter`** interface of the [Ink API](/en-US/docs/Web/API/Ink_API) provides the ability to instruct the OS-level compositor to render ink strokes between pointer event dispatches.",
  "api/inputdevicecapabilities": "The **`InputDeviceCapabilities`** interface of the [Input Device Capabilities API--](/docs/Web/API/InputDeviceCapabilities_API) provides information about the physical device or a group of related devices responsible for generating input events. Events caused by the same physical input device get the same instance of this object, but the converse isn't true. For example, two mice with the same capabilities in a system may appear as a single `InputDeviceCapabilities` instance.",
  "api/inputdevicecapabilities_api": "The InputDeviceCapabilities API provides details about the underlying sources of input events. The API attempts to describe how the device behaves rather than what it is. For example, the first version of the API indicates whether a device fires touch events rather than whether it is a touch screen.",
  "api/inputdeviceinfo": "The **`InputDeviceInfo`** interface of the [Media Capture and Streams API--](/docs/Web/API/Media_Capture_and_Streams_API) gives access to the capabilities of the input device that it represents.",
  "api/inputevent": "The **`InputEvent`** interface represents an event notifying the user of editable content changes.",
  "api/insertable_streams_for_mediastreamtrack_api": "The **Insertable Streams for MediaStreamTrack API** provides a method of adding new components to a [MediaStreamTrack--](/docs/Web/API/MediaStreamTrack).",
  "api/installevent": "The parameter passed into the [oninstall--](/docs/Web/API/ServiceWorkerGlobalScope/install_event) handler, the `InstallEvent` interface represents an install action that is dispatched on the [ServiceWorkerGlobalScope--](/docs/Web/API/ServiceWorkerGlobalScope) of a [ServiceWorker--](/docs/Web/API/ServiceWorker). As a child of [ExtendableEvent--](/docs/Web/API/ExtendableEvent), it ensures that functional events such as [FetchEvent--](/docs/Web/API/FetchEvent) are not dispatched during installation.",
  "api/intersection_observer_api": "The Intersection Observer API provides a way to asynchronously observe changes in the intersection of a target element with an ancestor element or with a top-level document's [viewport--](/docs/Glossary/viewport).",
  "api/intersectionobserver": "The **`IntersectionObserver`** interface of the [Intersection Observer API](/en-US/docs/Web/API/Intersection_Observer_API) provides a way to asynchronously observe changes in the intersection of a target element with an ancestor element or with a top-level document's [viewport--](/docs/Glossary/viewport). The ancestor element or viewport is referred to as the root.",
  "api/intersectionobserverentry": "The **`IntersectionObserverEntry`** interface of the [Intersection Observer API](/en-US/docs/Web/API/Intersection_Observer_API) describes the intersection between the target element and its root container at a specific moment of transition.",
  "api/interventionreportbody": "The `InterventionReportBody` interface of the [Reporting API](/en-US/docs/Web/API/Reporting_API) represents the body of an intervention report.",
  "api/keyboard": "The **`Keyboard`** interface of the [Keyboard API--](/docs/Web/API/Keyboard_API) provides functions that retrieve keyboard layout maps and toggle capturing of key presses from the physical keyboard.",
  "api/keyboard_api": "The Keyboard API provides methods for working with a physical keyboard that is attached to a device running a browser.",
  "api/keyboardevent": "**`KeyboardEvent`** objects describe a user interaction with the keyboard; each event describes a single interaction between the user and a key (or combination of a key with modifier keys) on the keyboard. The event type ([keydown--](/docs/Web/API/Element/keydown_event), [keypress--](/docs/Web/API/Element/keypress_event), or [keyup--](/docs/Web/API/Element/keyup_event)) identifies what kind of keyboard activity occurred.",
  "api/keyboardlayoutmap": "The **`KeyboardLayoutMap`** interface of the [Keyboard API--](/docs/Web/API/Keyboard_API) is a read-only object with functions for retrieving the string associated with specific physical keys.",
  "api/keyframeeffect": "The **`KeyframeEffect`** interface of the [Web Animations API](/en-US/docs/Web/API/Web_Animations_API) lets us create sets of animatable properties and values, called **keyframes.** These can then be played using the [Animation()--](/docs/Web/API/Animation/Animation) constructor.",
  "api/khr_parallel_shader_compile": "The **`KHR_parallel_shader_compile`** extension is part of the [WebGL API](/en-US/docs/Web/API/WebGL_API) and enables a non-blocking poll operation, so that compile/link status availability (`COMPLETION_STATUS_KHR`) can be queried without potentially incurring stalls. In other words you can check the status of your shaders compiling without blocking the runtime.",
  "api/largestcontentfulpaint": "The `LargestContentfulPaint` interface provides timing information about the largest image or text paint before user input on a web page.",
  "api/launch_handler_api": "The **Launch Handler API** allows developers to control how a [progressive web app](/en-US/docs/Web/Progressive_web_apps) (PWA) is launched — for example if it uses an existing window or creates a new one, and how the app's target launch URL is handled.",
  "api/launchparams": "The **`LaunchParams`** interface of the [Launch Handler API--](/docs/Web/API/Launch_Handler_API) is used when implementing custom launch navigation handling in a PWA. When [window.launchQueue.setConsumer()--](/docs/Web/API/LaunchQueue/setConsumer) is invoked to set up the launch navigation handling functionality, the callback function inside `setConsumer()` is passed a `LaunchParams` object instance.",
  "api/launchqueue": "The **`LaunchQueue`** interface of the [Launch Handler API--](/docs/Web/API/Launch_Handler_API) is available via the [Window.launchQueue--](/docs/Web/API/Window/launchQueue) property. When a [progressive web app](/en-US/docs/Web/Progressive_web_apps) (PWA) is launched with a [`launch_handler`](/en-US/docs/Web/Manifest/launch_handler) `client_mode` value of `focus-existing`, `navigate-new`, or `navigate-existing`, [LaunchQueue--](/docs/Web/API/LaunchQueue) provides access to functionality that allows custom launch navigation handling to be implemented in the PWA. This functionality is controlled by the properties of the [LaunchParams--](/docs/Web/API/LaunchParams) object passed into the [setConsumer()--](/docs/Web/API/LaunchQueue/setConsumer) callback function.",
  "api/layoutshift": "The `LayoutShift` interface of the [Performance API](/en-US/docs/Web/API/Performance_API) provides insights into the layout stability of web pages based on movements of the elements on the page.",
  "api/layoutshiftattribution": "The `LayoutShiftAttribution` interface provides debugging information about elements which have shifted.",
  "api/linearaccelerationsensor": "The **`LinearAccelerationSensor`** interface of the [Sensor APIs](/en-US/docs/Web/API/Sensor_APIs) provides on each reading the acceleration applied to the device along all three axes, but without the contribution of gravity.",
  "api/local_font_access_api": "The **Local Font Access API** provides a mechanism to access the user's locally installed font data — this includes higher-level details such as names, styles, and families, as well as the raw bytes of the underlying font files.",
  "api/location": "The **`Location`** interface represents the location (URL) of the object it is linked to. Changes done on it are reflected on the object it relates to. Both the [Document--](/docs/Web/API/Document) and [Window--](/docs/Web/API/Window) interface have such a linked `Location`, accessible via [Document.location--](/docs/Web/API/Document/location) and [Window.location--](/docs/Web/API/Window/location) respectively.",
  "api/lock": "The **`Lock`** interface of the [Web Locks API](/en-US/docs/Web/API/Web_Locks_API) provides the name and mode of a lock.\nThis may be a newly requested lock that is received in the callback to [LockManager.request()--](/docs/Web/API/LockManager/request), or a record of an active or queued lock returned by [LockManager.query()--](/docs/Web/API/LockManager/query).",
  "api/lockmanager": "The **`LockManager`** interface of the [Web Locks API](/en-US/docs/Web/API/Web_Locks_API) provides methods for requesting a new [Lock--](/docs/Web/API/Lock) object and querying for an existing `Lock` object. To get an instance of `LockManager`, call [navigator.locks--](/docs/Web/API/navigator/locks).",
  "api/magnetometer": "The **`Magnetometer`** interface of the [Sensor APIs](/en-US/docs/Web/API/Sensor_APIs) provides information about the magnetic field as detected by the device's primary magnetometer sensor.",
  "api/mathmlelement": "The **`MathMLElement`** interface represents any [MathML](/en-US/docs/Web/MathML) element.",
  "api/media_capabilities_api": "The **Media Capabilities API** allows developers to determine decoding and encoding abilities of the device, exposing information such as whether media is supported and whether playback should be smooth and power efficient, with real time feedback about playback to better enable adaptive streaming, and access to display property information.",
  "api/media_capture_and_streams_api": "The **Media Capture and Streams** API, often called the **Media Streams API** or **MediaStream API**, is an API related to [WebRTC](/en-US/docs/Web/API/WebRTC_API) which provides support for streaming audio and video data.",
  "api/media_session_api": "The **Media Session API** provides a way to customize media notifications. It does this by providing metadata for display by the user agent for the media your web app is playing.",
  "api/media_source_extensions_api": "The **Media Source API**, formally known as **Media Source Extensions** (**MSE**), provides functionality enabling plugin-free web-based streaming media. Using MSE, media streams can be created via JavaScript, and played using [audio--](/docs/Web/HTML/Element/audio) and [video--](/docs/Web/HTML/Element/video) elements.",
  "api/mediacapabilities": "The **`MediaCapabilities`** interface of the [Media Capabilities API](/en-US/docs/Web/API/Media_Capabilities_API) provides information about the decoding abilities of the device, system and browser. The API can be used to query the browser about the decoding abilities of the device based on codecs, profile, resolution, and bitrates. The information can be used to serve optimal media streams to the user and determine if playback should be smooth and power efficient.",
  "api/mediadeviceinfo": "The **`MediaDeviceInfo`** interface of the [Media Capture and Streams API--](/docs/Web/API/Media_Capture_and_Streams_API) contains information that describes a single media input or output device.",
  "api/mediadevices": "The **`MediaDevices`** interface of the [Media Capture and Streams API--](/docs/Web/API/Media_Capture_and_Streams_API) provides access to connected media input devices like cameras and microphones, as well as screen sharing. In essence, it lets you obtain access to any hardware source of media data.",
  "api/mediaelementaudiosourcenode": "The `MediaElementAudioSourceNode` interface represents an audio source consisting of an HTML [audio--](/docs/Web/HTML/Element/audio) or [video--](/docs/Web/HTML/Element/video) element. It is an [AudioNode--](/docs/Web/API/AudioNode) that acts as an audio source.",
  "api/mediaencryptedevent": "The **`MediaEncryptedEvent`** interface of the [Encrypted Media Extensions API](/en-US/docs/Web/API/Encrypted_Media_Extensions_API) contains the information associated with an [encrypted--](/docs/Web/API/HTMLMediaElement/encrypted_event) event sent to a [HTMLMediaElement--](/docs/Web/API/HTMLMediaElement) when some initialization data is encountered in the media.",
  "api/mediaerror": "The **`MediaError`** interface represents an error which occurred while handling media in an HTML media element based on [HTMLMediaElement--](/docs/Web/API/HTMLMediaElement), such as [audio--](/docs/Web/HTML/Element/audio) or [video--](/docs/Web/HTML/Element/video).",
  "api/mediakeymessageevent": "The **`MediaKeyMessageEvent`** interface of the [Encrypted Media Extensions API](/en-US/docs/Web/API/Encrypted_Media_Extensions_API) contains the content and related data when the content decryption module generates a message for the session.",
  "api/mediakeys": "The **`MediaKeys`** interface of [Encrypted Media Extensions API](/en-US/docs/Web/API/Encrypted_Media_Extensions_API) represents a set of keys that an associated [HTMLMediaElement--](/docs/Web/API/HTMLMediaElement) can use for decryption of media data during playback.",
  "api/mediakeysession": "The **`MediaKeySession`** interface of the [Encrypted Media Extensions API](/en-US/docs/Web/API/Encrypted_Media_Extensions_API) represents a context for message exchange with a content decryption module (CDM).",
  "api/mediakeystatusmap": "The **`MediaKeyStatusMap`** interface of the [Encrypted Media Extensions API](/en-US/docs/Web/API/Encrypted_Media_Extensions_API) is a read-only map of media key statuses by key IDs.",
  "api/mediakeysystemaccess": "The **`MediaKeySystemAccess`** interface of the [Encrypted Media Extensions API](/en-US/docs/Web/API/Encrypted_Media_Extensions_API) provides access to a Key System for decryption and/or a content protection provider. You can request an instance of this object using the [Navigator.requestMediaKeySystemAccess()--](/docs/Web/API/Navigator/requestMediaKeySystemAccess) method.",
  "api/medialist": "The **`MediaList`** interface represents the media queries of a stylesheet, e.g. those set using a [link--](/docs/Web/HTML/Element/link) element's `media` attribute.",
  "api/mediametadata": "The **`MediaMetadata`** interface of the [Media Session API--](/docs/Web/API/Media_Session_API) allows a web page to provide rich media metadata for display in a platform UI.",
  "api/mediaquerylist": "A **`MediaQueryList`** object stores information on a [media query](/en-US/docs/Web/CSS/CSS_media_queries) applied to a document, with support for both immediate and event-driven matching against the state of the document.",
  "api/mediaquerylistevent": "The `MediaQueryListEvent` object stores information on the changes that have happened to a [MediaQueryList--](/docs/Web/API/MediaQueryList) object — instances are available as the event object on a function referenced by a [change--](/docs/Web/API/MediaQueryList/change_event) event.",
  "api/mediarecorder": "The **`MediaRecorder`** interface of the [MediaStream Recording API](/en-US/docs/Web/API/MediaStream_Recording_API) provides functionality to easily record media. It is created using the [MediaRecorder()--](/docs/Web/API/MediaRecorder/MediaRecorder) constructor.",
  "api/mediarecordererrorevent": "The **`MediaRecorderErrorEvent`** interface represents errors returned by the [MediaStream Recording API](/en-US/docs/Web/API/MediaStream_Recording_API). It is an [Event--](/docs/Web/API/Event) object that encapsulates a reference to a [DOMException--](/docs/Web/API/DOMException) describing the error that occurred.",
  "api/mediasession": "The **`MediaSession`** interface of the [Media Session API--](/docs/Web/API/Media_Session_API) allows a web page to provide custom behaviors for standard media playback interactions, and to report metadata that can be sent by the user agent to the device or operating system for presentation in standardized user interface elements.",
  "api/mediasource": "The **`MediaSource`** interface of the [Media Source Extensions API--](/docs/Web/API/Media_Source_Extensions_API) represents a source of media data for an [HTMLMediaElement--](/docs/Web/API/HTMLMediaElement) object. A `MediaSource` object can be attached to a [HTMLMediaElement--](/docs/Web/API/HTMLMediaElement) to be played in the user agent.",
  "api/mediasourcehandle": "The **`MediaSourceHandle`** interface of the [Media Source Extensions API--](/docs/Web/API/Media_Source_Extensions_API) is a proxy for a [MediaSource--](/docs/Web/API/MediaSource) that can be transferred from a dedicated worker back to the main thread and attached to a media element via its [HTMLMediaElement.srcObject--](/docs/Web/API/HTMLMediaElement/srcObject) property. `MediaSource` objects are not transferable because they are event targets, hence the need for `MediaSourceHandle`s.",
  "api/mediastream": "The **`MediaStream`** interface of the [Media Capture and Streams API--](/docs/Web/API/Media_Capture_and_Streams_API) represents a stream of media content. A stream consists of several **tracks**, such as video or audio tracks. Each track is specified as an instance of [MediaStreamTrack--](/docs/Web/API/MediaStreamTrack).",
  "api/mediastream_image_capture_api": "The **MediaStream Image Capture API** is an API for capturing images or videos from a photographic device. In addition to capturing data, it also allows you to retrieve information about device capabilities such as image size, red-eye reduction and whether or not there is a flash and what they are currently set to. Conversely, the API allows the capabilities to be configured within the constraints what the device allows.",
  "api/mediastream_recording_api": "The **MediaStream Recording API**, sometimes referred to as the _Media Recording API_ or the _MediaRecorder API_, is closely affiliated with the [Media Capture and Streams API](/en-US/docs/Web/API/Media_Capture_and_Streams_API) and the [WebRTC API](/en-US/docs/Web/API/WebRTC_API). The MediaStream Recording API makes it possible to capture the data generated by a [MediaStream--](/docs/Web/API/MediaStream) or [HTMLMediaElement--](/docs/Web/API/HTMLMediaElement) object for analysis, processing, or saving to disk. It's also surprisingly easy to work with.",
  "api/mediastreamaudiodestinationnode": "The `MediaStreamAudioDestinationNode` interface represents an audio destination consisting of a [WebRTC](/en-US/docs/Web/API/WebRTC_API) [MediaStream--](/docs/Web/API/MediaStream) with a single `AudioMediaStreamTrack`, which can be used in a similar way to a `MediaStream` obtained from [navigator.mediaDevices.getUserMedia()--](/docs/Web/API/MediaDevices/getUserMedia).",
  "api/mediastreamaudiosourcenode": "The **`MediaStreamAudioSourceNode`** interface is a type of [AudioNode--](/docs/Web/API/AudioNode) which operates as an audio source whose media is received from a [MediaStream--](/docs/Web/API/MediaStream) obtained using the WebRTC or Media Capture and Streams APIs.",
  "api/mediastreamevent": "The **`MediaStreamEvent`** interface represents events that occurs in relation to a [MediaStream--](/docs/Web/API/MediaStream). Two events of this type can be thrown: [addstream--](/docs/Web/API/RTCPeerConnection/addstream_event) and [removestream--](/docs/Web/API/RTCPeerConnection/removestream_event).",
  "api/mediastreamtrack": "The **`MediaStreamTrack`** interface of the [Media Capture and Streams API--](/docs/Web/API/Media_Capture_and_Streams_API) represents a single media track within a stream; typically, these are audio or video tracks, but other track types may exist as well.",
  "api/mediastreamtrackaudiosourcenode": "The **`MediaStreamTrackAudioSourceNode`** interface is a type of [AudioNode--](/docs/Web/API/AudioNode) which represents a source of audio data taken from a specific [MediaStreamTrack--](/docs/Web/API/MediaStreamTrack) obtained through the [WebRTC](/en-US/docs/Web/API/WebRTC_API) or [Media Capture and Streams](/en-US/docs/Web/API/Media_Capture_and_Streams_API) APIs.",
  "api/mediastreamtrackevent": "The **`MediaStreamTrackEvent`** interface of the [Media Capture and Streams API--](/docs/Web/API/Media_Capture_and_Streams_API) represents events which indicate that a [MediaStream--](/docs/Web/API/MediaStream) has had tracks added to or removed from the stream through calls to [Media Capture and Streams API](/en-US/docs/Web/API/Media_Capture_and_Streams_API) methods. These events are sent to the stream when these changes occur.",
  "api/mediastreamtrackgenerator": "The **`MediaStreamTrackGenerator`** interface of the [Insertable Streams for MediaStreamTrack API--](/docs/Web/API/Insertable_Streams_for_MediaStreamTrack_API) creates a [WritableStream--](/docs/Web/API/WritableStream) that acts as a [MediaStreamTrack--](/docs/Web/API/MediaStreamTrack) source.\nThe object consumes a stream of media frames as input, which can be audio or video frames.",
  "api/mediastreamtrackprocessor": "The **`MediaStreamTrackProcessor`** interface of the [Insertable Streams for MediaStreamTrack API--](/docs/Web/API/Insertable_Streams_for_MediaStreamTrack_API) consumes a [MediaStreamTrack--](/docs/Web/API/MediaStreamTrack) object's source and generates a stream of media frames.",
  "api/mediatrackconstraints": "The **`MediaTrackConstraints`** dictionary is used to describe a set of capabilities and the value or values each can take on. A constraints dictionary is passed into [applyConstraints()--](/docs/Web/API/MediaStreamTrack/applyConstraints) to allow a script to establish a set of exact (required) values or ranges and/or preferred values or ranges of values for the track, and the most recently-requested set of custom constraints can be retrieved by calling [getConstraints()--](/docs/Web/API/MediaStreamTrack/getConstraints).",
  "api/mediatracksettings": "The **`MediaTrackSettings`** dictionary is used to return the current values configured for each of a [MediaStreamTrack--](/docs/Web/API/MediaStreamTrack)'s settings. These values will adhere as closely as possible to any constraints previously described using a [MediaTrackConstraints--](/docs/Web/API/MediaTrackConstraints) object and set using [applyConstraints()--](/docs/Web/API/MediaStreamTrack/applyConstraints), and will adhere to the default constraints for any properties whose constraints haven't been changed, or whose customized constraints couldn't be matched.",
  "api/mediatracksupportedconstraints": "The **`MediaTrackSupportedConstraints`** dictionary establishes the list of constrainable properties recognized by the [user agent--](/docs/Glossary/user_agent) or browser in its implementation of the [MediaStreamTrack--](/docs/Web/API/MediaStreamTrack) object. An object conforming to `MediaTrackSupportedConstraints` is returned by [MediaDevices.getSupportedConstraints()--](/docs/Web/API/MediaDevices/getSupportedConstraints).",
  "api/merchantvalidationevent": "The **`MerchantValidationEvent`** interface of the [Payment Request API](/en-US/docs/Web/API/Payment_Request_API) enables a merchant to verify themselves as allowed to use a particular payment handler.",
  "api/messagechannel": "The **`MessageChannel`** interface of the [Channel Messaging API](/en-US/docs/Web/API/Channel_Messaging_API) allows us to create a new message channel and send data through it via its two [MessagePort--](/docs/Web/API/MessagePort) properties.",
  "api/messageevent": "The **`MessageEvent`** interface represents a message received by a target object.",
  "api/messageport": "The **`MessagePort`** interface of the [Channel Messaging API](/en-US/docs/Web/API/Channel_Messaging_API) represents one of the two ports of a [MessageChannel--](/docs/Web/API/MessageChannel), allowing messages to be sent from one port and listening out for them arriving at the other.",
  "api/metadata": "The **`Metadata`** interface contains information about a file system entry. This metadata includes the file's size and modification date and time.",
  "api/midiaccess": "The **`MIDIAccess`** interface of the [Web MIDI API](/en-US/docs/Web/API/Web_MIDI_API) provides methods for listing MIDI input and output devices, and obtaining access to those devices.",
  "api/midiconnectionevent": "The **`MIDIConnectionEvent`** interface of the [Web MIDI API](/en-US/docs/Web/API/Web_MIDI_API) is the event passed to the [statechange--](/docs/Web/API/MIDIAccess/statechange_event) event of the [MIDIAccess--](/docs/Web/API/MIDIAccess) interface and the [statechange--](/docs/Web/API/MIDIPort/statechange_event) event of the [MIDIPort--](/docs/Web/API/MIDIPort) interface. This occurs any time a new port becomes available, or when a previously available port becomes unavailable. For example, this event is fired whenever a MIDI device is either plugged in to or unplugged from a computer.",
  "api/midiinput": "The **`MIDIInput`** interface of the [Web MIDI API](/en-US/docs/Web/API/Web_MIDI_API) receives messages from a MIDI input port.",
  "api/midiinputmap": "The **`MIDIInputMap`** read-only interface of the [Web MIDI API](/en-US/docs/Web/API/Web_MIDI_API) provides the set of MIDI input ports that are currently available.",
  "api/midimessageevent": "The **`MIDIMessageEvent`** interface of the [Web MIDI API](/en-US/docs/Web/API/Web_MIDI_API) represents the event passed to the [midimessage--](/docs/Web/API/MIDIInput/midimessage_event) event of the [MIDIInput--](/docs/Web/API/MIDIInput) interface. A `midimessage` event is fired every time a MIDI message is sent from a device represented by a [MIDIInput--](/docs/Web/API/MIDIInput), for example when a MIDI keyboard key is pressed, a knob is tweaked, or a slider is moved.",
  "api/midioutput": "The **`MIDIOutput`** interface of the [Web MIDI API--](/docs/Web/API/Web_MIDI_API) provides methods to add messages to the queue of an output device, and to clear the queue of messages.",
  "api/midioutputmap": "The **`MIDIOutputMap`** read-only interface of the [Web MIDI API](/en-US/docs/Web/API/Web_MIDI_API) provides the set of MIDI output ports that are currently available.",
  "api/midiport": "The **`MIDIPort`** interface of the [Web MIDI API--](/docs/Web/API/Web_MIDI_API) represents a MIDI input or output port.",
  "api/mimetype": "The **`MimeType`** interface provides contains information about a MIME type associated with a particular plugin. [Navigator.mimeTypes--](/docs/Web/API/Navigator/mimeTypes) returns an array of this object.",
  "api/mimetypearray": "The **`MimeTypeArray`** interface returns an array of [MimeType--](/docs/Web/API/MimeType) instances, each of which contains information about a supported browser plugins. This object is returned by [Navigator.mimeTypes--](/docs/Web/API/Navigator/mimeTypes).",
  "api/mouseevent": "The **`MouseEvent`** interface represents events that occur due to the user interacting with a pointing device (such as a mouse).\nCommon events using this interface include [click--](/docs/Web/API/Element/click_event), [dblclick--](/docs/Web/API/Element/dblclick_event), [mouseup--](/docs/Web/API/Element/mouseup_event), [mousedown--](/docs/Web/API/Element/mousedown_event).",
  "api/mousescrollevent": "The **`MouseScrollEvent`** interface represents events that occur due to the user moving a mouse wheel or similar input device.",
  "api/mutationevent": "The **`MutationEvent`** interface provides event properties that are specific to modifications to the Document Object Model (DOM) hierarchy and nodes.",
  "api/mutationobserver": "The [MutationObserver--](/docs/Web/API/MutationObserver) interface provides the ability to watch for changes being made to the [DOM](/en-US/docs/Web/API/Document_Object_Model) tree. It is designed as a replacement for the older [Mutation Events](/en-US/docs/Web/API/MutationEvent) feature, which was part of the DOM3 Events specification.",
  "api/mutationrecord": "The [MutationRecord--](/docs/Web/API/MutationRecord) is a read-only interface that represents an individual DOM mutation observed by a [MutationObserver--](/docs/Web/API/MutationObserver). It is the object inside the array passed to the callback of a [MutationObserver--](/docs/Web/API/MutationObserver).",
  "api/namednodemap": "The **`NamedNodeMap`** interface represents a collection of [Attr--](/docs/Web/API/Attr) objects. Objects inside a `NamedNodeMap` are not in any particular order, unlike [NodeList--](/docs/Web/API/NodeList), although they may be accessed by an index as in an array.",
  "api/navigateevent": "The **`NavigateEvent`** interface of the [Navigation API--](/docs/Web/API/Navigation_API) is the event object for the [navigate--](/docs/Web/API/Navigation/navigate_event) event, which fires when [any type of navigation](https://github.com/WICG/navigation-api#appendix-types-of-navigations) is initiated (this includes usage of [History API--](/docs/Web/API/History_API) features like [History.go()--](/docs/Web/API/History/go)). `NavigateEvent` provides access to information about that navigation, and allows developers to intercept and control the navigation handling.",
  "api/navigation": "The **`Navigation`** interface of the [Navigation API--](/docs/Web/API/Navigation_API) allows control over all navigation actions for the current `window` in one central place, including initiating navigations programmatically, examining navigation history entries, and managing navigations as they happen.",
  "api/navigation_api": "The **Navigation API** provides the ability to initiate, intercept, and manage browser navigation actions. It can also examine an application's history entries. This is a successor to previous web platform features such as the [History API--](/docs/Web/API/History_API) and [window.location--](/docs/Web/API/window/location), which solves their shortcomings and is specifically aimed at the needs of [single-page applications (SPAs)--](/docs/Glossary/SPA).",
  "api/navigationcurrententrychangeevent": "The **`NavigationCurrentEntryChangeEvent`** interface of the [Navigation API--](/docs/Web/API/Navigation_API) is the event object for the [currententrychange--](/docs/Web/API/Navigation/currententrychange_event) event, which fires when the [Navigation.currentEntry--](/docs/Web/API/Navigation/currentEntry) has changed.",
  "api/navigationdestination": "The **`NavigationDestination`** interface of the [Navigation API--](/docs/Web/API/Navigation_API) represents the destination being navigated to in the current navigation.",
  "api/navigationhistoryentry": "The **`NavigationHistoryEntry`** interface of the [Navigation API--](/docs/Web/API/Navigation_API) represents a single navigation history entry.",
  "api/navigationpreloadmanager": "The **`NavigationPreloadManager`** interface of the [Service Worker API](/en-US/docs/Web/API/Service_Worker_API) provides methods for managing the preloading of resources in parallel with service worker bootup.",
  "api/navigationtransition": "The **`NavigationTransition`** interface of the [Navigation API--](/docs/Web/API/Navigation_API) represents an ongoing navigation, that is, a navigation that hasn't yet reached the [navigatesuccess--](/docs/Web/API/Navigation/navigatesuccess_event) or [navigateerror--](/docs/Web/API/Navigation/navigateerror_event) stage.",
  "api/navigator": "The **`Navigator`** interface represents the state and the identity of the user agent. It allows scripts to query it and to register themselves to carry on some activities.",
  "api/navigatorlogin": "The **`NavigatorLogin`** interface of the [Federated Credential Management (FedCM) API](/en-US/docs/Web/API/FedCM_API) defines login functionality for federated identity providers (IdPs). Specifically, it enables a federated identity provider (IdP) to set its login status when a user signs into or out of the IdP.",
  "api/navigatoruadata": "The **`NavigatorUAData`** interface of the [User-Agent Client Hints API--](/docs/Web/API/User-Agent_Client_Hints_API) returns information about the browser and operating system of a user.",
  "api/ndefmessage": "The **`NDEFMessage`** interface of the [Web NFC API](/en-US/docs/Web/API/Web_NFC_API) represents the content of an NDEF message that has been read from or could be written to an NFC tag. An instance is acquired by calling the `NDEFMessage()` constructor or from the [NDEFReadingEvent.message--](/docs/Web/API/NDEFReadingEvent/message) property, which is passed to the [reading--](/docs/Web/API/NDEFReader/reading_event) event.",
  "api/ndefreader": "The **`NDEFReader`** interface of the [Web NFC API](/en-US/docs/Web/API/Web_NFC_API) is used to read from and write data to compatible NFC devices, e.g. NFC tags supporting NDEF, when these devices are within the reader's magnetic induction field.",
  "api/ndefreadingevent": "The **`NDEFReadingEvent`** interface of the [Web NFC API](/en-US/docs/Web/API/Web_NFC_API) represents events dispatched on new NFC readings obtained by [NDEFReader--](/docs/Web/API/NDEFReader).",
  "api/ndefrecord": "The **`NDEFRecord`** interface of the [Web NFC API](/en-US/docs/Web/API/Web_NFC_API) provides data that can be read from, or written to, compatible NFC devices, e.g. NFC tags supporting NDEF.",
  "api/network_information_api": "The **Network Information API** provides information about the system's connection in terms of general connection type (e.g., 'wifi, 'cellular', etc.).\nThis can be used to select high definition content or low definition content based on the user's connection.",
  "api/networkinformation": "The **`NetworkInformation`** interface of the [Network Information API](/en-US/docs/Web/API/Network_Information_API) provides information about the connection a device is using to communicate with the network and provides a means for scripts to be notified if the connection type changes.\nThe `NetworkInformation` interface cannot be instantiated. It is instead accessed through the `connection` property of the [Navigator--](/docs/Web/API/Navigator) interface or the [WorkerNavigator--](/docs/Web/API/WorkerNavigator) interface.",
  "api/node": "The [DOM--](/docs/Glossary/DOM) **`Node`** interface is an abstract base\nclass upon which many other DOM API objects are based, thus letting those object types\nto be used similarly and often interchangeably. As an abstract class, there is\nno such thing as a plain `Node` object. All objects that implement\n`Node` functionality are based on one of its subclasses. Most notable are\n[Document--](/docs/Web/API/Document), [Element--](/docs/Web/API/Element), and [DocumentFragment--](/docs/Web/API/DocumentFragment).",
  "api/nodeiterator": "The **`NodeIterator`** interface represents an iterator to traverse nodes of a DOM subtree in document order.",
  "api/nodelist": "**`NodeList`** objects are collections of [nodes](/en-US/docs/Web/API/Node), usually returned by properties such as [Node.childNodes--](/docs/Web/API/Node/childNodes) and methods such as [document.querySelectorAll()--](/docs/Web/API/document/querySelectorAll).",
  "api/notification": "The **`Notification`** interface of the [Notifications API--](/docs/Web/API/Notifications_API) is used to configure and display desktop notifications to the user.",
  "api/notificationevent": "The **`NotificationEvent`** interface of the [Notifications API--](/docs/Web/API/Notifications_API) represents a notification event dispatched on the [ServiceWorkerGlobalScope--](/docs/Web/API/ServiceWorkerGlobalScope) of a [ServiceWorker--](/docs/Web/API/ServiceWorker).",
  "api/notifications_api": "The Notifications API allows web pages to control the display of system notifications to the end user. These are outside the top-level browsing context viewport, so therefore can be displayed even when the user has switched tabs or moved to a different app. The API is designed to be compatible with existing notification systems, across different platforms.",
  "api/notrestoredreasondetails": "The **`NotRestoredReasonDetails`** interface of the [Performance API--](/docs/Web/API/Performance_API) represents a single reason why a navigated page was blocked from using the back/forward cache ([bfcache--](/docs/Glossary/bfcache)).",
  "api/notrestoredreasons": "The **`NotRestoredReasons`** interface of the [Performance API--](/docs/Web/API/Performance_API) provides report data containing reasons why the current document was blocked from using the back/forward cache ([bfcache--](/docs/Glossary/bfcache)) on navigation.",
  "api/oes_draw_buffers_indexed": "The **`OES_draw_buffers_indexed`** extension is part of the [WebGL API](/en-US/docs/Web/API/WebGL_API) and enables the use of different blend options when writing to multiple color buffers simultaneously.",
  "api/oes_element_index_uint": "The **`OES_element_index_uint`** extension is part of the [WebGL API](/en-US/docs/Web/API/WebGL_API) and adds support for `gl.UNSIGNED_INT` types to [WebGLRenderingContext.drawElements()--](/docs/Web/API/WebGLRenderingContext/drawElements).",
  "api/oes_fbo_render_mipmap": "The `OES_fbo_render_mipmap` extension is part of the [WebGL API](/en-US/docs/Web/API/WebGL_API) and makes it possible to attach any level of a texture to a framebuffer object.",
  "api/oes_standard_derivatives": "The **`OES_standard_derivatives`** extension is part of the [WebGL API](/en-US/docs/Web/API/WebGL_API) and adds the GLSL derivative functions `dFdx`, `dFdy`, and `fwidth`.",
  "api/oes_texture_float": "The **`OES_texture_float`** extension is part of the [WebGL API](/en-US/docs/Web/API/WebGL_API) and exposes floating-point pixel types for textures.",
  "api/oes_texture_float_linear": "The **`OES_texture_float_linear`** extension is part of the [WebGL API](/en-US/docs/Web/API/WebGL_API) and allows linear filtering with floating-point pixel types for textures.",
  "api/oes_texture_half_float": "The **`OES_texture_half_float`** extension is part of the [WebGL API](/en-US/docs/Web/API/WebGL_API) and adds texture formats with 16- (aka half float) and 32-bit floating-point components.",
  "api/oes_texture_half_float_linear": "The **`OES_texture_half_float_linear`** extension is part of the [WebGL API](/en-US/docs/Web/API/WebGL_API) and allows linear filtering with half floating-point pixel types for textures.",
  "api/oes_vertex_array_object": "The **OES_vertex_array_object** extension is part of the [WebGL API](/en-US/docs/Web/API/WebGL_API) and provides vertex array objects (VAOs) which encapsulate vertex array states. These objects keep pointers to vertex data and provide names for different sets of vertex data.",
  "api/offlineaudiocompletionevent": "The [Web Audio API](/en-US/docs/Web/API/Web_Audio_API) `OfflineAudioCompletionEvent` interface represents events that occur when the processing of an [OfflineAudioContext--](/docs/Web/API/OfflineAudioContext) is terminated. The [complete--](/docs/Web/API/OfflineAudioContext/complete_event) event uses this interface.",
  "api/offlineaudiocontext": "The `OfflineAudioContext` interface is an [AudioContext--](/docs/Web/API/AudioContext) interface representing an audio-processing graph built from linked together [AudioNode--](/docs/Web/API/AudioNode)s. In contrast with a standard [AudioContext--](/docs/Web/API/AudioContext), an `OfflineAudioContext` doesn't render the audio to the device hardware; instead, it generates it, as fast as it can, and outputs the result to an [AudioBuffer--](/docs/Web/API/AudioBuffer).",
  "api/offscreencanvas": "When using the [canvas--](/docs/Web/HTML/Element/canvas) element or the [Canvas API](/en-US/docs/Web/API/Canvas_API), rendering, animation, and user interaction usually happen on the main execution thread of a web application.\nThe computation relating to canvas animations and rendering can have a significant impact on application performance.",
  "api/offscreencanvasrenderingcontext2d": "The **`OffscreenCanvasRenderingContext2D`** interface is a [CanvasRenderingContext2D--](/docs/Web/API/CanvasRenderingContext2D) rendering context for drawing to the bitmap of an `OffscreenCanvas` object.\nIt is similar to the `CanvasRenderingContext2D` object, with the following differences:",
  "api/orientationsensor": "The **`OrientationSensor`** interface of the [Sensor APIs](/en-US/docs/Web/API/Sensor_APIs) is the base class for orientation sensors. This interface cannot be used directly. Instead it provides properties and methods accessed by interfaces that inherit from it.",
  "api/origin": "The global **`origin`** read-only property returns the origin of the global\nscope, serialized as a string.",
  "api/oscillatornode": "The **`OscillatorNode`** interface represents a periodic waveform, such as a sine wave. It is an [AudioScheduledSourceNode--](/docs/Web/API/AudioScheduledSourceNode) audio-processing module that causes a specified frequency of a given wave to be created—in effect, a constant tone.",
  "api/otpcredential": "The **`OTPCredential`** interface of the [WebOTP API--](/docs/Web/API/WebOTP_API) is returned when a WebOTP [navigator.credentials.get()--](/docs/Web/API/CredentialsContainer/get) call (i.e. invoked with an `otp` option) fulfills. It includes a `code` property that contains the retrieved one-time password (OTP).",
  "api/overconstrainederror": "The **`OverconstrainedError`** interface of the [Media Capture and Streams API](/en-US/docs/Web/API/Media_Capture_and_Streams_API) indicates that the set of desired capabilities for the current [MediaStreamTrack--](/docs/Web/API/MediaStreamTrack) cannot currently be met. When this event is thrown on a MediaStreamTrack, it is muted until either the current constraints can be established or until satisfiable constraints are applied.",
  "api/ovr_multiview2": "The `OVR_multiview2` extension is part of the [WebGL API](/en-US/docs/Web/API/WebGL_API) and adds support for rendering into multiple views simultaneously. This especially useful for virtual reality (VR) and WebXR.",
  "api/page_visibility_api": "The Page Visibility API provides events you can watch for to know when a document becomes visible or hidden, as well as features to look at the current visibility state of the page.",
  "api/pagetransitionevent": "The **`PageTransitionEvent`** event object is available inside handler functions for the [`pageshow`](/en-US/docs/Web/API/Window/pageshow_event) and [`pagehide`](/en-US/docs/Web/API/Window/pagehide_event) events, fired when a document is being loaded or unloaded.",
  "api/paintworkletglobalscope": "The **`PaintWorkletGlobalScope`** interface of the [CSS Painting API](/en-US/docs/Web/API/CSS_Painting_API) represents the global object available inside a paint [Worklet--](/docs/Web/API/Worklet).",
  "api/pannernode": "The `PannerNode` interface defines an audio-processing object that represents the location, direction, and behavior of an audio source signal in a simulated physical space. This [AudioNode--](/docs/Web/API/AudioNode) uses right-hand Cartesian coordinates to describe the source's _position_ as a vector and its _orientation_ as a 3D directional cone.",
  "api/passwordcredential": "The **`PasswordCredential`** interface of the [Credential Management API](/en-US/docs/Web/API/Credential_Management_API) provides information about a username/password pair. In supporting browsers an instance of this class may be passed in the `credential` member of the `init` object for global [fetch()--](/docs/Web/API/fetch).",
  "api/path2d": "The **`Path2D`** interface of the Canvas 2D API is used to declare a path that can then be used on a [CanvasRenderingContext2D--](/docs/Web/API/CanvasRenderingContext2D) object. The [path methods](/en-US/docs/Web/API/CanvasRenderingContext2D#paths) of the `CanvasRenderingContext2D` interface are also present on this interface, which gives you the convenience of being able to retain and replay your path whenever desired.",
  "api/payment_handler_api": "The Payment Handler API provides a standardized set of functionality for web applications to directly handle payments, rather than having to be redirected to a separate site for payment handling.",
  "api/payment_request_api": "The **Payment Request API** provides a consistent user experience for merchants and users. It is not a new way of paying for things; instead, it's a way for users to select their preferred way of paying for things and make that information available to a merchant.",
  "api/paymentaddress": "The **`PaymentAddress`** interface of the [Payment Request API](/en-US/docs/Web/API/Payment_Request_API) is used to store shipping or payment address information.",
  "api/paymentmanager": "The **`PaymentManager`** interface of the [Payment Handler API--](/docs/Web/API/Payment_Handler_API) is used to manage various aspects of payment app functionality.",
  "api/paymentmethodchangeevent": "The **`PaymentMethodChangeEvent`** interface of the [Payment Request API](/en-US/docs/Web/API/Payment_Request_API) describes the [paymentmethodchange--](/docs/Web/API/PaymentRequest/paymentmethodchange_event) event which is fired by some payment handlers when the user switches payment instruments (e.g., a user selects a \"store\" card to make a purchase while using Apple Pay).",
  "api/paymentrequest": "The [Payment Request API's](/en-US/docs/Web/API/Payment_Request_API) **`PaymentRequest`** interface is the primary access point into the API, and lets web content and apps accept payments from the end user on behalf of the operator of the site or the publisher of the app.",
  "api/paymentrequestevent": "The **`PaymentRequestEvent`** interface of the [Payment Handler API--](/docs/Web/API/Payment_Handler_API) is the object passed to a payment handler when a [PaymentRequest--](/docs/Web/API/PaymentRequest) is made.",
  "api/paymentrequestupdateevent": "The **`PaymentRequestUpdateEvent`** interface is used for events sent to a [PaymentRequest--](/docs/Web/API/PaymentRequest) instance when changes are made to shipping-related information for a pending [PaymentRequest--](/docs/Web/API/PaymentRequest). Those events are:",
  "api/paymentresponse": "The **`PaymentResponse`** interface of the [Payment Request API](/en-US/docs/Web/API/Payment_Request_API) is returned after a user selects a payment method and approves a payment request.",
  "api/pbkdf2params": "The **`Pbkdf2Params`** dictionary of the [Web Crypto API](/en-US/docs/Web/API/Web_Crypto_API) represents the object that should be passed as the `algorithm` parameter into [SubtleCrypto.deriveKey()--](/docs/Web/API/SubtleCrypto/deriveKey), when using the [PBKDF2](/en-US/docs/Web/API/SubtleCrypto/deriveKey#pbkdf2) algorithm.",
  "api/performance": "The **`Performance`** interface provides access to performance-related information for the current page.",
  "api/performance_api": "The Performance API is a group of standards used to measure the performance of web applications.",
  "api/performance_property": "The global **`performance`** property returns a [Performance--](/docs/Web/API/Performance) object, which can be used to gather performance information about the context it is called in (window or worker).",
  "api/performanceelementtiming": "The **`PerformanceElementTiming`** interface contains render timing information for image and text node elements the developer annotated with an [`elementtiming`](/en-US/docs/Web/HTML/Attributes/elementtiming) attribute for observation.",
  "api/performanceentry": "The **`PerformanceEntry`** object encapsulates a single performance metric that is part of the browser's performance timeline.",
  "api/performanceeventtiming": "The `PerformanceEventTiming` interface of the Event Timing API provides insights into the latency of certain event types triggered by user interaction.",
  "api/performancelonganimationframetiming": "The **`PerformanceLongAnimationFrameTiming`** interface is specified in the Long Animation Frames API and provides metrics on long animation frames (LoAFs) that occupy rendering and block other tasks from being executed.",
  "api/performancelongtasktiming": "The **`PerformanceLongTaskTiming`** interface provides information about tasks that occupy the UI thread for 50 milliseconds or more.",
  "api/performancemark": "**`PerformanceMark`** is an interface for [PerformanceEntry--](/docs/Web/API/PerformanceEntry) objects with an [entryType--](/docs/Web/API/PerformanceEntry/entryType) of \"`mark`\".",
  "api/performancemeasure": "**`PerformanceMeasure`** is an _abstract_ interface for [PerformanceEntry--](/docs/Web/API/PerformanceEntry) objects with an [entryType--](/docs/Web/API/PerformanceEntry/entryType) of \"`measure`\". Entries of this type are created by calling [performance.measure()--](/docs/Web/API/Performance/measure) to add a _named_ [DOMHighResTimeStamp--](/docs/Web/API/DOMHighResTimeStamp) (the _measure_) between two _marks_ to the browser's _performance timeline_.",
  "api/performancenavigation": "The legacy **`PerformanceNavigation`** interface represents information about how the navigation to the current document was done.",
  "api/performancenavigationtiming": "The **`PerformanceNavigationTiming`** interface provides methods and properties to store and retrieve metrics regarding the browser's document navigation events. For example, this interface can be used to determine how much time it takes to load or unload a document.",
  "api/performanceobserver": "The **`PerformanceObserver`** interface is used to observe performance measurement events and be notified of new [performance entries--](/docs/Web/API/PerformanceEntry) as they are recorded in the browser's _performance timeline_.",
  "api/performanceobserverentrylist": "The **`PerformanceObserverEntryList`** interface is a list of [performance events--](/docs/Web/API/PerformanceEntry) that were explicitly observed via the [observe()--](/docs/Web/API/PerformanceObserver/observe) method.",
  "api/performancepainttiming": "The **`PerformancePaintTiming`** interface provides timing information about \"paint\" (also called \"render\") operations during web page construction. \"Paint\" refers to conversion of the render tree to on-screen pixels.",
  "api/performanceresourcetiming": "The **`PerformanceResourceTiming`** interface enables retrieval and analysis of detailed network timing data regarding the loading of an application's resources. An application can use the timing metrics to determine, for example, the length of time it takes to fetch a specific resource, such as an [XMLHttpRequest--](/docs/Web/API/XMLHttpRequest), [SVG element--](/docs/Web/SVG/Element/SVG), image, or script.",
  "api/performancescripttiming": "The **`PerformanceScriptTiming`** interface is specified in the Long Animation Frames API and provides metrics on individual scripts that contribute to long animation frames (LoAFs).",
  "api/performanceservertiming": "The **`PerformanceServerTiming`** interface surfaces server metrics that are sent with the response in the [Server-Timing--](/docs/Web/HTTP/Headers/Server-Timing) HTTP header.",
  "api/performancetiming": "> **Warning:** This interface is deprecated in the [Navigation Timing Level 2 specification](https://w3c.github.io/navigation-timing/#obsolete). Please use the [PerformanceNavigationTiming--](/docs/Web/API/PerformanceNavigationTiming) interface instead.",
  "api/periodicsyncevent": "The **`PeriodicSyncEvent`** interface of the [Web Periodic Background Synchronization API--](/docs/Web/API/Web_Periodic_Background_Synchronization_API) provides a way to run tasks in the service worker with network connectivity.",
  "api/periodicsyncmanager": "The **`PeriodicSyncManager`** interface of the [Web Periodic Background Synchronization API--](/docs/Web/API/Web_Periodic_Background_Synchronization_API) provides a way to register tasks to be run in a service worker at periodic intervals with network connectivity. These tasks are referred to as periodic background sync requests. Access `PeriodicSyncManager` through the [ServiceWorkerRegistration.periodicSync--](/docs/Web/API/ServiceWorkerRegistration/periodicSync).",
  "api/periodicwave": "The **`PeriodicWave`** interface defines a periodic waveform that can be used to shape the output of an [OscillatorNode--](/docs/Web/API/OscillatorNode).",
  "api/permissions": "The **`Permissions`** interface of the [Permissions API](/en-US/docs/Web/API/Permissions_API) provides the core Permission API functionality, such as methods for querying and revoking permissions",
  "api/permissions_api": "The **Permissions API** provides a consistent programmatic way to query the status of API permissions attributed to the current context. For example, the Permissions API can be used to determine if permission to access a particular API has been granted or denied, or requires specific user permission.",
  "api/permissionstatus": "The **`PermissionStatus`** interface of the [Permissions API](/en-US/docs/Web/API/Permissions_API) provides the state of an object and an event handler for monitoring changes to said state.",
  "api/picture-in-picture_api": "The **Picture-in-Picture API** allow websites to create a floating, always-on-top video window. This allows users to continue consuming media while they interact with other sites or applications on their device.",
  "api/pictureinpictureevent": "The **`PictureInPictureEvent`** interface represents picture-in-picture-related events, including [enterpictureinpicture--](/docs/Web/API/HTMLVideoElement/enterpictureinpicture_event), [leavepictureinpicture--](/docs/Web/API/HTMLVideoElement/leavepictureinpicture_event) and [resize--](/docs/Web/API/PictureInPictureWindow/resize_event)",
  "api/pictureinpicturewindow": "The **`PictureInPictureWindow`** interface represents an object able to programmatically obtain the **`width`** and **`height`** and **`resize event`** of the floating video window.",
  "api/plugin": "The `Plugin` interface provides information about a browser plugin.",
  "api/pluginarray": "The `PluginArray` interface is used to store a list of [Plugin--](/docs/Web/API/Plugin) objects describing the available [plugins](/en-US/docs/Mozilla/Add-ons/Plugins); it's returned by the [navigator.plugins--](/docs/Web/API/Navigator/plugins) property. The `PluginArray` is not a JavaScript array, but has the `length` property and supports accessing individual items using bracket notation (`plugins[2]`), as well as via `item(index)` and `namedItem(\"name\")` methods.",
  "api/pointer_events": "Much of today's web content assumes the user's pointing device will be a mouse. However, since many devices support other types of pointing input devices, such as pen/stylus and touch surfaces, extensions to the existing pointing device event models are needed. _[Pointer events](#pointer_event)_ address that need.",
  "api/pointer_lock_api": "The **Pointer Lock API** (formerly called _Mouse Lock API_) provides input methods based on the movement of the mouse over time (i.e., deltas), not just the absolute position of the mouse cursor in the viewport. It gives you access to raw mouse movement, locks the target of mouse events to a single element, eliminates limits on how far mouse movement can go in a single direction, and removes the cursor from view. It is ideal for first-person 3D games, for example.",
  "api/pointerevent": "The **`PointerEvent`** interface represents the state of a DOM event produced by a pointer such as the geometry of the contact point, the device type that generated the event, the amount of pressure that was applied on the contact surface, etc.",
  "api/popover_api": "The **Popover API** provides developers with a standard, consistent, flexible mechanism for displaying popover content on top of other page content. Popover content can be controlled either declaratively using HTML attributes, or via JavaScript.",
  "api/popstateevent": "**`PopStateEvent`** is an interface for the [`popstate`](/en-US/docs/Web/API/Window/popstate_event) event.",
  "api/positionsensorvrdevice": "The **`PositionSensorVRDevice`** interface of the [WebVR API](/en-US/docs/Web/API/WebVR_API) represents VR hardware's position sensor. You can access information such as the current position and orientation of the sensor in relation to the head mounted display through the [PositionSensorVRDevice.getState()--](/docs/Web/API/PositionSensorVRDevice/getState) method.",
  "api/presentation": "The **`Presentation`** can be defined as two possible user agents in the context: _Controlling user agent_ and _Receiving user agent_.",
  "api/presentation_api": "The Presentation API lets a [user agent--](/docs/Glossary/user_agent) (such as a Web browser) effectively display web content through large presentation devices such as projectors and network-connected televisions. Supported types of multimedia devices include both displays which are wired using HDMI, DVI, or the like, or wireless, using [DLNA](https://www.dlna.org/), [Chromecast](https://developers.google.com/cast/), [AirPlay](https://developer.apple.com/airplay/), or [Miracast](https://www.wi-fi.org/discover-wi-fi/miracast).",
  "api/presentationavailability": "A **`PresentationAvailability`** object is associated with available [presentation displays](https://www.w3.org/TR/presentation-api/#dfn-presentation-display) and represents the _presentation display availability_ for a presentation request. If the [controlling user agent](https://www.w3.org/TR/presentation-api/#dfn-controlling-user-agent) can [monitor the list of available presentation displays](https://www.w3.org/TR/presentation-api/#dfn-monitor-the-list-of-available-presentation-displays) in the background (without a pending request to `start()`), the `PresentationAvailability` object _MUST_ be implemented in a [controlling browsing context](https://www.w3.org/TR/presentation-api/#dfn-controlling-browsing-context).",
  "api/presentationconnection": "The **`PresentationConnection`** interface of the [Presentation API](/en-US/docs/Web/API/Presentation_API) provides methods and properties for managing a single presentation. Each [presentation connection](https://www.w3.org/TR/presentation-api/#dfn-presentation-connection) is represented by a `PresentationConnection` object. Both the [controlling user agent](https://www.w3.org/TR/presentation-api/#dfn-controlling-user-agent) and [receiving user agent](https://www.w3.org/TR/presentation-api/#dfn-receiving-user-agent) _MUST_ implement `PresentationConnection`.",
  "api/presentationconnectionavailableevent": "The **`PresentationConnectionAvailableEvent`** interface of the [Presentation API](/en-US/docs/Web/API/Presentation_API) is fired on a [PresentationRequest--](/docs/Web/API/PresentationRequest) when a connection associated with the object is created.",
  "api/presentationconnectioncloseevent": "The **`PresentationConnectionCloseEvent`** interface of the [Presentation API](/en-US/docs/Web/API/Presentation_API) is fired on a [PresentationConnection--](/docs/Web/API/PresentationConnection) when it is closed.",
  "api/presentationconnectionlist": "`PresentationConnectionList` is the collection of incoming presentation connections.",
  "api/presentationreceiver": "The **`PresentationReceiver`** interface of the [Presentation API](/en-US/docs/Web/API/Presentation_API) provides a means for a receiving browsing context to access controlling browsing contexts and communicate with them.",
  "api/presentationrequest": "A `PresentationRequest` object is used to initiate or reconnect to a presentation made by a [controlling browsing context](https://www.w3.org/TR/presentation-api/#dfn-controlling-browsing-context). The `PresentationRequest` object _MUST_ be implemented in a [controlling browsing context](https://www.w3.org/TR/presentation-api/#dfn-controlling-browsing-context) provided by a [controlling user agent](https://www.w3.org/TR/presentation-api/#dfn-controlling-user-agent).",
  "api/prioritized_task_scheduling_api": "The **Prioritized Task Scheduling API** provides a standardized way to prioritize all tasks belonging to an application, whether they are defined in a website developer's code or in third-party libraries and frameworks.",
  "api/processinginstruction": "The **`ProcessingInstruction`** interface represents a [processing instruction](https://www.w3.org/TR/xml/#sec-pi); that is, a [Node--](/docs/Web/API/Node) which embeds an instruction targeting a specific application but that can be ignored by any other applications which don't recognize the instruction.",
  "api/progressevent": "The **`ProgressEvent`** interface represents events measuring progress of an underlying process, like an HTTP request (for an `XMLHttpRequest`, or the loading of the underlying resource of an [img--](/docs/Web/HTML/Element/img), [audio--](/docs/Web/HTML/Element/audio), [video--](/docs/Web/HTML/Element/video), [style--](/docs/Web/HTML/Element/style) or [link--](/docs/Web/HTML/Element/link)).",
  "api/promiserejectionevent": "The **`PromiseRejectionEvent`** interface represents events which are sent to the global script context when JavaScript {{jsxref(\"Promise\")}}s are rejected. These events are particularly useful for telemetry and debugging purposes.",
  "api/publickeycredential": "The **`PublicKeyCredential`** interface provides information about a public key / private key pair, which is a credential for logging in to a service using an un-phishable and data-breach resistant asymmetric key pair instead of a password. It inherits from [Credential--](/docs/Web/API/Credential), and is part of the [Web Authentication API](/en-US/docs/Web/API/Web_Authentication_API) extension to the [Credential Management API](/en-US/docs/Web/API/Credential_Management_API).",
  "api/push_api": "The **Push API** gives web applications the ability to receive messages pushed to them from a server, whether or not the web app is in the foreground, or even currently loaded, on a user agent. This lets developers deliver asynchronous notifications and updates to users that opt in, resulting in better engagement with timely new content.",
  "api/pushevent": "The **`PushEvent`** interface of the [Push API](/en-US/docs/Web/API/Push_API) represents a push message that has been received. This event is sent to the [global scope](/en-US/docs/Web/API/ServiceWorkerGlobalScope) of a [ServiceWorker--](/docs/Web/API/ServiceWorker). It contains the information sent from an application server to a [PushSubscription--](/docs/Web/API/PushSubscription).",
  "api/pushmanager": "The **`PushManager`** interface of the [Push API](/en-US/docs/Web/API/Push_API) provides a way to receive notifications from third-party servers as well as request URLs for push notifications.",
  "api/pushmessagedata": "The **`PushMessageData`** interface of the [Push API](/en-US/docs/Web/API/Push_API) provides methods which let you retrieve the push data sent by a server in various formats.",
  "api/pushsubscription": "The `PushSubscription` interface of the [Push API](/en-US/docs/Web/API/Push_API) provides a subscription's URL endpoint and allows unsubscribing from a push service.",
  "api/pushsubscriptionoptions": "The **`PushSubscriptionOptions`** interface of the [Push API--](/docs/Web/API/Push_API) represents the options associated with a push subscription.",
  "api/queuemicrotask": "The **`queueMicrotask()`** method,\nwhich is exposed on the [Window--](/docs/Web/API/Window) or [Worker--](/docs/Web/API/Worker) interface,\nqueues a microtask to be executed at a safe time prior to control returning to the\nbrowser's event loop.",
  "api/radionodelist": "The **`RadioNodeList`** interface represents a collection of elements in a [form--](/docs/Web/HTML/Element/form) or a [fieldset--](/docs/Web/HTML/Element/fieldset) element, returned by a call to [HTMLFormControlsCollection.namedItem()--](/docs/Web/API/HTMLFormControlsCollection/namedItem).",
  "api/range": "The **`Range`** interface represents a fragment of a document that can contain nodes and parts of text nodes.",
  "api/readablebytestreamcontroller": "The **`ReadableByteStreamController`** interface of the [Streams API](/en-US/docs/Web/API/Streams_API) represents a controller for a [readable byte stream](/en-US/docs/Web/API/Streams_API/Using_readable_byte_streams).\nIt allows control of the state and internal queue of a [ReadableStream--](/docs/Web/API/ReadableStream) with an underlying byte source, and enables efficient zero-copy transfer of data from the underlying source to a consumer when the stream's internal queue is empty.",
  "api/readablestream": "The `ReadableStream` interface of the [Streams API](/en-US/docs/Web/API/Streams_API) represents a readable stream of byte data. The [Fetch API](/en-US/docs/Web/API/Fetch_API) offers a concrete instance of a `ReadableStream` through the [body--](/docs/Web/API/Response/body) property of a [Response--](/docs/Web/API/Response) object.",
  "api/readablestreambyobreader": "The `ReadableStreamBYOBReader` interface of the [Streams API](/en-US/docs/Web/API/Streams_API) defines a reader for a [ReadableStream--](/docs/Web/API/ReadableStream) that supports zero-copy reading from an underlying byte source.\nIt is used for efficient copying from underlying sources where the data is delivered as an \"anonymous\" sequence of bytes, such as files.",
  "api/readablestreambyobrequest": "The **`ReadableStreamBYOBRequest`** interface of the [Streams API](/en-US/docs/Web/API/Streams_API) represents a \"pull request\" for data from an underlying source that will made as a zero-copy transfer to a consumer (bypassing the stream's internal queues).",
  "api/readablestreamdefaultcontroller": "The **`ReadableStreamDefaultController`** interface of the [Streams API](/en-US/docs/Web/API/Streams_API) represents a controller allowing control of a [ReadableStream--](/docs/Web/API/ReadableStream)'s state and internal queue. Default controllers are for streams that are not byte streams.",
  "api/readablestreamdefaultreader": "The **`ReadableStreamDefaultReader`** interface of the [Streams API](/en-US/docs/Web/API/Streams_API) represents a default reader that can be used to read stream data supplied from a network (such as a fetch request).",
  "api/relativeorientationsensor": "The **`RelativeOrientationSensor`** interface of the [Sensor APIs](/en-US/docs/Web/API/Sensor_APIs) describes the device's physical orientation without regard to the Earth's reference coordinate system.",
  "api/remote_playback_api": "The **Remote Playback API** extends the [HTMLMediaElement--](/docs/Web/API/HTMLMediaElement) to enable the control of media played on a remote device.",
  "api/remoteplayback": "The **`RemotePlayback`** interface of the [Remote Playback API--](/docs/Web/API/Remote_Playback_API) allows the page to detect availability of remote playback devices, then connect to and control playing on these devices.",
  "api/report": "The `Report` interface of the [Reporting API](/en-US/docs/Web/API/Reporting_API) represents a single report.",
  "api/reportbody": "The **`ReportBody`** interface of the [Reporting API--](/docs/Web/API/Reporting_API) represents the body of a report. Individual report types inherit from this interface, adding specific attributes relevant to the particular report.",
  "api/reporterror": "The **`reportError()`** global method may be used to report errors to the console or global event handlers, emulating an uncaught JavaScript exception.",
  "api/reporting_api": "The Reporting API provides a generic reporting mechanism for web applications to use to make reports available based on various platform features (for example [Content Security Policy](/en-US/docs/Web/HTTP/CSP), [Permissions-Policy](/en-US/docs/Web/HTTP/Headers/Permissions-Policy), or feature deprecation reports) in a consistent manner.",
  "api/reportingobserver": "The `ReportingObserver` interface of the [Reporting API](/en-US/docs/Web/API/Reporting_API) allows you to collect and access reports.",
  "api/request": "The **`Request`** interface of the [Fetch API](/en-US/docs/Web/API/Fetch_API) represents a resource request.",
  "api/resize_observer_api": "The Resize Observer API provides a performant mechanism by which code can monitor an element for changes to its size, with notifications being delivered to the observer each time the size changes.",
  "api/resizeobserver": "The **`ResizeObserver`** interface reports changes to the dimensions of an [Element--](/docs/Web/API/Element)'s content or border box, or the bounding box of an [SVGElement--](/docs/Web/API/SVGElement).",
  "api/resizeobserverentry": "The **`ResizeObserverEntry`** interface represents the object passed to the [ResizeObserver()--](/docs/Web/API/ResizeObserver/ResizeObserver) constructor's callback function, which allows you to access the new dimensions of the [Element--](/docs/Web/API/Element) or [SVGElement--](/docs/Web/API/SVGElement) being observed.",
  "api/resizeobserversize": "The **`ResizeObserverSize`** interface of the [Resize Observer API--](/docs/Web/API/Resize_Observer_API) is used by the [ResizeObserverEntry--](/docs/Web/API/ResizeObserverEntry) interface to access the box sizing properties of the element being observed.",
  "api/response": "The **`Response`** interface of the [Fetch API](/en-US/docs/Web/API/Fetch_API) represents the response to a request.",
  "api/rsahashedimportparams": "The **`RsaHashedImportParams`** dictionary of the [Web Crypto API](/en-US/docs/Web/API/Web_Crypto_API) represents the object that should be passed as the `algorithm` parameter into [SubtleCrypto.importKey()--](/docs/Web/API/SubtleCrypto/importKey) or [SubtleCrypto.unwrapKey()--](/docs/Web/API/SubtleCrypto/unwrapKey), when importing any RSA-based key pair: that is, when the algorithm is identified as any of [RSASSA-PKCS1-v1_5](/en-US/docs/Web/API/SubtleCrypto/sign#rsassa-pkcs1-v1_5), [RSA-PSS](/en-US/docs/Web/API/SubtleCrypto/sign#rsa-pss), or [RSA-OAEP](/en-US/docs/Web/API/SubtleCrypto/encrypt#rsa-oaep).",
  "api/rsahashedkeygenparams": "The **`RsaHashedKeyGenParams`** dictionary of the [Web Crypto API](/en-US/docs/Web/API/Web_Crypto_API) represents the object that should be passed as the `algorithm` parameter into [SubtleCrypto.generateKey()--](/docs/Web/API/SubtleCrypto/generateKey), when generating any RSA-based key pair: that is, when the algorithm is identified as any of [RSASSA-PKCS1-v1_5](/en-US/docs/Web/API/SubtleCrypto/sign#rsassa-pkcs1-v1_5), [RSA-PSS](/en-US/docs/Web/API/SubtleCrypto/sign#rsa-pss), or [RSA-OAEP](/en-US/docs/Web/API/SubtleCrypto/encrypt#rsa-oaep).",
  "api/rsaoaepparams": "The **`RsaOaepParams`** dictionary of the [Web Crypto API](/en-US/docs/Web/API/Web_Crypto_API) represents the object that should be passed as the `algorithm` parameter into [SubtleCrypto.encrypt()--](/docs/Web/API/SubtleCrypto/encrypt), [SubtleCrypto.decrypt()--](/docs/Web/API/SubtleCrypto/decrypt), [SubtleCrypto.wrapKey()--](/docs/Web/API/SubtleCrypto/wrapKey), or [SubtleCrypto.unwrapKey()--](/docs/Web/API/SubtleCrypto/unwrapKey), when using the [RSA_OAEP](/en-US/docs/Web/API/SubtleCrypto/encrypt#rsa-oaep) algorithm.",
  "api/rsapssparams": "The **`RsaPssParams`** dictionary of the [Web Crypto API](/en-US/docs/Web/API/Web_Crypto_API) represents the object that should be passed as the `algorithm` parameter into [SubtleCrypto.sign()--](/docs/Web/API/SubtleCrypto/sign) or [SubtleCrypto.verify()--](/docs/Web/API/SubtleCrypto/verify), when using the [RSA-PSS](/en-US/docs/Web/API/SubtleCrypto/sign#rsa-pss) algorithm.",
  "api/rtcaudiosourcestats": "The **`RTCAudioSourceStats`** dictionary of the [WebRTC API](/en-US/docs/Web/API/WebRTC_API) provides statistics information about an audio track ([MediaStreamTrack--](/docs/Web/API/MediaStreamTrack)) that is attached to one or more senders ([RTCRtpSender--](/docs/Web/API/RTCRtpSender)).",
  "api/rtccertificate": "The **`RTCCertificate`** interface of the [WebRTC API](/en-US/docs/Web/API/WebRTC_API) provides an object representing a certificate that an [RTCPeerConnection--](/docs/Web/API/RTCPeerConnection) uses to authenticate.",
  "api/rtccertificatestats": "The **`RTCCertificateStats`** dictionary of the [WebRTC API](/en-US/docs/Web/API/WebRTC_API) is used to report information about a certificate used by an [RTCDtlsTransport--](/docs/Web/API/RTCDtlsTransport) and its underlying [RTCIceTransport--](/docs/Web/API/RTCIceTransport).",
  "api/rtccodecstats": "The **`RTCCodecStats`** dictionary of the [WebRTC API](/en-US/docs/Web/API/WebRTC_API) provides statistics about a codec used by [RTP--](/docs/Glossary/RTP) streams that are being sent or received by the associated [RTCPeerConnection--](/docs/Web/API/RTCPeerConnection) object.",
  "api/rtcdatachannel": "The **`RTCDataChannel`** interface represents a network channel which can be used for bidirectional peer-to-peer transfers of arbitrary data. Every data channel is associated with an [RTCPeerConnection--](/docs/Web/API/RTCPeerConnection), and each peer connection can have up to a theoretical maximum of 65,534 data channels (the actual limit may vary from browser to browser).",
  "api/rtcdatachannelevent": "The **`RTCDataChannelEvent`** interface\nrepresents an event related to a specific [RTCDataChannel--](/docs/Web/API/RTCDataChannel).",
  "api/rtcdtlstransport": "The **`RTCDtlsTransport`** interface provides access to information about the Datagram Transport Layer Security (**[DTLS--](/docs/Glossary/DTLS)**) transport over which a [RTCPeerConnection--](/docs/Web/API/RTCPeerConnection)'s [RTP--](/docs/Glossary/RTP) and [RTCP--](/docs/Glossary/RTCP) packets are sent and received by its [RTCRtpSender--](/docs/Web/API/RTCRtpSender) and [RTCRtpReceiver--](/docs/Web/API/RTCRtpReceiver) objects.",
  "api/rtcdtmfsender": "The **`RTCDTMFSender`** interface provides a mechanism for transmitting [DTMF--](/docs/Glossary/DTMF) codes on a [WebRTC](/en-US/docs/Web/API/WebRTC_API) [RTCPeerConnection--](/docs/Web/API/RTCPeerConnection). You gain access to the connection's `RTCDTMFSender` through the [RTCRtpSender.dtmf--](/docs/Web/API/RTCRtpSender/dtmf) property on the audio track you wish to send DTMF with.",
  "api/rtcdtmftonechangeevent": "The **`RTCDTMFToneChangeEvent`** interface represents events sent to indicate that [DTMF--](/docs/Glossary/DTMF) tones have started or finished playing. This interface is used by the [`tonechange`](/en-US/docs/Web/API/RTCDTMFSender/tonechange_event) event.",
  "api/rtcencodedaudioframe": "The **`RTCEncodedAudioFrame`** of the [WebRTC API](/en-US/docs/Web/API/WebRTC_API) represents an encoded audio frame in the WebRTC receiver or sender pipeline, which may be modified using a [WebRTC Encoded Transform](/en-US/docs/Web/API/WebRTC_API/Using_Encoded_Transforms).",
  "api/rtcencodedvideoframe": "The **`RTCEncodedVideoFrame`** of the [WebRTC API](/en-US/docs/Web/API/WebRTC_API) represents an encoded video frame in the WebRTC receiver or sender pipeline, which may be modified using a [WebRTC Encoded Transform](/en-US/docs/Web/API/WebRTC_API/Using_Encoded_Transforms).",
  "api/rtcerror": "The **`RTCError`** interface describes an error which has occurred while handling [WebRTC](/en-US/docs/Web/API/WebRTC_API) operations. It's based upon the standard [DOMException--](/docs/Web/API/DOMException) interface that describes general DOM errors.",
  "api/rtcerrorevent": "The WebRTC API's **`RTCErrorEvent`** interface represents an error sent to a WebRTC object. It's based on the standard [Event--](/docs/Web/API/Event) interface, but adds RTC-specific information describing the error, as shown below.",
  "api/rtcicecandidate": "The **`RTCIceCandidate`** interface—part of the [WebRTC API](/en-US/docs/Web/API/WebRTC_API)—represents a candidate Interactive Connectivity Establishment ([ICE--](/docs/Glossary/ICE)) configuration which may be used to establish an [RTCPeerConnection--](/docs/Web/API/RTCPeerConnection).",
  "api/rtcicecandidatepair": "The **`RTCIceCandidatePair`** dictionary describes a pair of ICE candidates which together comprise a description of a viable connection between two WebRTC endpoints. It is used as the return value from [RTCIceTransport.getSelectedCandidatePair()--](/docs/Web/API/RTCIceTransport/getSelectedCandidatePair) to identify the currently-selected candidate pair identified by the ICE agent.",
  "api/rtcicecandidatepairstats": "The **`RTCIceCandidatePairStats`** dictionary of the [WebRTC API](/en-US/docs/Web/API/WebRTC_API) is used to report statistics that provide insight into the quality and performance of an [RTCPeerConnection--](/docs/Web/API/RTCPeerConnection) while connected and configured as described by the specified pair of [ICE--](/docs/Glossary/ICE) candidates.",
  "api/rtcicecandidatestats": "The **`RTCIceCandidateStats`** dictionary of the [WebRTC API](/en-US/docs/Web/API/WebRTC_API) is used to report statistics related to an [RTCIceCandidate--](/docs/Web/API/RTCIceCandidate).",
  "api/rtciceparameters": "The **`RTCIceParameters`** dictionary specifies the username fragment and password assigned to an [ICE--](/docs/Glossary/ICE) session.",
  "api/rtcicetransport": "The **`RTCIceTransport`** interface provides access to information about the [ICE--](/docs/Glossary/ICE) transport layer over which the data is being sent and received.\nThis is particularly useful if you need to access state information about the connection.",
  "api/rtcidentityassertion": "The **`RTCIdentityAssertion`** interface of the [WebRTC API](/en-US/docs/Web/API/WebRTC_API) represents the identity of a remote peer of the current connection. If no peer has yet been set and verified, then this interface returns `null`. Once set it can't be changed.",
  "api/rtcinboundrtpstreamstats": "The **`RTCInboundRtpStreamStats`** dictionary of the [WebRTC API](/en-US/docs/Web/API/WebRTC_API) is used to report statistics related to the receiving end of an RTP stream on the local end of the [RTCPeerConnection--](/docs/Web/API/RTCPeerConnection).",
  "api/rtcoutboundrtpstreamstats": "The **`RTCOutboundRtpStreamStats`** dictionary of the [WebRTC API](/en-US/docs/Web/API/WebRTC_API) is used to report metrics and statistics related to an outbound [RTP--](/docs/Glossary/RTP) stream being sent by an [RTCRtpSender--](/docs/Web/API/RTCRtpSender).",
  "api/rtcpeerconnection": "The **`RTCPeerConnection`** interface represents a WebRTC connection between the local computer and a remote peer.\nIt provides methods to connect to a remote peer, maintain and monitor the connection, and close the connection once it's no longer needed.",
  "api/rtcpeerconnectioniceerrorevent": "The **`RTCPeerConnectionIceErrorEvent`** interface—based upon the [Event--](/docs/Web/API/Event) interface—provides details pertaining to an [ICE--](/docs/Glossary/ICE) error announced by sending an [icecandidateerror--](/docs/Web/API/RTCPeerConnection/icecandidateerror_event) event to the [RTCPeerConnection--](/docs/Web/API/RTCPeerConnection) object.",
  "api/rtcpeerconnectioniceevent": "The **`RTCPeerConnectionIceEvent`** interface represents events that occur in relation to [ICE--](/docs/Glossary/ICE) candidates with the target, usually an [RTCPeerConnection--](/docs/Web/API/RTCPeerConnection).",
  "api/rtcpeerconnectionstats": "The **`RTCPeerConnectionStats`** dictionary of the [WebRTC API](/en-US/docs/Web/API/WebRTC_API) provides information about the high level peer connection ([RTCPeerConnection--](/docs/Web/API/RTCPeerConnection)).",
  "api/rtcremoteoutboundrtpstreamstats": "The **`RTCRemoteOutboundRtpStreamStats`** dictionary of the [WebRTC API](/en-US/docs/Web/API/WebRTC_API) is used to report statistics from remote endpoint of its outbound RTP stream, which corresponds to an inbound stream that is currently received by an [RTCPeerConnection--](/docs/Web/API/RTCPeerConnection) object.",
  "api/rtcrtpcodecparameters": "The [RTCRtpCodecParameters--](/docs/Web/API/RTCRtpCodecParameters) dictionary, part of the WebRTC API, is used to describe the configuration parameters for a single media [codec--](/docs/Glossary/codec).",
  "api/rtcrtpreceiver": "The **`RTCRtpReceiver`** interface of the [WebRTC API](/en-US/docs/Web/API/WebRTC_API) manages the reception and decoding of data for a [MediaStreamTrack--](/docs/Web/API/MediaStreamTrack) on an [RTCPeerConnection--](/docs/Web/API/RTCPeerConnection).",
  "api/rtcrtpscripttransform": "The **`RTCRtpScriptTransform`** interface of the [WebRTC API](/en-US/docs/Web/API/WebRTC_API) is used to insert a [WebRTC Encoded Transform](/en-US/docs/Web/API/WebRTC_API/Using_Encoded_Transforms) (a [TransformStream--](/docs/Web/API/TransformStream) running in a worker thread) into the WebRTC sender and receiver pipelines.",
  "api/rtcrtpscripttransformer": "The **`RTCRtpScriptTransformer`** interface of the [WebRTC API](/en-US/docs/Web/API/WebRTC_API) provides a worker-side [Stream API](/en-US/docs/Web/API/Streams_API) interface that a [WebRTC Encoded Transform](/en-US/docs/Web/API/WebRTC_API/Using_Encoded_Transforms) can use to modify encoded media frames in the incoming and outgoing WebRTC pipelines.",
  "api/rtcrtpsender": "The **`RTCRtpSender`** interface provides the ability to control and obtain details about how a particular [MediaStreamTrack--](/docs/Web/API/MediaStreamTrack) is encoded and sent to a remote peer.",
  "api/rtcrtpstreamstats": "The [RTCRtpStreamStats--](/docs/Web/API/RTCRtpStreamStats) dictionary is returned by the [RTCPeerConnection.getStats()--](/docs/Web/API/RTCPeerConnection/getStats), [RTCRtpSender.getStats()--](/docs/Web/API/RTCRtpSender/getStats), and [RTCRtpReceiver.getStats()--](/docs/Web/API/RTCRtpReceiver/getStats) methods to provide detailed statistics about WebRTC connectivity.",
  "api/rtcrtptransceiver": "The WebRTC interface **`RTCRtpTransceiver`** describes a permanent pairing of an [RTCRtpSender--](/docs/Web/API/RTCRtpSender) and an [RTCRtpReceiver--](/docs/Web/API/RTCRtpReceiver), along with some shared state.",
  "api/rtcsctptransport": "The **`RTCSctpTransport`** interface provides information which describes a Stream Control Transmission Protocol (**[SCTP--](/docs/Glossary/SCTP)**) transport. This provides information about limitations of the transport, but also provides a way to access the underlying Datagram Transport Layer Security (**[DTLS--](/docs/Glossary/DTLS)**) transport over which SCTP packets for all of an [RTCPeerConnection--](/docs/Web/API/RTCPeerConnection)'s data channels are sent and received.",
  "api/rtcsessiondescription": "The **`RTCSessionDescription`** interface describes one end of a connection—or potential connection—and how it's configured. Each `RTCSessionDescription` consists of a description [type--](/docs/Web/API/RTCSessionDescription/type) indicating which part of the offer/answer negotiation process it describes and of the [SDP--](/docs/Glossary/SDP) descriptor of the session.",
  "api/rtcstatsreport": "The **`RTCStatsReport`** interface of the [WebRTC API](/en-US/docs/Web/API/WebRTC_API) provides a statistics report for a [RTCPeerConnection--](/docs/Web/API/RTCPeerConnection), [RTCRtpSender--](/docs/Web/API/RTCRtpSender), or [RTCRtpReceiver--](/docs/Web/API/RTCRtpReceiver).",
  "api/rtctrackevent": "The [WebRTC API](/en-US/docs/Web/API/WebRTC_API) interface **`RTCTrackEvent`** represents the [track--](/docs/Web/API/RTCPeerConnection/track_event) event, which is sent when a new [MediaStreamTrack--](/docs/Web/API/MediaStreamTrack) is added to an [RTCRtpReceiver--](/docs/Web/API/RTCRtpReceiver) which is part of the [RTCPeerConnection--](/docs/Web/API/RTCPeerConnection).",
  "api/rtctransformevent": "The **`RTCTransformEvent`** of the [WebRTC API](/en-US/docs/Web/API/WebRTC_API) represent an event that is fired in a dedicated worker when an encoded frame has been queued for processing by a [WebRTC Encoded Transform](/en-US/docs/Web/API/WebRTC_API/Using_Encoded_Transforms).",
  "api/rtctransportstats": "The **`RTCTransportStats`** dictionary of the [WebRTC API](/en-US/docs/Web/API/WebRTC_API) provides information about the transport ([RTCDtlsTransport--](/docs/Web/API/RTCDtlsTransport) and its underlying [RTCIceTransport--](/docs/Web/API/RTCIceTransport)) used by a particular candidate pair.",
  "api/rtcvideosourcestats": "The **`RTCVideoSourceStats`** dictionary of the [WebRTC API](/en-US/docs/Web/API/WebRTC_API) provides statistics information about a video track ([MediaStreamTrack--](/docs/Web/API/MediaStreamTrack)) that is attached to one or more senders ([RTCRtpSender--](/docs/Web/API/RTCRtpSender)).",
  "api/sanitizer": "The **`Sanitizer`** interface of the [HTML Sanitizer API--](/docs/Web/API/HTML_Sanitizer_API) is used to sanitize untrusted strings of HTML, [Document--](/docs/Web/API/Document) and [DocumentFragment--](/docs/Web/API/DocumentFragment) objects.\nAfter sanitization, unwanted elements or attributes are removed, and the returned objects can safely be inserted into a document's DOM.",
  "api/scheduler": "The **`Scheduler`** interface of the [Prioritized Task Scheduling API](/en-US/docs/Web/API/Prioritized_Task_Scheduling_API) provides the [Scheduler.postTask()--](/docs/Web/API/Scheduler/postTask) method that can be used for adding prioritized tasks to be scheduled.",
  "api/scheduler_property": "The global read-only **`scheduler`** property is the entry point for using the [Prioritized Task Scheduling API](/en-US/docs/Web/API/Prioritized_Task_Scheduling_API).",
  "api/scheduling": "The **`Scheduling`** object provides methods and properties to control scheduling tasks within the current document.",
  "api/screen": "The `Screen` interface represents a screen, usually the one on which the current window is being rendered, and is obtained using [window.screen--](/docs/Web/API/window/screen).",
  "api/screen_capture_api": "The Screen Capture API introduces additions to the existing Media Capture and Streams API to let the user select a screen or portion of a screen (such as a window) to capture as a media stream. This stream can then be recorded or shared with others over the network.",
  "api/screen_orientation_api": "The **Screen Orientation API** provides information about the orientation of the screen.",
  "api/screen_wake_lock_api": "The **Screen Wake Lock API** provides a way to prevent devices from dimming or locking the screen when an application needs to keep running.",
  "api/screendetailed": "The **`ScreenDetailed`** interface of the [Window Management API](/en-US/docs/Web/API/Window_Management_API) represents detailed information about one specific screen available to the user's device.",
  "api/screendetails": "The **`ScreenDetails`** interface of the [Window Management API](/en-US/docs/Web/API/Window_Management_API) represents the details of all the screens available to the user's device.",
  "api/screenorientation": "The **`ScreenOrientation`** interface of the [Screen Orientation API](/en-US/docs/Web/API/Screen_Orientation_API) provides information about the current orientation of the document.",
  "api/scriptprocessornode": "The `ScriptProcessorNode` interface allows the generation, processing, or analyzing of audio using JavaScript.",
  "api/scrolltimeline": "The **`ScrollTimeline`** interface of the [Web Animations API--](/docs/Web/API/Web_Animations_API) represents a scroll progress timeline (see [CSS scroll-driven animations](/en-US/docs/Web/CSS/CSS_scroll-driven_animations) for more details).",
  "api/securepaymentconfirmationrequest": "The **`SecurePaymentConfirmationRequest`** dictionary describes input to the [Payment Request API](/en-US/docs/Web/API/Payment_Request_API) when used to authenticate a user during an e-commerce transaction [using SPC with Payment Request API](/en-US/docs/Web/API/Payment_Request_API/Using_secure_payment_confirmation).",
  "api/securitypolicyviolationevent": "The **`SecurityPolicyViolationEvent`** interface inherits from [Event--](/docs/Web/API/Event), and represents the event object of an event sent on a document or worker when its content security policy is violated.",
  "api/selection": "A **`Selection`** object represents the range of text selected by the user or the current position of the caret. To obtain a `Selection` object for examination or manipulation, call [window.getSelection()--](/docs/Web/API/window/getSelection).",
  "api/selection_api": "The **Selection API** enables developers to access and manipulate the portion of a document selected by the user.",
  "api/sensor": "The **`Sensor`** interface of the [Sensor APIs](/en-US/docs/Web/API/Sensor_APIs) is the base class for all the other sensor interfaces. This interface cannot be used directly. Instead it provides properties, event handlers, and methods accessed by interfaces that inherit from it.",
  "api/sensor_apis": "The **Sensor APIs** are a set of interfaces built to a common design that expose device sensors in a consistent way to the web platform.",
  "api/sensorerrorevent": "The **`SensorErrorEvent`** interface of the [Sensor APIs](/en-US/docs/Web/API/Sensor_APIs) provides information about errors thrown by a [Sensor--](/docs/Web/API/Sensor) or derived interface.",
  "api/serial": "The `Serial` interface of the [Web Serial API--](/docs/Web/API/Web_Serial_API) provides attributes and methods for finding and connecting to serial ports from a web page.",
  "api/serialport": "The `SerialPort` interface of the [Web Serial API--](/docs/Web/API/Web_Serial_API) provides access to a serial port on the host device.",
  "api/server-sent_events": "Traditionally, a web page has to send a request to the server to receive new data; that is, the page requests data from the server. With server-sent events, it's possible for a server to send new data to a web page at any time, by pushing messages to the web page. These incoming messages can be treated as _[Events](/en-US/docs/Web/API/Event) + data_ inside the web page.",
  "api/service_worker_api": "Service workers essentially act as proxy servers that sit between web applications, the browser, and the network (when available). They are intended, among other things, to enable the creation of effective offline experiences, intercept network requests and take appropriate action based on whether the network is available, and update assets residing on the server. They will also allow access to push notifications and background sync APIs.",
  "api/serviceworker": "The **`ServiceWorker`** interface of the [Service Worker API](/en-US/docs/Web/API/Service_Worker_API) provides a reference to a service worker. Multiple [browsing contexts--](/docs/Glossary/browsing_context) (e.g. pages, workers, etc.) can be associated with the same service worker, each through a unique `ServiceWorker` object.",
  "api/serviceworkercontainer": "The **`ServiceWorkerContainer`** interface of the [Service Worker API](/en-US/docs/Web/API/Service_Worker_API) provides an object representing the service worker as an overall unit in the network ecosystem, including facilities to register, unregister and update service workers, and access the state of service workers and their registrations.",
  "api/serviceworkerglobalscope": "The **`ServiceWorkerGlobalScope`** interface of the [Service Worker API](/en-US/docs/Web/API/Service_Worker_API) represents the global execution context of a service worker.",
  "api/serviceworkerregistration": "The **`ServiceWorkerRegistration`** interface of the [Service Worker API](/en-US/docs/Web/API/Service_Worker_API) represents the service worker registration. You register a service worker to control one or more pages that share the same origin.",
  "api/setinterval": "The **`setInterval()`** method, offered on the [Window--](/docs/Web/API/Window) and [WorkerGlobalScope--](/docs/Web/API/WorkerGlobalScope) interfaces, repeatedly calls a function or executes a code snippet, with a fixed time delay between each call.",
  "api/settimeout": "The global **`setTimeout()`** method sets a timer which executes a function or specified\npiece of code once the timer expires.",
  "api/shadowroot": "The **`ShadowRoot`** interface of the Shadow DOM API is the root node of a DOM subtree that is rendered separately from a document's main DOM tree.",
  "api/shared_storage_api": "The **Shared Storage API** is a client-side storage mechanism that enables unpartitioned, cross-site data access while preserving privacy (i.e. without relying on tracking cookies).",
  "api/sharedstorage": "The **`SharedStorage`** interface of the [Shared Storage API--](/docs/Web/API/Shared_Storage_API) represents the shared storage for a particular origin, defining methods to write data to the shared storage.",
  "api/sharedstorageoperation": "The **`SharedStorageOperation`** interface of the [Shared Storage API--](/docs/Web/API/Shared_Storage_API) represents the base class for all output gate operation types.",
  "api/sharedstoragerunoperation": "The **`SharedStorageRunOperation`** interface of the [Shared Storage API--](/docs/Web/API/Shared_Storage_API) represents a [Run output gate](/en-US/docs/Web/API/Shared_Storage_API#run) operation.",
  "api/sharedstorageselecturloperation": "The **`SharedStorageSelectURLOperation`** interface of the [Shared Storage API--](/docs/Web/API/Shared_Storage_API) represents a [URL Selection output gate](/en-US/docs/Web/API/Shared_Storage_API#url_selection) operation.",
  "api/sharedstorageworklet": "The **`SharedStorageWorklet`** interface of the [Shared Storage API--](/docs/Web/API/Shared_Storage_API) represents the shared storage worklet for the current origin.",
  "api/sharedstorageworkletglobalscope": "The **`SharedStorageWorkletGlobalScope`** interface of the [Shared Storage API--](/docs/Web/API/Shared_Storage_API) represents the global scope of a [SharedStorageWorklet--](/docs/Web/API/SharedStorageWorklet) module.",
  "api/sharedworker": "The **`SharedWorker`** interface represents a specific kind of worker that can be _accessed_ from several browsing contexts, such as several windows, iframes or even workers. They implement an interface different than dedicated workers and have a different global scope, [SharedWorkerGlobalScope--](/docs/Web/API/SharedWorkerGlobalScope).",
  "api/sharedworkerglobalscope": "The **`SharedWorkerGlobalScope`** object (the [SharedWorker--](/docs/Web/API/SharedWorker) global scope) is accessible through the [self--](/docs/Web/API/window/self) keyword. Some additional global functions, namespaces objects, and constructors, not typically associated with the worker global scope, but available on it, are listed in the [JavaScript Reference](/en-US/docs/Web/JavaScript/Reference). See the complete list of [functions available to workers](/en-US/docs/Web/API/Web_Workers_API/Functions_and_classes_available_to_workers).",
  "api/sourcebuffer": "The **`SourceBuffer`** interface represents a chunk of media to be passed into an [HTMLMediaElement--](/docs/Web/API/HTMLMediaElement) and played, via a [MediaSource--](/docs/Web/API/MediaSource) object. This can be made up of one or several media segments.",
  "api/sourcebufferlist": "The **`SourceBufferList`** interface represents a simple container list for multiple [SourceBuffer--](/docs/Web/API/SourceBuffer) objects.",
  "api/speculation_rules_api": "The **Speculation Rules API** is designed to improve performance for future navigations. It targets document URLs rather than specific resource files, and so makes sense for multi-page applications (MPAs) rather than single-page applications (SPAs).",
  "api/speechgrammar": "The **`SpeechGrammar`** interface of the [Web Speech API](/en-US/docs/Web/API/Web_Speech_API) represents a set of words or patterns of words that we want the recognition service to recognize.",
  "api/speechgrammarlist": "The **`SpeechGrammarList`** interface of the [Web Speech API](/en-US/docs/Web/API/Web_Speech_API) represents a list of [SpeechGrammar--](/docs/Web/API/SpeechGrammar) objects containing words or patterns of words that we want the recognition service to recognize.",
  "api/speechrecognition": "The **`SpeechRecognition`** interface of the [Web Speech API](/en-US/docs/Web/API/Web_Speech_API) is the controller interface for the recognition service; this also handles the [SpeechRecognitionEvent--](/docs/Web/API/SpeechRecognitionEvent) sent from the recognition service.",
  "api/speechrecognitionalternative": "The **`SpeechRecognitionAlternative`** interface of the [Web Speech API](/en-US/docs/Web/API/Web_Speech_API) represents a single word that has been recognized by the speech recognition service.",
  "api/speechrecognitionerrorevent": "The **`SpeechRecognitionErrorEvent`** interface of the [Web Speech API](/en-US/docs/Web/API/Web_Speech_API) represents error messages from the recognition service.",
  "api/speechrecognitionevent": "The **`SpeechRecognitionEvent`** interface of the [Web Speech API](/en-US/docs/Web/API/Web_Speech_API) represents the event object for the [result--](/docs/Web/API/SpeechRecognition/result_event) and [nomatch--](/docs/Web/API/SpeechRecognition/nomatch_event) events, and contains all the data associated with an interim or final speech recognition result.",
  "api/speechrecognitionresult": "The **`SpeechRecognitionResult`** interface of the [Web Speech API](/en-US/docs/Web/API/Web_Speech_API) represents a single recognition match, which may contain multiple [SpeechRecognitionAlternative--](/docs/Web/API/SpeechRecognitionAlternative) objects.",
  "api/speechrecognitionresultlist": "The **`SpeechRecognitionResultList`** interface of the [Web Speech API](/en-US/docs/Web/API/Web_Speech_API) represents a list of [SpeechRecognitionResult--](/docs/Web/API/SpeechRecognitionResult) objects, or a single one if results are being captured in [non-continuous--](/docs/Web/API/SpeechRecognition/continuous) mode.",
  "api/speechsynthesis": "The **`SpeechSynthesis`** interface of the [Web Speech API](/en-US/docs/Web/API/Web_Speech_API) is the controller interface for the speech service; this can be used to retrieve information about the synthesis voices available on the device, start and pause speech, and other commands besides.",
  "api/speechsynthesiserrorevent": "The **`SpeechSynthesisErrorEvent`** interface of the [Web Speech API](/en-US/docs/Web/API/Web_Speech_API) contains information about any errors that occur while processing [SpeechSynthesisUtterance--](/docs/Web/API/SpeechSynthesisUtterance) objects in the speech service.",
  "api/speechsynthesisevent": "The **`SpeechSynthesisEvent`** interface of the [Web Speech API](/en-US/docs/Web/API/Web_Speech_API) contains information about the current state of [SpeechSynthesisUtterance--](/docs/Web/API/SpeechSynthesisUtterance) objects that have been processed in the speech service.",
  "api/speechsynthesisutterance": "The **`SpeechSynthesisUtterance`** interface of the [Web Speech API](/en-US/docs/Web/API/Web_Speech_API) represents a speech request.\nIt contains the content the speech service should read and information about how to read it (e.g. language, pitch and volume.)",
  "api/speechsynthesisvoice": "The **`SpeechSynthesisVoice`** interface of the [Web Speech API](/en-US/docs/Web/API/Web_Speech_API) represents a voice that the system supports.\nEvery `SpeechSynthesisVoice` has its own relative speech service including information about language, name and URI.",
  "api/staticrange": "The [DOM](/en-US/docs/Web/API/Document_Object_Model) **`StaticRange`** interface extends [AbstractRange--](/docs/Web/API/AbstractRange) to provide a method to specify a range of content in the DOM whose contents don't update to reflect changes which occur within the DOM tree.",
  "api/stereopannernode": "The `StereoPannerNode` interface of the [Web Audio API](/en-US/docs/Web/API/Web_Audio_API) represents a simple stereo panner node that can be used to pan an audio stream left or right. It is an [AudioNode--](/docs/Web/API/AudioNode) audio-processing module that positions an incoming audio stream in a stereo image using a low-cost equal-power [panning algorithm](https://webaudio.github.io/web-audio-api/#panning-algorithm).",
  "api/storage": "The **`Storage`** interface of the [Web Storage API](/en-US/docs/Web/API/Web_Storage_API) provides access to a particular domain's session or local storage. It allows, for example, the addition, modification, or deletion of stored data items.",
  "api/storage_access_api": "The Storage Access API provides a way for cross-site content loaded in a third-party context (i.e., embedded in an [iframe--](/docs/Web/HTML/Element/iframe)) to gain access to [third-party cookies](/en-US/docs/Web/HTTP/Cookies#third-party_cookies) that it would typically only have access to in a first-party context (i.e., when loaded directly in a browser tab).",
  "api/storage_api": "The [Storage Standard](https://storage.spec.whatwg.org) defines a shared storage system designed to be used by all APIs and technologies that websites can use to store data in a user's browser.",
  "api/storageevent": "The **`StorageEvent`** interface is implemented by the [storage--](/docs/Web/API/Window/storage_event) event, which is\nsent to a window\nwhen a storage area the window has access to is changed within the context of another document.",
  "api/storagemanager": "The **`StorageManager`** interface of the [Storage API](/en-US/docs/Web/API/Storage_API) provides an interface for managing persistence permissions and estimating available storage. You can get a reference to this interface using either [navigator.storage--](/docs/Web/API/navigator/storage) or [WorkerNavigator.storage--](/docs/Web/API/WorkerNavigator/storage).",
  "api/streams_api": "The Streams API allows JavaScript to programmatically access streams of data received over the network and process them as desired by the developer.",
  "api/structuredclone": "The global **`structuredClone()`** method creates a [deep clone](/en-US/docs/Glossary/Deep_copy) of a given value using the [structured clone algorithm](/en-US/docs/Web/API/Web_Workers_API/Structured_clone_algorithm).",
  "api/stylepropertymap": "The **`StylePropertyMap`** interface of the [CSS Typed Object Model API](/en-US/docs/Web/API/CSS_Object_Model#css_typed_object_model_experimental) provides a representation of a CSS declaration block that is an alternative to [CSSStyleDeclaration--](/docs/Web/API/CSSStyleDeclaration).",
  "api/stylepropertymapreadonly": "The **`StylePropertyMapReadOnly`** interface of the [CSS Typed Object Model API](/en-US/docs/Web/API/CSS_Object_Model#css_typed_object_model) provides a read-only representation of a CSS declaration block that is an alternative to [CSSStyleDeclaration--](/docs/Web/API/CSSStyleDeclaration). Retrieve an instance of this interface using [Element.computedStyleMap()--](/docs/Web/API/Element/computedStyleMap).",
  "api/stylesheet": "An object implementing the `StyleSheet` interface represents a single style sheet. CSS style sheets will further implement the more specialized [CSSStyleSheet--](/docs/Web/API/CSSStyleSheet) interface.",
  "api/stylesheetlist": "The `StyleSheetList` interface represents a list of [CSSStyleSheet--](/docs/Web/API/CSSStyleSheet) objects. An instance of this object can be returned by [Document.styleSheets--](/docs/Web/API/Document/styleSheets).",
  "api/submitevent": "The **`SubmitEvent`** interface defines the object used to represent an [HTML--](/docs/Glossary/HTML) form's [submit--](/docs/Web/API/HTMLFormElement/submit_event) event. This event is fired at the [form--](/docs/Web/HTML/Element/form) when the form's submit action is invoked.",
  "api/subtlecrypto": "The **`SubtleCrypto`** interface of the [Web Crypto API](/en-US/docs/Web/API/Web_Crypto_API) provides a number of low-level cryptographic functions. Access to the features of `SubtleCrypto` is obtained through the [subtle--](/docs/Web/API/Crypto/subtle) property of the [Crypto--](/docs/Web/API/Crypto) object you get from the [crypto--](/docs/Web/API/crypto_property) property.",
  "api/svg_api": "SVG provides elements for circles, rectangles, and simple and complex curves. The elements' attribute values specify how these must be drawn. The **SVG API** is the subset of the **DOM** connecting these SVG elements and their attribute values to scripts or programming languages by representing them in memory. The SVG API thus provides methods that allow programmatic access to the SVG elements and their attribute values.",
  "api/svgaelement": "The **`SVGAElement`** interface provides access to the properties of an [a--](/docs/Web/SVG/Element/a) element, as well as methods to manipulate them.",
  "api/svgangle": "The `SVGAngle` interface is used to represent a value that can be an [&lt;angle&gt;--](/docs/Web/CSS/&lt;angle&gt;) or [&lt;number&gt;--](/docs/Web/CSS/&lt;number&gt;) value. An `SVGAngle` reflected through the [animVal--](/docs/Web/SVG/Attribute/animVal) attribute is always read only.",
  "api/svganimatecolorelement": "The **`SVGAnimateColorElement`** interface corresponds to the `<animateColor>` element.",
  "api/svganimatedangle": "",
  "api/svganimatedboolean": "",
  "api/svganimatedenumeration": "The **`SVGAnimatedEnumeration`** interface describes attribute values which are constants from a particular enumeration and which can be animated.",
  "api/svganimatedinteger": "",
  "api/svganimatedlength": "The **`SVGAnimatedLength`** interface represents attributes of type [\\<length>](/en-US/docs/Web/SVG/Content_type#length) which can be animated.",
  "api/svganimatedlengthlist": "",
  "api/svganimatednumber": "",
  "api/svganimatednumberlist": "",
  "api/svganimatedpreserveaspectratio": "",
  "api/svganimatedrect": "The `SVGAnimatedRect` interface is used for attributes of basic [SVGRect--](/docs/Web/API/SVGRect) which can be animated.",
  "api/svganimatedstring": "The **`SVGAnimatedString`** interface represents string attributes which can be animated from each SVG declaration. You need to create SVG attribute before doing anything else, everything should be declared inside this.",
  "api/svganimatedtransformlist": "",
  "api/svganimateelement": "The **`SVGAnimateElement`** interface corresponds to the [animate--](/docs/Web/SVG/Element/animate) element.",
  "api/svganimatemotionelement": "The **`SVGAnimateMotionElement`** interface corresponds to the [animateMotion--](/docs/Web/SVG/Element/animateMotion) element.",
  "api/svganimatetransformelement": "The `SVGAnimateTransformElement` interface corresponds to the [animateTransform--](/docs/Web/SVG/Element/animateTransform) element.",
  "api/svganimationelement": "The **`SVGAnimationElement`** interface is the base interface for all of the animation element interfaces: [SVGAnimateElement--](/docs/Web/API/SVGAnimateElement), [SVGSetElement--](/docs/Web/API/SVGSetElement), [SVGAnimateColorElement--](/docs/Web/API/SVGAnimateColorElement), [SVGAnimateMotionElement--](/docs/Web/API/SVGAnimateMotionElement) and [SVGAnimateTransformElement--](/docs/Web/API/SVGAnimateTransformElement).",
  "api/svgcircleelement": "The **`SVGCircleElement`** interface is an interface for the [circle--](/docs/Web/SVG/Element/circle) element.",
  "api/svgclippathelement": "The **`SVGClipPathElement`** interface provides access to the properties of [clipPath--](/docs/Web/SVG/Element/clipPath) elements, as well as methods to manipulate them.",
  "api/svgcomponenttransferfunctionelement": "The **`SVGComponentTransferFunctionElement`** interface defines a base interface used by the component transfer function interfaces.",
  "api/svgcursorelement": "The **`SVGCursorElement`** interface provides access to the properties of [cursor--](/docs/Web/SVG/Element/cursor) elements, as well as methods to manipulate them.",
  "api/svgdefselement": "The **`SVGDefsElement`** interface corresponds to the [defs--](/docs/Web/SVG/Element/defs) element.",
  "api/svgdescelement": "The **`SVGDescElement`** interface corresponds to the [desc--](/docs/Web/SVG/Element/desc) element.",
  "api/svgelement": "All of the SVG DOM interfaces that correspond directly to elements in the SVG language derive from the `SVGElement` interface.",
  "api/svgellipseelement": "The **`SVGEllipseElement`** interface provides access to the properties of [ellipse--](/docs/Web/SVG/Element/ellipse) elements.",
  "api/svgevent": "The [SVGEvent--](/docs/Web/API/SVGEvent) interface represents the event object for most SVG-related events.",
  "api/svgfeblendelement": "The **`SVGFEBlendElement`** interface corresponds to the [feBlend--](/docs/Web/SVG/Element/feBlend) element.",
  "api/svgfecolormatrixelement": "The **`SVGFEColorMatrixElement`** interface corresponds to the [feColorMatrix--](/docs/Web/SVG/Element/feColorMatrix) element.",
  "api/svgfecomponenttransferelement": "The **`SVGFEComponentTransferElement`** interface corresponds to the [feComponentTransfer--](/docs/Web/SVG/Element/feComponentTransfer) element.",
  "api/svgfecompositeelement": "The **`SVGFECompositeElement`** interface corresponds to the [feComposite--](/docs/Web/SVG/Element/feComposite) element.",
  "api/svgfeconvolvematrixelement": "The **`SVGFEConvolveMatrixElement`** interface corresponds to the [feConvolveMatrix--](/docs/Web/SVG/Element/feConvolveMatrix) element.",
  "api/svgfediffuselightingelement": "The **`SVGFEDiffuseLightingElement`** interface corresponds to the [feDiffuseLighting--](/docs/Web/SVG/Element/feDiffuseLighting) element.",
  "api/svgfedisplacementmapelement": "The **`SVGFEDisplacementMapElement`** interface corresponds to the [feDisplacementMap--](/docs/Web/SVG/Element/feDisplacementMap) element.",
  "api/svgfedistantlightelement": "The **`SVGFEDistantLightElement`** interface corresponds to the [feDistantLight--](/docs/Web/SVG/Element/feDistantLight) element.",
  "api/svgfedropshadowelement": "The **`SVGFEDropShadowElement`** interface corresponds to the [feDropShadow--](/docs/Web/SVG/Element/feDropShadow) element.",
  "api/svgfefloodelement": "The **`SVGFEFloodElement`** interface corresponds to the [feFlood--](/docs/Web/SVG/Element/feFlood) element.",
  "api/svgfefuncaelement": "The **`SVGFEFuncAElement`** interface corresponds to the [feFuncA--](/docs/Web/SVG/Element/feFuncA) element.",
  "api/svgfefuncbelement": "The **`SVGFEFuncBElement`** interface corresponds to the [feFuncB--](/docs/Web/SVG/Element/feFuncB) element.",
  "api/svgfefuncgelement": "The **`SVGFEFuncGElement`** interface corresponds to the [feFuncG--](/docs/Web/SVG/Element/feFuncG) element.",
  "api/svgfefuncrelement": "The **`SVGFEFuncRElement`** interface corresponds to the [feFuncR--](/docs/Web/SVG/Element/feFuncR) element.",
  "api/svgfegaussianblurelement": "The **`SVGFEGaussianBlurElement`** interface corresponds to the [feGaussianBlur--](/docs/Web/SVG/Element/feGaussianBlur) element.",
  "api/svgfeimageelement": "The **`SVGFEImageElement`** interface corresponds to the [feImage--](/docs/Web/SVG/Element/feImage) element.",
  "api/svgfemergeelement": "The **`SVGFEMergeElement`** interface corresponds to the [feMerge--](/docs/Web/SVG/Element/feMerge) element.",
  "api/svgfemergenodeelement": "The **`SVGFEMergeNodeElement`** interface corresponds to the [feMergeNode--](/docs/Web/SVG/Element/feMergeNode) element.",
  "api/svgfemorphologyelement": "The **`SVGFEMorphologyElement`** interface corresponds to the [feMorphology--](/docs/Web/SVG/Element/feMorphology) element.",
  "api/svgfeoffsetelement": "The **`SVGFEOffsetElement`** interface corresponds to the [feOffset--](/docs/Web/SVG/Element/feOffset) element.",
  "api/svgfepointlightelement": "The **`SVGFEPointLightElement`** interface corresponds to the [fePointLight--](/docs/Web/SVG/Element/fePointLight) element.",
  "api/svgfespecularlightingelement": "The **`SVGFESpecularLightingElement`** interface corresponds to the [feSpecularLighting--](/docs/Web/SVG/Element/feSpecularLighting) element.",
  "api/svgfespotlightelement": "The **`SVGFESpotLightElement`** interface corresponds to the [feSpotLight--](/docs/Web/SVG/Element/feSpotLight) element.",
  "api/svgfetileelement": "The **`SVGFETileElement`** interface corresponds to the [feTile--](/docs/Web/SVG/Element/feTile) element.",
  "api/svgfeturbulenceelement": "The **`SVGFETurbulenceElement`** interface corresponds to the [feTurbulence--](/docs/Web/SVG/Element/feTurbulence) element.",
  "api/svgfilterelement": "The **`SVGFilterElement`** interface provides access to the properties of [filter--](/docs/Web/SVG/Element/filter) elements, as well as methods to manipulate them.",
  "api/svgfontelement": "The **`SVGFontElement`** interface corresponds to the [font--](/docs/Web/SVG/Element/font) elements.",
  "api/svgfontfaceelement": "The **`SVGFontFaceElement`** interface corresponds to the [font-face--](/docs/Web/SVG/Element/font-face) elements.",
  "api/svgfontfaceformatelement": "The **`SVGFontFaceFormatElement`** interface corresponds to the [font-face-format--](/docs/Web/SVG/Element/font-face-format) elements.",
  "api/svgfontfacenameelement": "The **`SVGFontFaceNameElement`** interface corresponds to the [font-face-name--](/docs/Web/SVG/Element/font-face-name) elements.",
  "api/svgfontfacesrcelement": "The **`SVGFontFaceSrcElement`** interface corresponds to the [font-face-src--](/docs/Web/SVG/Element/font-face-src) elements.",
  "api/svgfontfaceurielement": "The **`SVGFontFaceUriElement`** interface corresponds to the [font-face-uri--](/docs/Web/SVG/Element/font-face-uri) elements.",
  "api/svgforeignobjectelement": "The **`SVGForeignObjectElement`** interface provides access to the properties of [foreignObject--](/docs/Web/SVG/Element/foreignObject) elements, as well as methods to manipulate them.",
  "api/svggelement": "The **`SVGGElement`** interface corresponds to the [g--](/docs/Web/SVG/Element/g) element.",
  "api/svggeometryelement": "The `SVGGeometryElement` interface represents SVG elements whose rendering is defined by geometry with an equivalent path, and which can be filled and stroked. This includes paths and the basic shapes.",
  "api/svgglyphelement": "The **`SVGGlyphElement`** interface corresponds to the [glyph--](/docs/Web/SVG/Element/glyph) element.",
  "api/svgglyphrefelement": "The **`SVGGlyphRefElement`** interface corresponds to the [glyphRef--](/docs/Web/SVG/Element/glyphRef) elements.",
  "api/svggradientelement": "The **`SVGGradient`** interface is a base interface used by [SVGLinearGradientElement--](/docs/Web/API/SVGLinearGradientElement) and [SVGRadialGradientElement--](/docs/Web/API/SVGRadialGradientElement).",
  "api/svggraphicselement": "The **`SVGGraphicsElement`** interface represents SVG elements whose primary purpose is to directly render graphics into a group.",
  "api/svghkernelement": "The **`SVGHKernElement`** interface corresponds to the [hkern--](/docs/Web/SVG/Element/hkern) elements.",
  "api/svgimageelement": "The **`SVGImageElement`** interface corresponds to the [image--](/docs/Web/SVG/Element/image) element.",
  "api/svglength": "",
  "api/svglengthlist": "",
  "api/svglineargradientelement": "The **`SVGLinearGradientElement`** interface corresponds to the [linearGradient--](/docs/Web/SVG/Element/linearGradient) element.",
  "api/svglineelement": "The **`SVGLineElement`** interface provides access to the properties of [line--](/docs/Web/SVG/Element/line) elements, as well as methods to manipulate them.",
  "api/svgmarkerelement": "The **`SVGMarkerElement`** interface provides access to the properties of [marker--](/docs/Web/SVG/Element/marker) elements, as well as methods to manipulate them. The [marker--](/docs/Web/SVG/Element/marker) element defines the graphics used for drawing marks on a shape.",
  "api/svgmaskelement": "The **`SVGMaskElement`** interface provides access to the properties of [mask--](/docs/Web/SVG/Element/mask) elements, as well as methods to manipulate them.",
  "api/svgmetadataelement": "The **`SVGMetadataElement`** interface corresponds to the [metadata--](/docs/Web/SVG/Element/metadata) element.",
  "api/svgmissingglyphelement": "The **`SVGMissingGlyphElement`** interface corresponds to the [missing-glyph--](/docs/Web/SVG/Element/missing-glyph) elements.",
  "api/svgmpathelement": "The **`SVGMPathElement`** interface corresponds to the [mpath--](/docs/Web/SVG/Element/mpath) element.",
  "api/svgnumber": "The **`SVGNumber`** interface corresponds to the [&lt;number&gt;--](/docs/Web/CSS/&lt;number&gt;) basic data type.",
  "api/svgnumberlist": "",
  "api/svgpathelement": "The **`SVGPathElement`** interface corresponds to the [path--](/docs/Web/SVG/Element/path) element.",
  "api/svgpatternelement": "The **`SVGPatternElement`** interface corresponds to the [pattern--](/docs/Web/SVG/Element/pattern) element.",
  "api/svgpoint": "> **Warning:** `SVGPoint` is deprecated.\n> Use [DOMPoint--](/docs/Web/API/DOMPoint) or [DOMPointReadOnly--](/docs/Web/API/DOMPointReadOnly) instead.",
  "api/svgpointlist": "The **`SVGPointList`** interface represents a list of [SVGPoint--](/docs/Web/API/SVGPoint) objects.",
  "api/svgpolygonelement": "The **`SVGPolygonElement`** interface provides access to the properties of [polygon--](/docs/Web/SVG/Element/polygon) elements, as well as methods to manipulate them.",
  "api/svgpolylineelement": "The **`SVGPolylineElement`** interface provides access to the properties of [polyline--](/docs/Web/SVG/Element/polyline) elements, as well as methods to manipulate them.",
  "api/svgpreserveaspectratio": "",
  "api/svgradialgradientelement": "The **`SVGRadialGradientElement`** interface corresponds to the [RadialGradient--](/docs/Web/SVG/Element/RadialGradient) element.",
  "api/svgrect": "The **`SVGRect`** represents a rectangle. Rectangles consist of an `x` and `y` coordinate pair identifying a minimum `x` value, a minimum `y` value, and a `width` and `height`, which are constrained to be non-negative.",
  "api/svgrectelement": "The `SVGRectElement` interface provides access to the properties of [rect--](/docs/Web/SVG/Element/rect) elements, as well as methods to manipulate them.",
  "api/svgrenderingintent": "The **`SVGRenderingIntent`** interface defines the enumerated list of possible values for [rendering-intent--](/docs/Web/SVG/Attribute/rendering-intent) attributes or descriptors.",
  "api/svgscriptelement": "The **`SVGScriptElement`** interface corresponds to the SVG [script--](/docs/Web/SVG/Element/script) element.",
  "api/svgsetelement": "The **`SVGSetElement`** interface corresponds to the [set--](/docs/Web/SVG/Element/set) element.",
  "api/svgstopelement": "The **`SVGStopElement`** interface corresponds to the [stop--](/docs/Web/SVG/Element/stop) element.",
  "api/svgstringlist": "",
  "api/svgstyleelement": "The **`SVGStyleElement`** interface corresponds to the SVG [style--](/docs/Web/SVG/Element/style) element.",
  "api/svgsvgelement": "The **`SVGSVGElement`** interface provides access to the properties of [svg--](/docs/Web/SVG/Element/svg) elements, as well as methods to manipulate them. This interface contains also various miscellaneous commonly-used utility methods, such as matrix operations and the ability to control the time of redraw on visual rendering devices.",
  "api/svgswitchelement": "The **`SVGSwitchElement`** interface corresponds to the [switch--](/docs/Web/SVG/Element/switch) element.",
  "api/svgsymbolelement": "The **`SVGSymbolElement`** interface corresponds to the [symbol--](/docs/Web/SVG/Element/symbol) element.",
  "api/svgtextcontentelement": "The **`SVGTextContentElement`** interface is implemented by elements that support rendering child text content. It is inherited by various text-related interfaces, such as [SVGTextElement--](/docs/Web/API/SVGTextElement), [SVGTSpanElement--](/docs/Web/API/SVGTSpanElement), [SVGTRefElement--](/docs/Web/API/SVGTRefElement), and [SVGTextPathElement--](/docs/Web/API/SVGTextPathElement).",
  "api/svgtextelement": "The **`SVGTextElement`** interface corresponds to the [text--](/docs/Web/SVG/Element/text) elements.",
  "api/svgtextpathelement": "The **`SVGTextPathElement`** interface corresponds to the [textPath--](/docs/Web/SVG/Element/textPath) element.",
  "api/svgtextpositioningelement": "The **`SVGTextPositioningElement`** interface is implemented by elements that support attributes that position individual text glyphs. It is inherited by [SVGTextElement--](/docs/Web/API/SVGTextElement), [SVGTSpanElement--](/docs/Web/API/SVGTSpanElement), and [SVGTRefElement--](/docs/Web/API/SVGTRefElement).",
  "api/svgtitleelement": "The **`SVGTitleElement`** interface corresponds to the [title--](/docs/Web/SVG/Element/title) element.",
  "api/svgtransform": "",
  "api/svgtransformlist": "",
  "api/svgtrefelement": "The **`SVGTRefElement`** interface corresponds to the [tref--](/docs/Web/SVG/Element/tref) elements.",
  "api/svgtspanelement": "The **`SVGTSpanElement`** interface represents a [tspan--](/docs/Web/SVG/Element/tspan) element.",
  "api/svgunittypes": "The **`SVGUnitTypes`** interface defines a commonly used set of constants used for reflecting [gradientUnits--](/docs/Web/SVG/Attribute/gradientUnits), [patternContentUnits--](/docs/Web/SVG/Attribute/patternContentUnits) and other similar attributes.",
  "api/svguseelement": "",
  "api/svgviewelement": "The **`SVGViewElement`** interface provides access to the properties of [view--](/docs/Web/SVG/Element/view) elements, as well as methods to manipulate them.",
  "api/svgvkernelement": "The **`SVGVKernElement`** interface corresponds to the [vkern--](/docs/Web/SVG/Element/vkern) elements.",
  "api/syncevent": "The **`SyncEvent`** interface of the [Background Synchronization API--](/docs/Web/API/Background_Synchronization_API) represents a sync action that is dispatched on the [ServiceWorkerGlobalScope--](/docs/Web/API/ServiceWorkerGlobalScope) of a ServiceWorker.",
  "api/syncmanager": "The **`SyncManager`** interface of the [Background Synchronization API--](/docs/Web/API/Background_Synchronization_API) provides an interface for registering and listing sync registrations.",
  "api/taskattributiontiming": "The **`TaskAttributionTiming`** interface returns information about the work involved in a long task and its associate frame context. The frame context, also called the container, is the iframe, embed or object that is being implicated, on the whole, for a long task.",
  "api/taskcontroller": "The **`TaskController`** interface of the [Prioritized Task Scheduling API](/en-US/docs/Web/API/Prioritized_Task_Scheduling_API) represents a controller object that can be used to both abort and change the [priority](/en-US/docs/Web/API/Prioritized_Task_Scheduling_API#task_priorities) of one or more prioritized tasks.\nIf there is no need to change task priorities, then [AbortController--](/docs/Web/API/AbortController) can be used instead.",
  "api/taskprioritychangeevent": "The **`TaskPriorityChangeEvent`** is the interface for the [`prioritychange`](/en-US/docs/Web/API/TaskSignal/prioritychange_event) event.",
  "api/tasksignal": "The **`TaskSignal`** interface of the [Prioritized Task Scheduling API](/en-US/docs/Web/API/Prioritized_Task_Scheduling_API) represents a signal object that allows you to communicate with a prioritized task, and abort it or change the [priority](/en-US/docs/Web/API/Prioritized_Task_Scheduling_API#task_priorities) (if required) via a [TaskController--](/docs/Web/API/TaskController) object.",
  "api/text": "The **`Text`** interface represents a text [node--](/docs/Web/API/Node) in a DOM tree.",
  "api/textdecoder": "The **`TextDecoder`** interface represents a decoder for a specific text encoding, such as `UTF-8`, `ISO-8859-2`, `KOI8-R`, `GBK`, etc. A decoder takes a stream of bytes as input and emits a stream of code points.",
  "api/textdecoderstream": "The **`TextDecoderStream`** interface of the [Encoding API--](/docs/Web/API/Encoding_API) converts a stream of text in a binary encoding, such as UTF-8 etc., to a stream of strings.\nIt is the streaming equivalent of [TextDecoder--](/docs/Web/API/TextDecoder).",
  "api/textencoder": "The **`TextEncoder`** interface takes a stream of code points as input and emits a stream of UTF-8 bytes.",
  "api/textencoderstream": "The **`TextEncoderStream`** interface of the [Encoding API--](/docs/Web/API/Encoding_API) converts a stream of strings into bytes in the UTF-8 encoding. It is the streaming equivalent of [TextEncoder--](/docs/Web/API/TextEncoder).",
  "api/textformat": "The **`TextFormat`** interface represents specific formatting that should be applied to a range of text in an editable text region that's attached to an [EditContext--](/docs/Web/API/EditContext) instance. The text formatting is requested by the [Input Method Editor--](/docs/Glossary/Input_Method_Editor) (IME) window that the user is composing text with.",
  "api/textformatupdateevent": "The **`TextFormatUpdateEvent`** interface is a [DOM event--](/docs/Web/API/Event) that represents a list of text formats that an [Input Method Editor--](/docs/Glossary/Input_Method_Editor) (IME) window wants to apply to the text being composed in an editable region that's attached to an [EditContext--](/docs/Web/API/EditContext) instance.",
  "api/textmetrics": "The **`TextMetrics`** interface represents the dimensions of a piece of text in the canvas; a `TextMetrics` instance can be retrieved using the [CanvasRenderingContext2D.measureText()--](/docs/Web/API/CanvasRenderingContext2D/measureText) method.",
  "api/texttrack": "The `TextTrack` interface—part of the API for handling WebVTT (text tracks on media presentations)—describes and controls the text track associated with a particular [track--](/docs/Web/HTML/Element/track) element.",
  "api/texttrackcue": "**`TextTrackCue`** is an abstract class which is used as the basis for the various derived cue types, such as [VTTCue--](/docs/Web/API/VTTCue); you will instead work with those derived types. These cues represent strings of text presented for some duration of time during the performance of a [TextTrack--](/docs/Web/API/TextTrack). The cue includes the start time (the time at which the text will be displayed) and the end time (the time at which it will be removed from the display), as well as other information.",
  "api/texttrackcuelist": "The **`TextTrackCueList`** array-like object represents a dynamically updating list of [TextTrackCue--](/docs/Web/API/TextTrackCue) objects.",
  "api/texttracklist": "The **`TextTrackList`** interface is used to represent a list of the text tracks defined by the [track--](/docs/Web/HTML/Element/track) element, with each track represented by a separate [textTrack--](/docs/Web/API/textTrack) object in the list.",
  "api/textupdateevent": "The **`TextUpdateEvent`** interface is a [DOM event--](/docs/Web/API/Event) that represents a text or selection update in an editable text region that's attached to an [EditContext--](/docs/Web/API/EditContext) instance.",
  "api/timeevent": "The **`TimeEvent`** interface, a part of [SVG SMIL](/en-US/docs/Web/SVG/SVG_animation_with_SMIL) animation, provides specific contextual information associated with Time events.",
  "api/timeranges": "When loading a media resource for use by an [audio--](/docs/Web/HTML/Element/audio) or [video--](/docs/Web/HTML/Element/video) element, the **`TimeRanges`** interface is used for representing the time ranges of the media resource that have been buffered, the time ranges that have been played, and the time ranges that are seekable.",
  "api/toggleevent": "The **`ToggleEvent`** interface represents an event notifying the user when a [popover element](/en-US/docs/Web/API/Popover_API)'s state toggles between showing and hidden.",
  "api/topics_api": "> **Warning:** This feature is currently opposed by two browser vendors. See the [Standards positions](#standards_positions) section below for details of opposition.",
  "api/touch": "The **`Touch`** interface represents a single contact point on a touch-sensitive device. The contact point is commonly a finger or stylus and the device may be a touchscreen or trackpad.",
  "api/touch_events": "To provide quality support for touch-based user interfaces, touch events offer the ability to interpret finger (or stylus) activity on touch screens or trackpads.",
  "api/touchevent": "The **`TouchEvent`** interface represents an [UIEvent--](/docs/Web/API/UIEvent) which is sent when the state of contacts with a touch-sensitive surface changes. This surface can be a touch screen or trackpad, for example. The event can describe one or more points of contact with the screen and includes support for detecting movement, addition and removal of contact points, and so forth.",
  "api/touchlist": "The **`TouchList`** interface represents a list of contact points on a touch surface. For example, if the user has three fingers on the touch surface (such as a screen or trackpad), the corresponding `TouchList` object would have one [Touch--](/docs/Web/API/Touch) object for each finger, for a total of three entries.",
  "api/trackevent": "The **`TrackEvent`** interface, which is part of the HTML DOM specification, is used for events which represent changes to a set of available tracks on an HTML media element; these events are `addtrack` and `removetrack`.",
  "api/transformstream": "The **`TransformStream`** interface of the [Streams API](/en-US/docs/Web/API/Streams_API) represents a concrete implementation of the [pipe chain](/en-US/docs/Web/API/Streams_API/Concepts#pipe_chains) _transform stream_ concept.",
  "api/transformstreamdefaultcontroller": "The **`TransformStreamDefaultController`** interface of the [Streams API](/en-US/docs/Web/API/Streams_API) provides methods to manipulate the associated [ReadableStream--](/docs/Web/API/ReadableStream) and [WritableStream--](/docs/Web/API/WritableStream).",
  "api/transitionevent": "The **`TransitionEvent`** interface represents events providing information related to [transitions](/en-US/docs/Web/CSS/CSS_transitions/Using_CSS_transitions).",
  "api/treewalker": "The **`TreeWalker`** object represents the nodes of a document subtree and a position within them.",
  "api/trusted_types_api": "The **Trusted Types API** gives web developers a way to lock down the insecure parts of the [DOM API--](/docs/Web/API/Document_Object_Model) to prevent client-side [Cross-site scripting--](/docs/Glossary/Cross-site_scripting) (XSS) attacks.",
  "api/trustedhtml": "The **`TrustedHTML`** interface of the [Trusted Types API--](/docs/Web/API/Trusted_Types_API) represents a string that a developer can insert into an [injection sink](/en-US/docs/Web/API/Trusted_Types_API#injection_sinks) that will render it as HTML. These objects are created via [TrustedTypePolicy.createHTML()--](/docs/Web/API/TrustedTypePolicy/createHTML) and therefore have no constructor.",
  "api/trustedscript": "The **`TrustedScript`** interface of the [Trusted Types API--](/docs/Web/API/Trusted_Types_API) represents a string with an uncompiled script body that a developer can insert into an [injection sink](/en-US/docs/Web/API/Trusted_Types_API#injection_sinks) that might execute the script. These objects are created via [TrustedTypePolicy.createScript()--](/docs/Web/API/TrustedTypePolicy/createScript) and therefore have no constructor.",
  "api/trustedscripturl": "The **`TrustedScriptURL`** interface of the [Trusted Types API--](/docs/Web/API/Trusted_Types_API) represents a string that a developer can insert into an [injection sink](/en-US/docs/Web/API/Trusted_Types_API#injection_sinks) that will parse it as a URL of an external script. These objects are created via [TrustedTypePolicy.createScriptURL()--](/docs/Web/API/TrustedTypePolicy/createScriptURL) and therefore have no constructor.",
  "api/trustedtypepolicy": "The **`TrustedTypePolicy`** interface of the [Trusted Types API--](/docs/Web/API/Trusted_Types_API) defines a group of functions which create [TrustedType--](/docs/Web/API/TrustedType) objects.",
  "api/trustedtypepolicyfactory": "The **`TrustedTypePolicyFactory`** interface of the [Trusted Types API--](/docs/Web/API/Trusted_Types_API) creates policies and allows the verification of Trusted Type objects against created policies.",
  "api/trustedtypes": "The global **`trustedTypes`** read-only property returns the [TrustedTypePolicyFactory--](/docs/Web/API/TrustedTypePolicyFactory) object associated with the global object, providing the entry point for using the [Trusted Types API--](/docs/Web/API/Trusted_Types_API).",
  "api/ui_events": "",
  "api/uievent": "The **`UIEvent`** interface represents simple user interface events.",
  "api/url": "The **`URL`** interface is used to parse, construct, normalize, and encode [URLs--](/docs/Glossary/URL). It works by providing properties which allow you to easily read and modify the components of a URL.",
  "api/url_api": "The URL API is a component of the URL standard, which defines what constitutes a valid [Uniform Resource Locator--](/docs/Glossary/URL) and the API that accesses and manipulates URLs. The URL standard also defines concepts such as domains, hosts, and IP addresses, and also attempts to describe in a standard way the legacy `application/x-www-form-urlencoded` [MIME type--](/docs/Glossary/MIME_type) used to submit web forms' contents as a set of key/value pairs.",
  "api/url_pattern_api": "The **URL Pattern API** defines a syntax that is used to create URL pattern\nmatchers. These patterns can be matched against URLs or individual URL\ncomponents. The URL Pattern API is used by the [URLPattern--](/docs/Web/API/URLPattern)\ninterface.",
  "api/urlpattern": "The **`URLPattern`** interface of the [URL Pattern API--](/docs/Web/API/URL_Pattern_API) matches URLs or parts of URLs against a pattern. The pattern can contain capturing groups that extract parts of the matched URL.",
  "api/urlsearchparams": "The **`URLSearchParams`** interface defines utility methods to work with the query string of a URL.",
  "api/usb": "The **`USB`** interface of the [WebUSB API](/en-US/docs/Web/API/WebUSB_API) provides attributes and methods for finding and connecting USB devices from a web page.",
  "api/usbalternateinterface": "The `USBAlternateInterface` interface of the [WebUSB API](/en-US/docs/Web/API/WebUSB_API) provides information about a particular configuration of an interface provided by the USB device. An interface includes one or more alternate settings which can configure a set of endpoints based on the operating mode of the device.",
  "api/usbconfiguration": "The `USBConfiguration` interface of the [WebUSB API](/en-US/docs/Web/API/WebUSB_API) provides information about a particular configuration of a USB device and the interfaces that it supports.",
  "api/usbconnectionevent": "The **`USBConnectionEvent`** interface of the [WebUSB API--](/docs/Web/API/WebUSB_API) is the event type passed to `USB` [connect--](/docs/Web/API/USB/connect_event) and [disconnect--](/docs/Web/API/USB/disconnect_event) events when the user agent detects that a new USB device has been connected or disconnected.",
  "api/usbdevice": "The **`USBDevice`** interface of the [WebUSB API](/en-US/docs/Web/API/WebUSB_API) provides access to metadata about a paired USB device and methods for controlling it.",
  "api/usbendpoint": "The `USBEndpoint` interface of the [WebUSB API](/en-US/docs/Web/API/WebUSB_API) provides information about an endpoint provided by the USB device. An endpoint represents a unidirectional data stream into or out of a device.",
  "api/usbinterface": "The `USBInterface` interface of the [WebUSB API](/en-US/docs/Web/API/WebUSB_API) provides information about an interface provided by the USB device. An interface represents a feature of the device which implements a particular protocol and may contain endpoints for bidirectional communication.",
  "api/usbintransferresult": "The `USBInTransferResult` interface of the [WebUSB API](/en-US/docs/Web/API/WebUSB_API) provides the result from a call to the `transferIn()` and `controlTransferIn()` methods of the `USBDevice` interface. It represents the result from requesting a transfer of data from the USB device to the USB host.",
  "api/usbisochronousintransferpacket": "The `USBIsochronousInTransferPacket` interface of the [WebUSB API](/en-US/docs/Web/API/WebUSB_API) is part of the response from a call to the `isochronousTransferIn()` method of the `USBDevice` interface. It represents the status of an individual packet from a request to transfer data from the USB device to the USB host over an isochronous endpoint.",
  "api/usbisochronousintransferresult": "The `USBIsochronousInTransferResult` interface of the [WebUSB API](/en-US/docs/Web/API/WebUSB_API) provides the result from a call to the `isochronousTransferIn()` method of the `USBDevice` interface. It represents the result from requesting a transfer of data from the USB device to the USB host.",
  "api/usbisochronousouttransferpacket": "The `USBIsochronousOutTransferPacket` interface of the [WebUSB API](/en-US/docs/Web/API/WebUSB_API) is part of the response from a call to the `isochronousTransferOut()` method of the `USBDevice` interface. It represents the status of an individual packet from a request to transfer data from the USB host to the USB device over an isochronous endpoint.",
  "api/usbisochronousouttransferresult": "The `USBIsochronousOutTransferResult` interface of the [WebUSB API](/en-US/docs/Web/API/WebUSB_API) provides the result from a call to the `isochronousTransferOut()` method of the `USBDevice` interface. It represents the result from requesting a transfer of data from the USB host to the USB device.",
  "api/usbouttransferresult": "The `USBOutTransferResult` interface of the [WebUSB API](/en-US/docs/Web/API/WebUSB_API) provides the result from a call to the `transferOut()` and `controlTransferOut()` methods of the `USBDevice` interface. It represents the result from requesting a transfer of data from the USB host to the USB device.",
  "api/user-agent_client_hints_api": "The **User-Agent Client Hints API** extends [Client Hints](/en-US/docs/Web/HTTP/Client_hints) to provide a way of exposing browser and platform information via User-Agent response and request headers, and a JavaScript API.",
  "api/useractivation": "The **`UserActivation`** interface provides information about whether a user is currently interacting with the page, or has completed an interaction since page load.",
  "api/validitystate": "The **`ValidityState`** interface represents the _validity states_ that an element can be in, with respect to constraint validation. Together, they help explain why an element's value fails to validate, if it's not valid.",
  "api/vibration_api": "Most modern mobile devices include vibration hardware, which lets software code provide physical feedback to the user by causing the device to shake. The **Vibration API** offers Web apps the ability to access this hardware, if it exists, and does nothing if the device doesn't support it.",
  "api/videocolorspace": "The **`VideoColorSpace`** interface of the [WebCodecs API--](/docs/Web/API/WebCodecs_API) represents the color space of a video.",
  "api/videodecoder": "The **`VideoDecoder`** interface of the [WebCodecs API--](/docs/Web/API/WebCodecs_API) decodes chunks of video.",
  "api/videoencoder": "The **`VideoEncoder`** interface of the [WebCodecs API--](/docs/Web/API/WebCodecs_API) encodes [VideoFrame--](/docs/Web/API/VideoFrame) objects into [EncodedVideoChunk--](/docs/Web/API/EncodedVideoChunk)s.",
  "api/videoframe": "The **`VideoFrame`** interface of the [Web Codecs API](/en-US/docs/Web/API/WebCodecs_API) represents a frame of a video.",
  "api/videoplaybackquality": "A **`VideoPlaybackQuality`** object is returned by the [HTMLVideoElement.getVideoPlaybackQuality()--](/docs/Web/API/HTMLVideoElement/getVideoPlaybackQuality) method and contains metrics that can be used to determine the playback quality of a video.",
  "api/videotrack": "The [VideoTrack--](/docs/Web/API/VideoTrack) interface represents a single video track from a [video--](/docs/Web/HTML/Element/video) element.",
  "api/videotracklist": "The **`VideoTrackList`** interface is used to represent a list of the video tracks contained within a [video--](/docs/Web/HTML/Element/video) element, with each track represented by a separate [VideoTrack--](/docs/Web/API/VideoTrack) object in the list.",
  "api/view_transitions_api": "The **View Transitions API** provides a mechanism for easily creating animated transitions between different DOM states while also updating the DOM contents in a single step.",
  "api/viewtimeline": "The **`ViewTimeline`** interface of the [Web Animations API--](/docs/Web/API/Web_Animations_API) represents a view progress timeline (see [CSS scroll-driven animations](/en-US/docs/Web/CSS/CSS_scroll-driven_animations) for more details).",
  "api/viewtransition": "The **`ViewTransition`** interface of the [View Transitions API--](/docs/Web/API/View_Transitions_API) represents a view transition, and provides functionality to react to the transition reaching different states (e.g. ready to run the animation, or animation finished) or skip the transition altogether.",
  "api/virtualkeyboard": "The **`VirtualKeyboard`** interface of the [VirtualKeyboard API](/en-US/docs/Web/API/VirtualKeyboard_API) is useful on devices that have on-screen virtual keyboards, such as tablets, mobile phones, or other devices where a hardware keyboard may not be available.",
  "api/virtualkeyboard_api": "The VirtualKeyboard API provides developers control over the layout of their applications when the on-screen virtual keyboard appears and disappears on devices such as tablets, mobile phones, or other devices where a hardware keyboard may not be available.",
  "api/visibilitystateentry": "The **`VisibilityStateEntry`** interface provides timings of page visibility state changes, i.e., when a tab changes from the foreground to the background or vice versa.",
  "api/visual_viewport_api": "The **Visual Viewport API** provides an explicit mechanism for querying and modifying the properties of the window's [visual viewport--](/docs/Glossary/visual_viewport). The visual viewport is the visual portion of a screen excluding on-screen keyboards, areas outside of a pinch-zoom area, or any other on-screen artifact that doesn't scale with the dimensions of a page.",
  "api/visualviewport": "The **`VisualViewport`** interface of the [Visual Viewport API--](/docs/Web/API/Visual_Viewport_API) represents the visual viewport for a given window. For a page containing iframes, each iframe, as well as the containing page, will have a unique window object. Each window on a page will have a unique `VisualViewport` representing the properties associated with that window.",
  "api/vrdisplay": "The **`VRDisplay`** interface of the [WebVR API](/en-US/docs/Web/API/WebVR_API) represents any VR device supported by this API. It includes generic information such as device IDs and descriptions, as well as methods for starting to present a VR scene, retrieving eye parameters and display capabilities, and other important functionality.",
  "api/vrdisplaycapabilities": "The **`VRDisplayCapabilities`** interface of the [WebVR API](/en-US/docs/Web/API/WebVR_API) describes the capabilities of a [VRDisplay--](/docs/Web/API/VRDisplay) — its features can be used to perform VR device capability tests, for example can it return position information.",
  "api/vrdisplayevent": "The **`VRDisplayEvent`** interface of the [WebVR API](/en-US/docs/Web/API/WebVR_API) represents the event object of WebVR-related events (see the [list of WebVR window extensions](/en-US/docs/Web/API/WebVR_API#window)).",
  "api/vreyeparameters": "The **`VREyeParameters`** interface of the [WebVR API](/en-US/docs/Web/API/WebVR_API) represents all the information required to correctly render a scene for a given eye, including field of view information.",
  "api/vrfieldofview": "The **`VRFieldOfView`** interface of the [WebVR API](/en-US/docs/Web/API/WebVR_API) represents a field of view defined by 4 different degree values describing the view from a center point.",
  "api/vrframedata": "The **`VRFrameData`** interface of the [WebVR API](/en-US/docs/Web/API/WebVR_API) represents all the information needed to render a single frame of a VR scene; constructed by [VRDisplay.getFrameData()--](/docs/Web/API/VRDisplay/getFrameData).",
  "api/vrlayerinit": "The **`VRLayerInit`** dictionary of the [WebVR API](/en-US/docs/Web/API/WebVR_API) represents a content layer (an [HTMLCanvasElement--](/docs/Web/API/HTMLCanvasElement) or [OffscreenCanvas--](/docs/Web/API/OffscreenCanvas)) that you want to present in a VR display.",
  "api/vrpose": "The **`VRPose`** interface of the [WebVR API](/en-US/docs/Web/API/WebVR_API) represents the state of a VR sensor at a given timestamp (which includes orientation, position, velocity, and acceleration information).",
  "api/vrstageparameters": "The **`VRStageParameters`** interface of the [WebVR API](/en-US/docs/Web/API/WebVR_API) represents the values describing the stage area for devices that support room-scale experiences.",
  "api/vttcue": "The `VTTCue` interface—part of the API for handling WebVTT (text tracks on media presentations)—describes and controls the text track associated with a particular [track--](/docs/Web/HTML/Element/track) element.",
  "api/vttregion": "The `VTTRegion` interface—part of the API for handling WebVTT (text tracks on media presentations)—describes a portion of the video to render a [VTTCue--](/docs/Web/API/VTTCue) onto.",
  "api/wakelock": "The **`WakeLock`** interface of the [Screen Wake Lock API](/en-US/docs/Web/API/Screen_Wake_Lock_API) can be used to request a lock that prevents device screens from dimming or locking when an application needs to keep running.",
  "api/wakelocksentinel": "The **`WakeLockSentinel`** interface of the [Screen Wake Lock API](/en-US/docs/Web/API/Screen_Wake_Lock_API) can be used to monitor the status of the platform screen wake lock, and manually release the lock when needed.",
  "api/waveshapernode": "The **`WaveShaperNode`** interface represents a non-linear distorter.",
  "api/web_animations_api": "The **Web Animations API** allows for synchronizing and timing changes to the presentation of a Web page, i.e. animation of DOM elements. It does so by combining two models: the Timing Model and the Animation Model.",
  "api/web_audio_api": "The Web Audio API provides a powerful and versatile system for controlling audio on the Web, allowing developers to choose audio sources, add effects to audio, create audio visualizations, apply spatial effects (such as panning) and much more.",
  "api/web_authentication_api": "The Web Authentication API (WebAuthn) is an extension of the [Credential Management API](/en-US/docs/Web/API/Credential_Management_API) that enables strong authentication with public key cryptography, enabling passwordless authentication and secure multi-factor authentication (MFA) without SMS texts.",
  "api/web_bluetooth_api": "The Web Bluetooth API provides the ability to connect and interact with Bluetooth Low Energy peripherals.",
  "api/web_components": "Web Components is a suite of different technologies allowing you to create reusable custom elements — with their functionality encapsulated away from the rest of your code — and utilize them in your web apps.",
  "api/web_crypto_api": "The **Web Crypto API** is an interface allowing a script to use cryptographic primitives in order to build systems using cryptography.",
  "api/web_locks_api": "The **Web Locks API** allows scripts running in one tab or worker to asynchronously acquire a lock, hold it while work is performed, then release it. While held, no other script executing in the same origin can acquire the same lock, which allows a web app running in multiple tabs or workers to coordinate work and the use of resources.",
  "api/web_midi_api": "The Web MIDI API connects to and interacts with Musical Instrument Digital Interface (MIDI) Devices.",
  "api/web_nfc_api": "The Web NFC API allows exchanging data over NFC via light-weight NFC Data Exchange Format (NDEF) messages.",
  "api/web_periodic_background_synchronization_api": "The **Web Periodic Background Synchronization API** provides a way to register tasks to be run in a [service worker--](/docs/Web/API/Service_Worker_API) at periodic intervals with network connectivity. These tasks are referred to as periodic background sync requests.",
  "api/web_serial_api": "The **Web Serial API** provides a way for websites to read from and write to serial devices. These devices may be connected via a serial port, or be USB or Bluetooth devices that emulate a serial port.",
  "api/web_share_api": "The **Web Share API** provides a mechanism for sharing text, links, files, and other content to an arbitrary _share target_ selected by the user.",
  "api/web_speech_api": "The **Web Speech API** enables you to incorporate voice data into web apps.\nThe Web Speech API has two parts: `SpeechSynthesis` (Text-to-Speech), and `SpeechRecognition` (Asynchronous Speech Recognition.)",
  "api/web_storage_api": "The **Web Storage API** provides mechanisms by which browsers can store key/value pairs, in a much more intuitive fashion than using [cookies--](/docs/Glossary/cookie).",
  "api/web_workers_api": "**Web Workers** makes it possible to run a script operation in a background thread separate from the main execution thread of a web application. The advantage of this is that laborious processing can be performed in a separate thread, allowing the main (usually the UI) thread to run without being blocked/slowed down.",
  "api/webcodecs_api": "The **WebCodecs API** gives web developers low-level access to the individual frames of a video stream and chunks of audio.\nIt is useful for web applications that require full control over the way media is processed.\nFor example, video or audio editors, and video conferencing.",
  "api/webgl2renderingcontext": "The **WebGL2RenderingContext** interface provides the OpenGL ES 3.0 rendering context for the drawing surface of an HTML [canvas--](/docs/Web/HTML/Element/canvas) element.",
  "api/webgl_api": "**WebGL** (Web Graphics Library) is a JavaScript API for rendering high-performance interactive 3D and 2D graphics within any compatible web browser without the use of plug-ins. WebGL does so by introducing an API that closely conforms to OpenGL ES 2.0 that can be used in HTML [canvas--](/docs/Web/HTML/Element/canvas) elements. This conformance makes it possible for the API to take advantage of hardware graphics acceleration provided by the user's device.",
  "api/webgl_color_buffer_float": "The **`WEBGL_color_buffer_float`** extension is part of the [WebGL API](/en-US/docs/Web/API/WebGL_API) and adds the ability to render to 32-bit floating-point color buffers.",
  "api/webgl_compressed_texture_astc": "The **`WEBGL_compressed_texture_astc`** extension is part of the [WebGL API](/en-US/docs/Web/API/WebGL_API) and exposes [Adaptive Scalable Texture Compression](https://en.wikipedia.org/wiki/Adaptive_Scalable_Texture_Compression) (ASTC) compressed texture formats to WebGL.",
  "api/webgl_compressed_texture_etc": "The **`WEBGL_compressed_texture_etc`** extension is part of the [WebGL API](/en-US/docs/Web/API/WebGL_API) and exposes 10 [ETC/EAC compressed texture formats](https://en.wikipedia.org/wiki/Ericsson_Texture_Compression).",
  "api/webgl_compressed_texture_etc1": "The **`WEBGL_compressed_texture_etc1`** extension is part of the [WebGL API](/en-US/docs/Web/API/WebGL_API) and exposes the [ETC1 compressed texture format](https://en.wikipedia.org/wiki/Ericsson_Texture_Compression).",
  "api/webgl_compressed_texture_pvrtc": "The **`WEBGL_compressed_texture_pvrtc`** extension is part of the [WebGL API](/en-US/docs/Web/API/WebGL_API) and exposes four [PVRTC compressed texture formats](https://en.wikipedia.org/wiki/PVRTC).",
  "api/webgl_compressed_texture_s3tc": "The **`WEBGL_compressed_texture_s3tc`** extension is part of the [WebGL API](/en-US/docs/Web/API/WebGL_API) and exposes four [S3TC compressed texture formats](https://en.wikipedia.org/wiki/S3_Texture_Compression).",
  "api/webgl_compressed_texture_s3tc_srgb": "The **`WEBGL_compressed_texture_s3tc_srgb`** extension is part of the [WebGL API](/en-US/docs/Web/API/WebGL_API) and exposes four [S3TC compressed texture formats](https://en.wikipedia.org/wiki/S3_Texture_Compression) for the sRGB colorspace.",
  "api/webgl_debug_renderer_info": "The **`WEBGL_debug_renderer_info`** extension is part of the [WebGL API](/en-US/docs/Web/API/WebGL_API) and exposes two constants with information about the graphics driver for debugging purposes.",
  "api/webgl_debug_shaders": "The **`WEBGL_debug_shaders`** extension is part of the [WebGL API](/en-US/docs/Web/API/WebGL_API) and exposes a method to debug shaders from privileged contexts.",
  "api/webgl_depth_texture": "The **`WEBGL_depth_texture`** extension is part of the [WebGL API](/en-US/docs/Web/API/WebGL_API) and defines 2D depth and depth-stencil textures.",
  "api/webgl_draw_buffers": "The **`WEBGL_draw_buffers`** extension is part of the [WebGL API](/en-US/docs/Web/API/WebGL_API) and enables a fragment shader to write to several textures, which is useful for [deferred shading](https://hacks.mozilla.org/2014/01/webgl-deferred-shading/), for example.",
  "api/webgl_lose_context": "The **WEBGL_lose_context** extension is part of the [WebGL API](/en-US/docs/Web/API/WebGL_API) and exposes functions to simulate losing and restoring a [WebGLRenderingContext--](/docs/Web/API/WebGLRenderingContext).",
  "api/webgl_multi_draw": "The **`WEBGL_multi_draw`** extension is part of the\n[WebGL API](/en-US/docs/Web/API/WebGL_API) and allows to render more\nthan one primitive with a single function call. This can improve a WebGL application's performance\nas it reduces binding costs in the renderer and speeds up GPU thread time with uniform data.",
  "api/webglactiveinfo": "The **WebGLActiveInfo** interface is part of the [WebGL API](/en-US/docs/Web/API/WebGL_API) and represents the information returned by calling the [WebGLRenderingContext.getActiveAttrib()--](/docs/Web/API/WebGLRenderingContext/getActiveAttrib) and [WebGLRenderingContext.getActiveUniform()--](/docs/Web/API/WebGLRenderingContext/getActiveUniform) methods.",
  "api/webglbuffer": "The **WebGLBuffer** interface is part of the [WebGL API](/en-US/docs/Web/API/WebGL_API) and represents an opaque buffer object storing data such as vertices or colors.",
  "api/webglcontextevent": "The **WebContextEvent** interface is part of the [WebGL API](/en-US/docs/Web/API/WebGL_API) and is an interface for an event that is generated in response to a status change to the WebGL rendering context.",
  "api/webglframebuffer": "The **WebGLFramebuffer** interface is part of the [WebGL API](/en-US/docs/Web/API/WebGL_API) and represents a collection of buffers that serve as a rendering destination.",
  "api/webglobject": "The **`WebGLObject`** is part of the [WebGL API](/en-US/docs/Web/API/WebGL_API) and is the parent interface for all WebGL objects.",
  "api/webglprogram": "The **`WebGLProgram`** is part of the [WebGL API](/en-US/docs/Web/API/WebGL_API) and is a combination of two compiled [WebGLShader--](/docs/Web/API/WebGLShader)s consisting of a vertex shader and a fragment shader (both written in GLSL).",
  "api/webglquery": "The **`WebGLQuery`** interface is part of the [WebGL 2](/en-US/docs/Web/API/WebGL_API) API and provides ways to asynchronously query for information. By default, occlusion queries and primitive queries are available.",
  "api/webglrenderbuffer": "The **WebGLRenderbuffer** interface is part of the [WebGL API](/en-US/docs/Web/API/WebGL_API) and represents a buffer that can contain an image, or that can be a source or target of a rendering operation.",
  "api/webglrenderingcontext": "The **`WebGLRenderingContext`** interface provides an interface to the OpenGL ES 2.0 graphics rendering context for the drawing surface of an HTML [canvas--](/docs/Web/HTML/Element/canvas) element.",
  "api/webglsampler": "The **`WebGLSampler`** interface is part of the [WebGL 2](/en-US/docs/Web/API/WebGL_API) API and stores sampling parameters for [WebGLTexture--](/docs/Web/API/WebGLTexture) access inside of a shader.",
  "api/webglshader": "The **WebGLShader** is part of the [WebGL API](/en-US/docs/Web/API/WebGL_API) and can either be a vertex or a fragment shader. A [WebGLProgram--](/docs/Web/API/WebGLProgram) requires both types of shaders.",
  "api/webglshaderprecisionformat": "The **WebGLShaderPrecisionFormat** interface is part of the [WebGL API](/en-US/docs/Web/API/WebGL_API) and represents the information returned by calling the [WebGLRenderingContext.getShaderPrecisionFormat()--](/docs/Web/API/WebGLRenderingContext/getShaderPrecisionFormat) method.",
  "api/webglsync": "The **`WebGLSync`** interface is part of the [WebGL 2](/en-US/docs/Web/API/WebGL_API) API and is used to synchronize activities between the GPU and the application.",
  "api/webgltexture": "The **WebGLTexture** interface is part of the [WebGL API](/en-US/docs/Web/API/WebGL_API) and represents an opaque texture object providing storage and state for texturing operations.",
  "api/webgltransformfeedback": "The **`WebGLTransformFeedback`** interface is part of the [WebGL 2](/en-US/docs/Web/API/WebGL_API) API and enables transform feedback, which is the process of capturing primitives generated by vertex processing. It allows to preserve the post-transform rendering state of an object and resubmit this data multiple times.",
  "api/webgluniformlocation": "The **WebGLUniformLocation** interface is part of the [WebGL API](/en-US/docs/Web/API/WebGL_API) and represents the location of a uniform variable in a shader program.",
  "api/webglvertexarrayobject": "The **`WebGLVertexArrayObject`** interface is part of the [WebGL 2 API](/en-US/docs/Web/API/WebGL_API), represents vertex array objects (VAOs) pointing to vertex array data, and provides names for different sets of vertex data.",
  "api/webgpu_api": "The **WebGPU API** enables web developers to use the underlying system's GPU (Graphics Processing Unit) to carry out high-performance computations and draw complex images that can be rendered in the browser.",
  "api/webhid_api": "A Human Interface Device (HID) is a type of device that takes input from or provides output to humans. It also refers to the HID protocol, a standard for bi-directional communication between a host and a device that is designed to simplify the installation procedure. The HID protocol was originally developed for USB devices but has since been implemented over many other protocols, including Bluetooth.",
  "api/webkitpoint": "**`Point`** is an interface which represents a point in 2-dimensional space. It is non-standard, not broadly compatible, and should not be used.",
  "api/webotp_api": "The **WebOTP API** provides a streamlined user experience for web apps to verify that a phone number belongs to a user when using it as a sign-in factor. WebOTP is an extension of the [Credential Management API](/en-US/docs/Web/API/Credential_Management_API).",
  "api/webrtc_api": "**WebRTC** (Web Real-Time Communication) is a technology that enables Web applications and sites to capture and optionally stream audio and/or video media, as well as to exchange arbitrary data between browsers without requiring an intermediary. The set of standards that comprise WebRTC makes it possible to share data and perform teleconferencing peer-to-peer, without requiring that the user install plug-ins or any other third-party software.",
  "api/websocket": "The `WebSocket` object provides the API for creating and managing a [WebSocket](/en-US/docs/Web/API/WebSockets_API) connection to a server, as well as for sending and receiving data on the connection.",
  "api/websockets_api": "The **WebSocket API** is an advanced technology that makes it possible to open a two-way interactive communication session between the user's browser and a server. With this API, you can send messages to a server and receive event-driven responses without having to poll the server for a reply.",
  "api/webtransport": "The **`WebTransport`** interface of the [WebTransport API--](/docs/Web/API/WebTransport_API) provides functionality to enable a user agent to connect to an HTTP/3 server, initiate reliable and unreliable transport in either or both directions, and close the connection once it is no longer needed.",
  "api/webtransport_api": "The **WebTransport API** provides a modern update to [WebSockets--](/docs/Web/API/WebSockets_API), transmitting data between client and server using [HTTP/3 Transport](https://datatracker.ietf.org/doc/html/draft-ietf-webtrans-http3/). WebTransport provides support for multiple streams, unidirectional streams, and out-of-order delivery. It enables reliable transport via [streams--](/docs/Web/API/Streams_API) and unreliable transport via UDP-like datagrams.",
  "api/webtransportbidirectionalstream": "The **`WebTransportBidirectionalStream`** interface of the [WebTransport API--](/docs/Web/API/WebTransport_API) represents a bidirectional stream created by a server or a client that can be used for reliable transport. Provides access to a [WebTransportReceiveStream--](/docs/Web/API/WebTransportReceiveStream) for reading incoming data, and a [WebTransportSendStream--](/docs/Web/API/WebTransportSendStream) for writing outgoing data.",
  "api/webtransportdatagramduplexstream": "The **`WebTransportDatagramDuplexStream`** interface of the [WebTransport API--](/docs/Web/API/WebTransport_API) represents a duplex stream that can be used for unreliable transport of datagrams between client and server. Provides access to a [ReadableStream--](/docs/Web/API/ReadableStream) for reading incoming datagrams, a [WritableStream--](/docs/Web/API/WritableStream) for writing outgoing datagrams, and various settings and statistics related to the stream.",
  "api/webtransporterror": "The **`WebTransportError`** interface of the [WebTransport API--](/docs/Web/API/WebTransport_API) represents an error related to the API, which can arise from server errors, network connection problems, or client-initiated abort operations (for example, arising from a [WritableStream.abort()--](/docs/Web/API/WritableStream/abort) call).",
  "api/webtransportreceivestream": "The `WebTransportReceiveStream` interface of the [WebTransport API--](/docs/Web/API/WebTransport_API) is a [ReadableStream--](/docs/Web/API/ReadableStream) that can be used to read from an incoming unidirectional or bidirectional [WebTransport--](/docs/Web/API/WebTransport) stream.",
  "api/webtransportsendstream": "The `WebTransportSendStream` interface of the [WebTransport API--](/docs/Web/API/WebTransport_API) is a specialized [WritableStream--](/docs/Web/API/WritableStream) that is used to send outbound data in both unidirectional or bidirectional [WebTransport--](/docs/Web/API/WebTransport) streams.",
  "api/webusb_api": "The **WebUSB API** provides a way to expose non-standard Universal Serial Bus (USB) compatible devices services to the web, to make USB safer and easier to use.",
  "api/webvr_api": "WebVR provides support for exposing virtual reality devices — for example, head-mounted displays like the Oculus Rift or HTC Vive — to web apps, enabling developers to translate position and movement information from the display into movement around a 3D scene. This has numerous, interesting applications, from virtual product tours and interactive training apps to immersive first-person games.",
  "api/webvtt_api": "**Web Video Text Tracks Format** (**WebVTT**) is a format for displaying timed text tracks (such as subtitles or captions) using the [track--](/docs/Web/HTML/Element/track) element. The primary purpose of WebVTT files is to add text overlays to a [video--](/docs/Web/HTML/Element/video). WebVTT is a text based format, which must be encoded using [UTF-8--](/docs/Glossary/UTF-8). Where you can use spaces you can also use tabs. There is also a small API available to represent and manage these tracks and the data needed to perform the playback of the text at the correct times.",
  "api/webxr_device_api": "**WebXR** is a group of standards which are used together to support rendering 3D scenes to hardware designed for presenting virtual worlds (**virtual reality**, or **VR**), or for adding graphical imagery to the real world, (**augmented reality**, or **AR**). The **WebXR Device API** implements the core of the WebXR feature set, managing the selection of output devices, render the 3D scene to the chosen device at the appropriate frame rate, and manage motion vectors created using input controllers.",
  "api/wgsllanguagefeatures": "The **`WGSLLanguageFeatures`** interface of the [WebGPU API--](/docs/Web/API/WebGPU_API) is a [setlike](/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set) object that reports the [WGSL language extensions](https://gpuweb.github.io/gpuweb/wgsl/#language-extension) supported by the WebGPU implementation.",
  "api/wheelevent": "The **`WheelEvent`** interface represents events that occur due to the user moving a mouse wheel or similar input device.",
  "api/window": "The **`Window`** interface represents a window containing a [DOM--](/docs/Glossary/DOM) document; the `document` property points to the [DOM document](/en-US/docs/Web/API/Document) loaded in that window.",
  "api/window_controls_overlay_api": "The Window Controls Overlay API gives Progressive Web Apps installed on desktop operating systems the ability to hide the default window title bar and display their own content\nover the full surface area of the app window, turning the control buttons (maximize, minimize, and close) into an overlay.",
  "api/window_management_api": "The **Window Management API** allows you to get detailed information on the displays connected to your device and more easily place windows on specific screens, paving the way towards more effective multi-screen applications.",
  "api/windowclient": "The `WindowClient` interface of the [ServiceWorker API](/en-US/docs/Web/API/Service_Worker_API) represents the scope of a service worker client that is a document in a browsing context, controlled by an active worker. The service worker client independently selects and uses a service worker for its own loading and sub-resources.",
  "api/windowcontrolsoverlay": "The **`WindowControlsOverlay`** interface of the [Window Controls Overlay API](/en-US/docs/Web/API/Window_Controls_Overlay_API) exposes information about the geometry\nof the title bar area in desktop Progressive Web Apps, and an event to know whenever it changes. This interface is accessible from [Navigator.windowControlsOverlay--](/docs/Web/API/Navigator/windowControlsOverlay).",
  "api/windowcontrolsoverlaygeometrychangeevent": "The **`WindowControlsOverlayGeometryChangeEvent`** interface of the [Window Controls Overlay API](/en-US/docs/Web/API/Window_Controls_Overlay_API) is passed to [geometrychange--](/docs/Web/API/WindowControlsOverlay/geometrychange_event) when the size or visibility of a desktop Progress Web App's title bar region changes.",
  "api/windowsharedstorage": "The **`WindowSharedStorage`** interface of the [Shared Storage API--](/docs/Web/API/Shared_Storage_API) represents the shared storage for a particular origin within a standard browsing context.",
  "api/worker": "The **`Worker`** interface of the [Web Workers API](/en-US/docs/Web/API/Web_Workers_API) represents a background task that can be created via script, which can send messages back to its creator.",
  "api/workerglobalscope": "The **`WorkerGlobalScope`** interface of the [Web Workers API](/en-US/docs/Web/API/Web_Workers_API) is an interface representing the scope of any worker. Workers have no browsing context; this scope contains the information usually conveyed by [Window--](/docs/Web/API/Window) objects — in this case event handlers, the console or the associated [WorkerNavigator--](/docs/Web/API/WorkerNavigator) object. Each `WorkerGlobalScope` has its own event loop.",
  "api/workerlocation": "The **`WorkerLocation`** interface defines the absolute location of the script executed by the [Worker--](/docs/Web/API/Worker). Such an object is initialized for each worker and is available via the [WorkerGlobalScope.location--](/docs/Web/API/WorkerGlobalScope/location) property obtained by calling `self.location`.",
  "api/workernavigator": "The **`WorkerNavigator`** interface represents a subset of the [Navigator--](/docs/Web/API/Navigator) interface allowed to be accessed from a [Worker--](/docs/Web/API/Worker). Such an object is initialized for each worker and is available via the [self.navigator--](/docs/Web/API/WorkerGlobalScope/navigator) property.",
  "api/worklet": "The **`Worklet`** interface is a lightweight version of [Web Workers--](/docs/Web/API/Worker) and gives developers access to low-level parts of the rendering pipeline.",
  "api/workletglobalscope": "The **`WorkletGlobalScope`** interface is an abstract class that specific worklet scope classes inherit from. Each `WorkletGlobalScope` defines a new global environment.",
  "api/workletsharedstorage": "The **`WorkletSharedStorage`** interface of the [Shared Storage API--](/docs/Web/API/Shared_Storage_API) represents the shared storage for a particular origin within a worklet context.",
  "api/writablestream": "The **`WritableStream`** interface of the [Streams API](/en-US/docs/Web/API/Streams_API) provides a standard abstraction for writing streaming data to a destination, known as a sink.\nThis object comes with built-in backpressure and queuing.",
  "api/writablestreamdefaultcontroller": "The **`WritableStreamDefaultController`** interface of the [Streams API](/en-US/docs/Web/API/Streams_API) represents a controller allowing control of a [WritableStream--](/docs/Web/API/WritableStream)'s state. When constructing a `WritableStream`, the underlying sink is given a corresponding `WritableStreamDefaultController` instance to manipulate.",
  "api/writablestreamdefaultwriter": "The **`WritableStreamDefaultWriter`** interface of the [Streams API](/en-US/docs/Web/API/Streams_API) is the object returned by [WritableStream.getWriter()--](/docs/Web/API/WritableStream/getWriter) and once created locks the writer to the `WritableStream` ensuring that no other streams can write to the underlying sink.",
  "api/xmldocument": "The **XMLDocument** interface represents an XML document. It inherits from the generic [Document--](/docs/Web/API/Document) and does not add any specific methods or properties to it: nevertheless, several algorithms behave differently with the two types of documents.",
  "api/xmlhttprequest": "`XMLHttpRequest` (XHR) objects are used to interact with servers. You can retrieve data from a URL without having to do a full page refresh. This enables a Web page to update just part of a page without disrupting what the user is doing.",
  "api/xmlhttprequest_api": "The **XMLHttpRequest API** enables web apps to make HTTP requests to web servers and receive the responses programmatically using JavaScript. This in turn enables a website to update just part of a page with data from the server, rather than having to navigate to a whole new page. This practice is also sometimes known as [Ajax--](/docs/Glossary/Ajax).",
  "api/xmlhttprequesteventtarget": "`XMLHttpRequestEventTarget` is the interface that describes the event handlers shared on [XMLHttpRequest--](/docs/Web/API/XMLHttpRequest) and [XMLHttpRequestUpload--](/docs/Web/API/XMLHttpRequestUpload).",
  "api/xmlhttprequestupload": "The **`XMLHttpRequestUpload`** interface represents the upload process for a specific [XMLHttpRequest--](/docs/Web/API/XMLHttpRequest). It is an _opaque_ object that represents the underlying, browser-dependent, upload process. It is an [XMLHttpRequestEventTarget--](/docs/Web/API/XMLHttpRequestEventTarget) and can be obtained by calling [XMLHttpRequest.upload--](/docs/Web/API/XMLHttpRequest/upload).",
  "api/xmlserializer": "The `XMLSerializer` interface provides the [serializeToString()--](/docs/Web/API/XMLSerializer/serializeToString) method to construct an XML string representing a [DOM--](/docs/Glossary/DOM) tree.",
  "api/xpathevaluator": "The `XPathEvaluator` interface allows to compile and evaluate [XPath--](/docs/Glossary/XPath) expressions.",
  "api/xpathexception": "In the [DOM XPath API](/en-US/docs/Web/XPath) the **`XPathException`** interface represents exception conditions that can be encountered while performing XPath operations.",
  "api/xpathexpression": "This interface is a compiled XPath expression that can be evaluated on a document or specific node to return information from its [DOM--](/docs/Glossary/DOM) tree.",
  "api/xpathnsresolver": "The `XPathNSResolver` interface permits prefix strings in an [XPath--](/docs/Glossary/XPath) expression to be properly bound to namespace URI strings.",
  "api/xpathresult": "The **`XPathResult`** interface represents the results generated by evaluating an XPath expression within the context of a given node.",
  "api/xranchor": "The **`XRAnchor`** interface creates anchors which keep track of the pose that is fixed relative to the real world. With anchors, you can specify poses in the world that need to be updated to correctly reflect the evolving understanding of the world, such that the poses remain aligned with the same place in the physical world. That helps to build an illusion that the placed objects are really present in the user's environment.",
  "api/xranchorset": "The **`XRAnchorSet`** interface exposes a collection of anchors. Its instances are returned by [XRFrame.trackedAnchors--](/docs/Web/API/XRFrame/trackedAnchors) and are [`Set`-like objects](/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set#set-like_browser_apis).",
  "api/xrboundedreferencespace": "The [WebXR Device API](/en-US/docs/Web/API/WebXR_Device_API)'s **`XRBoundedReferenceSpace`** interface describes a virtual world [reference space](/en-US/docs/Web/API/WebXR_Device_API/Geometry) which has preset boundaries. This extends [XRReferenceSpace--](/docs/Web/API/XRReferenceSpace), which describes an essentially unrestricted space around the viewer's position. These bounds are defined using an array of points, each of which defines a vertex in a polygon inside which the user is allowed to move.",
  "api/xrcompositionlayer": "The **`XRCompositionLayer`** interface of the [WebXR Device API](/en-US/docs/Web/API/WebXR_Device_API) is a base class that defines a set of common properties and behaviors for WebXR layer types. It is not constructable on its own.",
  "api/xrcpudepthinformation": "The **`XRCPUDepthInformation`** interface contains depth information from the CPU (returned by [XRFrame.getDepthInformation()--](/docs/Web/API/XRFrame/getDepthInformation)).",
  "api/xrcubelayer": "The **`XRCubeLayer`** interface of the [WebXR Device API](/en-US/docs/Web/API/WebXR_Device_API) is a layer that renders directly from a [cubemap](https://en.wikipedia.org/wiki/Cube_mapping) and projects it onto the inside faces of a cube.",
  "api/xrcylinderlayer": "The **`XRCylinderLayer`** interface of the [WebXR Device API](/en-US/docs/Web/API/WebXR_Device_API) is a layer that takes up a curved rectangular space in the virtual environment. Only the front of the layer is visible.",
  "api/xrdepthinformation": "The **`XRDepthInformation`** interface contains information about the distance from the user's device to the real-world geometry in the user's environment.",
  "api/xrequirectlayer": "The **`XREquirectLayer`** interface of the [WebXR Device API](/en-US/docs/Web/API/WebXR_Device_API) is a layer that maps [equirectangular](https://en.wikipedia.org/wiki/Equirectangular_projection) coded data onto the inside of a sphere.",
  "api/xrframe": "A [WebXR Device API](/en-US/docs/Web/API/WebXR_Device_API) **`XRFrame`** object is passed into the [requestAnimationFrame()--](/docs/Web/API/XRSession/requestAnimationFrame) callback function and provides access to the information needed in order to render a single frame of animation for an [XRSession--](/docs/Web/API/XRSession) describing a VR or AR scene. Events which communicate the tracking state of objects also provide an `XRFrame` reference as part of their structure.",
  "api/xrhand": "The **`XRHand`** interface is pair iterator (an ordered map) with the key being the hand joints and the value being an [XRJointSpace--](/docs/Web/API/XRJointSpace).",
  "api/xrhittestresult": "The **`XRHitTestResult`** interface of the [WebXR Device API](/en-US/docs/Web/API/WebXR_Device_API) contains a single result of a hit test. You can get an array of `XRHitTestResult` objects for a frame by calling [XRFrame.getHitTestResults()--](/docs/Web/API/XRFrame/getHitTestResults).",
  "api/xrhittestsource": "The **`XRHitTestSource`** interface of the [WebXR Device API](/en-US/docs/Web/API/WebXR_Device_API) handles hit test subscriptions. You can get an `XRHitTestSource` object by using the [XRSession.requestHitTestSource()--](/docs/Web/API/XRSession/requestHitTestSource) method.",
  "api/xrinputsource": "The [WebXR Device API's](/en-US/docs/Web/API/WebXR_Device_API) **`XRInputSource`** interface describes a single source of control input which is part of the user's WebXR-compatible virtual or augmented reality system. The device is specific to the platform being used, but provides the direction in which it is being aimed and optionally may generate events if the user triggers performs actions using the device.",
  "api/xrinputsourcearray": "The interface **`XRInputSourceArray`** represents a _live_ list of WebXR input sources, and is used as the return value of the [XRSession--](/docs/Web/API/XRSession) property [inputSources--](/docs/Web/API/XRSession/inputSources). Each entry is an [XRInputSource--](/docs/Web/API/XRInputSource) representing one input device connected to the WebXR system.",
  "api/xrinputsourceevent": "The [WebXR Device API](/en-US/docs/Web/API/WebXR_Device_API)'s **`XRInputSourceEvent`** interface describes an event which has occurred on a WebXR user input device such as a hand controller, gaze tracking system, or motion tracking system. More specifically, they represent a change in the state of an [XRInputSource--](/docs/Web/API/XRInputSource).",
  "api/xrinputsourceschangeevent": "The WebXR Device API interface **`XRInputSourcesChangeEvent`** is used to represent the [inputsourceschange--](/docs/Web/API/XRSession/inputsourceschange_event) event sent to an [XRSession--](/docs/Web/API/XRSession) when the set of available WebXR input controllers changes.",
  "api/xrjointpose": "The **`XRJointPose`** interface is an [XRPose--](/docs/Web/API/XRPose) with additional information about the size of the skeleton joint it represents.",
  "api/xrjointspace": "The **`XRJointSpace`** interface is an [XRSpace--](/docs/Web/API/XRSpace) and represents the position and orientation of an [XRHand--](/docs/Web/API/XRHand) joint.",
  "api/xrlayer": "The **`XRLayer`** interface of the [WebXR Device API](/en-US/docs/Web/API/WebXR_Device_API) is the base class for WebXR layer types. It inherits methods from [EventTarget--](/docs/Web/API/EventTarget).",
  "api/xrlayerevent": "The **`XRLayerEvent`** interface of the [WebXR Device API](/en-US/docs/Web/API/WebXR_Device_API) is the event type for events related to a change of state of an [XRLayer--](/docs/Web/API/XRLayer) object. These events occur, for example, when the layer needs to be redrawn.",
  "api/xrlightestimate": "The **`XRLightEstimate`** interface of the [WebXR Device API](/en-US/docs/Web/API/WebXR_Device_API) provides the estimated lighting values for an [XRLightProbe--](/docs/Web/API/XRLightProbe) at the time represented by an [XRFrame--](/docs/Web/API/XRFrame).",
  "api/xrlightprobe": "The **`XRLightProbe`** interface of the [WebXR Device API](/en-US/docs/Web/API/WebXR_Device_API) contains lighting information at a given point in the user's environment. You can get an `XRLighting` object using the [XRSession.requestLightProbe()--](/docs/Web/API/XRSession/requestLightProbe) method.",
  "api/xrmediabinding": "The **`XRMediaBinding`** interface is used to create layers that display the content of an [HTMLVideoElement--](/docs/Web/API/HTMLVideoElement).",
  "api/xrpose": "`XRPose` is a [WebXR API](/en-US/docs/Web/API/WebXR_Device_API) interface representing a position and orientation in the 3D space, relative to the [XRSpace--](/docs/Web/API/XRSpace) within which it resides. The `XRSpace`—which is either an [XRReferenceSpace--](/docs/Web/API/XRReferenceSpace) or an [XRBoundedReferenceSpace--](/docs/Web/API/XRBoundedReferenceSpace)—defines the coordinate system used for the pose and, in the case of an [XRViewerPose--](/docs/Web/API/XRViewerPose), its underlying views.",
  "api/xrprojectionlayer": "The **`XRProjectionLayer`** interface of the [WebXR Device API](/en-US/docs/Web/API/WebXR_Device_API) is a layer that fills the entire view of the observer and is refreshed close to the device's native frame rate.",
  "api/xrquadlayer": "The **`XRQuadLayer`** interface of the [WebXR Device API](/en-US/docs/Web/API/WebXR_Device_API) is a layer that takes up a flat rectangular space in the virtual environment. An `XRQuadLayer` has no thickness. It is a two-dimensional object positioned and oriented in 3D space. The position of a quad refers to the center of the quad. Only the front of the layer is visible.",
  "api/xrray": "The **`XRRay`** interface of the [WebXR Device API](/en-US/docs/Web/API/WebXR_Device_API) is a geometric ray described by an origin point and a direction vector.",
  "api/xrreferencespace": "The WebXR Device API's **`XRReferenceSpace`** interface describes the coordinate system for a specific tracked entity or object within the virtual world using a specified tracking behavior. The tracking behavior is defined by the selected [reference space type](#reference_space_types). It expands upon the base class, [XRSpace--](/docs/Web/API/XRSpace), by adding support for several different tracking behaviors as well as to request a new reference space which describes the offset transform between the tracked object and another location in the world.",
  "api/xrreferencespaceevent": "The [WebXR Device API](/en-US/docs/Web/API/WebXR_Device_API) interface **`XRReferenceSpaceEvent`** represents an event sent to an [XRReferenceSpace--](/docs/Web/API/XRReferenceSpace). Currently, the only event that uses this type is the [reset--](/docs/Web/API/XRReferenceSpace/reset_event) event.",
  "api/xrrenderstate": "The **`XRRenderState`** interface of the [WebXR Device API](/en-US/docs/Web/API/WebXR_Device_API) contains configurable values which affect how the imagery generated by an [XRSession--](/docs/Web/API/XRSession) gets composited. These properties include the range of distances from the viewer within which content should be rendered, the vertical field of view (for inline presentations), and a reference to the [XRWebGLLayer--](/docs/Web/API/XRWebGLLayer) being used as the target for rendering the scene prior to it being presented on the XR device's display or displays.",
  "api/xrrigidtransform": "The **`XRRigidTransform`** is a [WebXR API](/en-US/docs/Web/API/WebXR_Device_API) interface that represents the 3D geometric transform described by a position and orientation.",
  "api/xrsession": "The [WebXR Device API--](/docs/Web/API/WebXR_Device_API)'s **`XRSession`** interface represents an ongoing XR session, providing methods and properties used to interact with and control the session. To open a WebXR session, use the [XRSystem--](/docs/Web/API/XRSystem) interface's [requestSession()--](/docs/Web/API/XRSystem/requestSession) method.",
  "api/xrsessionevent": "The [WebXR Device API](/en-US/docs/Web/API/WebXR_Device_API)'s **`XRSessionEvent`** interface describes an event which indicates the change of the state of an [XRSession--](/docs/Web/API/XRSession). These events occur, for example, when the session ends or the visibility of its context changes.",
  "api/xrspace": "The **`XRSpace`** interface of the [WebXR Device API](/en-US/docs/Web/API/WebXR_Device_API) is an abstract interface providing a common basis for every class which represents a virtual coordinate system within the virtual world, in which its origin corresponds to a physical location. Spatial data in WebXR is always expressed relative to an object based upon one of the descendant interfaces of `XRSpace`, at the time at which a given [XRFrame--](/docs/Web/API/XRFrame) takes place.",
  "api/xrsubimage": "The **`XRSubImage`** interface of the [WebXR Device API](/en-US/docs/Web/API/WebXR_Device_API) represents what viewport of the GPU texture to use for rendering.",
  "api/xrsystem": "The [WebXR Device API](/en-US/docs/Web/API/WebXR_Device_API) interface **`XRSystem`** provides methods which let you get access to an [XRSession--](/docs/Web/API/XRSession) object representing a WebXR session. With that `XRSession` in hand, you can use it to interact with the Augmented Reality (AR) or Virtual Reality (VR) device.",
  "api/xrtransientinputhittestresult": "The **`XRTransientInputHitTestResult`** interface of the [WebXR Device API](/en-US/docs/Web/API/WebXR_Device_API) contains an array of results of a hit test for transient input, grouped by input source.",
  "api/xrtransientinputhittestsource": "The **`XRTransientInputHitTestSource`** interface of the [WebXR Device API](/en-US/docs/Web/API/WebXR_Device_API) handles transient input hit test subscriptions. You can get an `XRTransientInputHitTestSource` object by calling the [XRSession.requestHitTestSourceForTransientInput()--](/docs/Web/API/XRSession/requestHitTestSourceForTransientInput).",
  "api/xrview": "The [WebXR Device API](/en-US/docs/Web/API/WebXR_Device_API)'s **`XRView`** interface describes a single view into the XR scene for a specific frame, providing orientation and position information for the viewpoint. You can think of it as a description of a specific eye or camera and how it views the world. A 3D frame will involve two views, one for each eye, separated by an appropriate distance which approximates the distance between the viewer's eyes. This allows the two views, when projected in isolation into the appropriate eyes, to simulate a 3D world.",
  "api/xrviewerpose": "The WebXR Device API interface **`XRViewerPose`** represents the pose (the position and orientation) of a viewer's point of view on the scene. Each `XRViewerPose` can have multiple views to represent, for example, the slight separation between the left and right eye.",
  "api/xrviewport": "The WebXR Device API's **`XRViewport`** interface provides properties used to describe the size and position of the current viewport within the [XRWebGLLayer--](/docs/Web/API/XRWebGLLayer) being used to render the 3D scene.",
  "api/xrwebglbinding": "The **`XRWebGLBinding`** interface is used to create layers that have a GPU backend.",
  "api/xrwebgldepthinformation": "The **`XRWebGLDepthInformation`** interface contains depth information from the GPU/WebGL (returned by [XRWebGLBinding.getDepthInformation()--](/docs/Web/API/XRWebGLBinding/getDepthInformation)).",
  "api/xrwebgllayer": "The **`XRWebGLLayer`** interface of the WebXR Device API provides a linkage between the WebXR device (or simulated XR device, in the case of an inline session) and a WebGL context used to render the scene for display on the device. In particular, it provides access to the WebGL framebuffer and viewport to ease access to the context.",
  "api/xrwebglsubimage": "The **`XRWebGLSubImage`** interface is used during rendering of WebGL layers.",
  "api/xsltprocessor": "An **`XSLTProcessor`** applies an [XSLT](/en-US/docs/Web/XSLT) stylesheet transformation to an XML document to\nproduce a new XML document as output. It has methods to load the XSLT stylesheet, to\nmanipulate `<xsl:param>` parameter values, and to apply the\ntransformation to documents.",
  "svg/element/a": "The **\\<a>** SVG element creates a hyperlink to other web pages, files, locations in the same page, email addresses, or any other URL. It is very similar to HTML's [a--](/docs/Web/HTML/Element/a) element.",
  "svg/element/animate": "The SVG **`<animate>`** element provides a way to animate an attribute of an element over time.",
  "svg/element/animatemotion": "The SVG **`<animateMotion>`** element provides a way to define how an element moves along a motion path.",
  "svg/element/animatetransform": "The `animateTransform` element animates a transformation attribute on its target element, thereby allowing animations to control translation, scaling, rotation, and/or skewing.",
  "svg/element/circle": "The **`<circle>`** [SVG](/en-US/docs/Web/SVG) element is an [SVG basic shape](/en-US/docs/Web/SVG/Tutorial/Basic_Shapes), used to draw circles based on a center point and a radius.",
  "svg/element/clippath": "The **`<clipPath>`** [SVG](/en-US/docs/Web/SVG) element defines a clipping path, to be used by the [clip-path--](/docs/Web/SVG/Attribute/clip-path) property.",
  "svg/element/cursor": "The **`<cursor>`** [SVG](/en-US/docs/Web/SVG) element can be used to define a platform-independent custom cursor. A recommended approach for defining a platform-independent custom cursor is to create a PNG image and define a `cursor` element that references the PNG image and identifies the exact position within the image which is the pointer position (i.e., the hot spot).",
  "svg/element/defs": "The **`<defs>`** element is used to store graphical objects that will be used at a later time. Objects created inside a `<defs>` element are not rendered directly. To display them you have to reference them (with a [use--](/docs/Web/SVG/Element/use) element for example).",
  "svg/element/desc": "The **`<desc>`** element provides an accessible, long-text description of any SVG [container element](/en-US/docs/Web/SVG/Element#container_elements) or [graphics element](/en-US/docs/Web/SVG/Element#graphics_elements).",
  "svg/element/ellipse": "The **`<ellipse>`** element is an SVG basic shape, used to create ellipses based on a center coordinate, and both their x and y radius.",
  "svg/element/feblend": "The **`<feBlend>`** [SVG](/en-US/docs/Web/SVG) filter primitive composes two objects together ruled by a certain blending mode. This is similar to what is known from image editing software when blending two layers. The mode is defined by the [mode--](/docs/Web/SVG/Attribute/mode) attribute.",
  "svg/element/fecolormatrix": "The **`<feColorMatrix>`** SVG filter element changes colors based on a transformation matrix. Every pixel's color value `[R,G,B,A]` is [matrix multiplied](https://en.wikipedia.org/wiki/Matrix_multiplication) by a 5 by 5 color matrix to create new color `[R',G',B',A']`.",
  "svg/element/fecomponenttransfer": "The **`<feComponentTransfer>`** [SVG](/en-US/docs/Web/SVG) filter primitive performs color-component-wise remapping of data for each pixel. It allows operations like brightness adjustment, contrast adjustment, color balance or thresholding.",
  "svg/element/fecomposite": "The **`<feComposite>`** [SVG](/en-US/docs/Web/SVG) filter primitive performs the combination of two input images pixel-wise in image space using one of the Porter-Duff compositing operations: `over`, `in`, `atop`, `out`, `xor`, `lighter`, or `arithmetic`.",
  "svg/element/feconvolvematrix": "The **`<feConvolveMatrix>`** [SVG](/en-US/docs/Web/SVG) filter primitive applies a matrix convolution filter effect. A convolution combines pixels in the input image with neighboring pixels to produce a resulting image. A wide variety of imaging operations can be achieved through convolutions, including blurring, edge detection, sharpening, embossing and beveling.",
  "svg/element/fediffuselighting": "The **`<feDiffuseLighting>`** [SVG](/en-US/docs/Web/SVG) filter primitive lights an image using the alpha channel as a bump map. The resulting image, which is an RGBA opaque image, depends on the light color, light position and surface geometry of the input bump map.",
  "svg/element/fedisplacementmap": "The **`<feDisplacementMap>`** [SVG](/en-US/docs/Web/SVG) filter primitive uses the pixel values from the image from [in2--](/docs/Web/SVG/Attribute/in2) to spatially displace the image from [in--](/docs/Web/SVG/Attribute/in).",
  "svg/element/fedistantlight": "The **`<feDistantLight>`** filter primitive defines a distant light source that can be used within a lighting filter primitive: [feDiffuseLighting--](/docs/Web/SVG/Element/feDiffuseLighting) or [feSpecularLighting--](/docs/Web/SVG/Element/feSpecularLighting).",
  "svg/element/fedropshadow": "The SVG **`<feDropShadow>`** filter primitive creates a drop shadow of the input image. It can only be used inside a [filter--](/docs/Web/SVG/Element/filter) element.",
  "svg/element/feflood": "The **`<feFlood>`** SVG filter primitive fills the filter subregion with the color and opacity defined by [flood-color--](/docs/Web/SVG/Attribute/flood-color) and [flood-opacity--](/docs/Web/SVG/Attribute/flood-opacity).",
  "svg/element/fefunca": "The **`<feFuncA>`** [SVG](/en-US/docs/Web/SVG) filter primitive defines the transfer function for the alpha component of the input graphic of its parent [feComponentTransfer--](/docs/Web/SVG/Element/feComponentTransfer) element.",
  "svg/element/fefuncb": "The **`<feFuncB>`** [SVG](/en-US/docs/Web/SVG) filter primitive defines the transfer function for the blue component of the input graphic of its parent [feComponentTransfer--](/docs/Web/SVG/Element/feComponentTransfer) element.",
  "svg/element/fefuncg": "The **`<feFuncG>`** [SVG](/en-US/docs/Web/SVG) filter primitive defines the transfer function for the green component of the input graphic of its parent [feComponentTransfer--](/docs/Web/SVG/Element/feComponentTransfer) element.",
  "svg/element/fefuncr": "The **`<feFuncR>`** [SVG](/en-US/docs/Web/SVG) filter primitive defines the transfer function for the red component of the input graphic of its parent [feComponentTransfer--](/docs/Web/SVG/Element/feComponentTransfer) element.",
  "svg/element/fegaussianblur": "The **`<feGaussianBlur>`** [SVG](/en-US/docs/Web/SVG) filter primitive blurs the input image by the amount specified in [stdDeviation--](/docs/Web/SVG/Attribute/stdDeviation), which defines the bell-curve.",
  "svg/element/feimage": "The **`<feImage>`** [SVG](/en-US/docs/Web/SVG) filter primitive fetches image data from an external source and provides the pixel data as output (meaning if the external source is an SVG image, it is rasterized.)",
  "svg/element/femerge": "The **`<feMerge>`** SVG element allows filter effects to be applied concurrently instead of sequentially. This is achieved by other filters storing their output via the [result--](/docs/Web/SVG/Attribute/result) attribute and then accessing it in a [feMergeNode--](/docs/Web/SVG/Element/feMergeNode) child.",
  "svg/element/femergenode": "The `feMergeNode` takes the result of another filter to be processed by its parent [feMerge--](/docs/Web/SVG/Element/feMerge).",
  "svg/element/femorphology": "The **`<feMorphology>`** [SVG](/en-US/docs/Web/SVG) filter primitive is used to erode or dilate the input image. Its usefulness lies especially in fattening or thinning effects.",
  "svg/element/feoffset": "The **`<feOffset>`** SVG filter primitive allows to offset the input image. The input image as a whole is offset by the values specified in the [dx--](/docs/Web/SVG/Attribute/dx) and [dy--](/docs/Web/SVG/Attribute/dy) attributes.",
  "svg/element/fepointlight": "The **`<fePointLight>`** filter primitive defines a light source which allows to create a point light effect. It that can be used within a lighting filter primitive: [feDiffuseLighting--](/docs/Web/SVG/Element/feDiffuseLighting) or [feSpecularLighting--](/docs/Web/SVG/Element/feSpecularLighting).",
  "svg/element/fespecularlighting": "The **`<feSpecularLighting>`** [SVG](/en-US/docs/Web/SVG) filter primitive lights a source graphic using the alpha channel as a bump map. The resulting image is an RGBA image based on the light color. The lighting calculation follows the standard specular component of [the Phong lighting model](https://en.wikipedia.org/wiki/Phong_reflection_model). The resulting image depends on the light color, light position and surface geometry of the input bump map. The result of the lighting calculation is added. The filter primitive assumes that the viewer is at infinity in the z direction.",
  "svg/element/fespotlight": "The **`<feSpotLight>`** [SVG](/en-US/docs/Web/SVG) filter primitive defines a light source that can be used to create a spotlight effect.\nIt is used within a lighting filter primitive: [feDiffuseLighting--](/docs/Web/SVG/Element/feDiffuseLighting) or [feSpecularLighting--](/docs/Web/SVG/Element/feSpecularLighting).",
  "svg/element/fetile": "The **`<feTile>`** [SVG](/en-US/docs/Web/SVG) filter primitive allows to fill a target rectangle with a repeated, tiled pattern of an input image. The effect is similar to the one of a [pattern--](/docs/Web/SVG/Element/pattern).",
  "svg/element/feturbulence": "The **`<feTurbulence>`** [SVG](/en-US/docs/Web/SVG) filter primitive creates an image using the [Perlin turbulence function](https://en.wikipedia.org/wiki/Perlin_noise). It allows the synthesis of artificial textures like clouds or marble. The resulting image will fill the entire filter primitive subregion.",
  "svg/element/filter": "The **`<filter>`** [SVG](/en-US/docs/Web/SVG) element defines a custom filter effect by grouping atomic filter primitives. It is never rendered itself, but must be used by the [filter--](/docs/Web/SVG/Attribute/filter) attribute on SVG elements, or the [filter--](/docs/Web/CSS/filter) [CSS--](/docs/Glossary/CSS) property for SVG/HTML elements.",
  "svg/element/font": "The **`<font>`** [SVG](/en-US/docs/Web/SVG) element defines a font to be used for text layout.",
  "svg/element/font-face": "The **`<font-face>`** [SVG](/en-US/docs/Web/SVG) element corresponds to the CSS [@font-face--](/docs/Web/CSS/@font-face) rule. It defines a font's outer properties.",
  "svg/element/font-face-format": "The **`<font-face-format>`** [SVG](/en-US/docs/Web/SVG) element describes the type of font referenced by its parent [font-face-uri--](/docs/Web/SVG/Element/font-face-uri).",
  "svg/element/font-face-name": "The **`<font-face-name>`** element points to a locally installed copy of this font, identified by its name.",
  "svg/element/font-face-src": "The **`<font-face-src>`** [SVG](/en-US/docs/Web/SVG) element corresponds to the [src--](/docs/Web/CSS/@font-face/src) descriptor in CSS [@font-face--](/docs/Web/CSS/@font-face) rules. It serves as container for [font-face-name--](/docs/Web/SVG/Element/font-face-name), pointing to locally installed copies of this font, and [font-face-uri--](/docs/Web/SVG/Element/font-face-uri), utilizing remotely defined fonts.",
  "svg/element/font-face-uri": "The **`<font-face-uri>`** [SVG](/en-US/docs/Web/SVG) element points to a remote definition of the current font.",
  "svg/element/foreignobject": "The **`<foreignObject>`** [SVG](/en-US/docs/Web/SVG) element includes elements from a different XML namespace. In the context of a browser, it is most likely (X)HTML.",
  "svg/element/g": "The **`<g>`** [SVG](/en-US/docs/Web/SVG) element is a container used to group other SVG elements.",
  "svg/element/glyph": "A **`<glyph>`** defines a single glyph in an SVG font.",
  "svg/element/glyphref": "The `glyphRef` element provides a single possible glyph to the referencing `<altGlyph>` substitution.",
  "svg/element/hkern": "The **`<hkern>`** [SVG](/en-US/docs/Web/SVG) element allows to fine-tweak the horizontal distance between two glyphs. This process is known as [kerning](https://en.wikipedia.org/wiki/Kerning).",
  "svg/element/image": "The **`<image>`** SVG element includes images inside SVG documents. It can display [raster image--](/docs/Glossary/raster_image) files or other SVG files.",
  "svg/element/line": "The **`<line>`** element is an SVG basic shape used to create a line connecting two points.",
  "svg/element/lineargradient": "The **`<linearGradient>`** element lets authors define linear gradients to apply to other SVG elements.",
  "svg/element/marker": "The **`<marker>`** element defines a graphic used for drawing arrowheads or polymarkers on a given [path--](/docs/Web/SVG/Element/path), [line--](/docs/Web/SVG/Element/line), [polyline--](/docs/Web/SVG/Element/polyline) or [polygon--](/docs/Web/SVG/Element/polygon) element.",
  "svg/element/mask": "The **`<mask>`** element defines an alpha mask for compositing the current object into the background. A mask is used/referenced using the [mask--](/docs/Web/SVG/Attribute/mask) property.",
  "svg/element/metadata": "The **`<metadata>`** [SVG](/en-US/docs/Web/SVG) element adds metadata to SVG content. Metadata is structured information about data. The contents of `<metadata>` should be elements from other [XML--](/docs/Glossary/XML) [namespaces--](/docs/Glossary/namespace) such as [RDF--](/docs/Glossary/RDF), [FOAF](<https://en.wikipedia.org/wiki/FOAF_(ontology)>), etc.",
  "svg/element/missing-glyph": "The **`<missing-glyph>`** [SVG](/en-US/docs/Web/SVG) element's content is rendered, if for a given character the font doesn't define an appropriate [glyph--](/docs/Web/SVG/Element/glyph).",
  "svg/element/mpath": "The **`<mpath>`** sub-element for the [animateMotion--](/docs/Web/SVG/Element/animateMotion) element provides the ability to reference an external [path--](/docs/Web/SVG/Element/path) element as the definition of a motion path.",
  "svg/element/path": "The **`<path>`** [SVG](/en-US/docs/Web/SVG) element is the generic element to define a shape. All the basic shapes can be created with a path element.",
  "svg/element/pattern": "The **`<pattern>`** element defines a graphics object which can be redrawn at repeated x- and y-coordinate intervals (\"tiled\") to cover an area.",
  "svg/element/polygon": "The **`<polygon>`** element defines a closed shape consisting of a set of connected straight line segments. The last point is connected to the first point.",
  "svg/element/polyline": "The **`<polyline>`** [SVG](/en-US/docs/Web/SVG) element is an SVG basic shape that creates straight lines connecting several points. Typically a `polyline` is used to create open shapes as the last point doesn't have to be connected to the first point. For closed shapes see the [polygon--](/docs/Web/SVG/Element/polygon) element.",
  "svg/element/radialgradient": "The **`<radialGradient>`** element lets authors define radial gradients that can be applied to fill or stroke of graphical elements.",
  "svg/element/rect": "The **`<rect>`** element is a [basic SVG shape](/en-US/docs/Web/SVG/Tutorial/Basic_Shapes) that draws rectangles, defined by their position, width, and height. The rectangles may have their corners rounded.",
  "svg/element/script": "The SVG `script` element allows to add scripts to an SVG document.",
  "svg/element/set": "The SVG **`<set>`** element provides a simple means of just setting the value of an attribute for a specified duration.",
  "svg/element/stop": "The SVG **`<stop>`** element defines a color and its position to use on a gradient. This element is always a child of a [linearGradient--](/docs/Web/SVG/Element/linearGradient) or [radialGradient--](/docs/Web/SVG/Element/radialGradient) element.",
  "svg/element/style": "The SVG **`<style>`** element allows style sheets to be embedded directly within SVG content.",
  "svg/element/svg": "The `svg` element is a container that defines a new coordinate system and [viewport](/en-US/docs/Web/SVG/Attribute/viewBox). It is used as the outermost element of SVG documents, but it can also be used to embed an SVG fragment inside an SVG or HTML document.",
  "svg/element/switch": "The **`<switch>`** [SVG](/en-US/docs/Web/SVG) element evaluates any [requiredFeatures--](/docs/Web/SVG/Attribute/requiredFeatures), [requiredExtensions--](/docs/Web/SVG/Attribute/requiredExtensions) and [systemLanguage--](/docs/Web/SVG/Attribute/systemLanguage) attributes on its direct child elements in order, and then renders the first child where these attributes evaluate to true.",
  "svg/element/symbol": "The **`<symbol>`** element is used to define graphical template objects which can be instantiated by a [use--](/docs/Web/SVG/Element/use) element.",
  "svg/element/text": "The SVG **`<text>`** element draws a graphics element consisting of text. It's possible to apply a gradient, pattern, clipping path, mask, or filter to `<text>`, like any other SVG graphics element.",
  "svg/element/textpath": "To render text along the shape of a [path--](/docs/Web/SVG/Element/path), enclose the text in a **`<textPath>`** element that has an [href--](/docs/Web/SVG/Attribute/href) attribute with a reference to the [path--](/docs/Web/SVG/Element/path) element.",
  "svg/element/title": "The **`<title>`** element provides an accessible, short-text description of any SVG [container element](/en-US/docs/Web/SVG/Element#container_elements) or [graphics element](/en-US/docs/Web/SVG/Element#graphics_elements).",
  "svg/element/tref": "The textual content for a [text--](/docs/Web/SVG/Element/text) [SVG](/en-US/docs/Web/SVG) element can be either character data directly embedded within the [text--](/docs/Web/SVG/Element/text) element or the character data content of a referenced element, where the referencing is specified with a **`<tref>`** element.",
  "svg/element/tspan": "The SVG **`<tspan>`** element defines a subtext within a [text--](/docs/Web/SVG/Element/text) element or another `<tspan>` element. It allows for adjustment of the style and/or position of that subtext as needed.",
  "svg/element/use": "The **`<use>`** element takes nodes from within the SVG document, and duplicates them somewhere else.\nThe effect is the same as if the nodes were deeply cloned into a non-exposed DOM, then pasted where the `use` element is, much like cloned [template elements](/en-US/docs/Web/HTML/Element/template).",
  "svg/element/view": "A view is a defined way to view the image, like a zoom level or a detail view.",
  "svg/element/vkern": "The **`<vkern>`** SVG element allows to fine-tweak the vertical distance between two glyphs in top-to-bottom fonts. This process is known as [kerning](https://en.wikipedia.org/wiki/Kerning).",
  "svg/global_attributes/accent-height": "The **`accent-height`** attribute defines the distance from the origin to the top of accent characters, measured by a distance within the font coordinate system.",
  "svg/global_attributes/accumulate": "The **`accumulate`** attribute controls whether or not an animation is cumulative.",
  "svg/global_attributes/additive": "The **`additive`** attribute controls whether or not an animation is additive.",
  "svg/global_attributes/alignment-baseline": "The **`alignment-baseline`** attribute specifies how an object is aligned with respect to its parent. This property specifies which baseline of this element is to be aligned with the corresponding baseline of the parent. For example, this allows alphabetic baselines in Roman text to stay aligned across font size changes. It defaults to the baseline with the same name as the computed value of the `alignment-baseline` property.",
  "svg/global_attributes/alphabetic": "The **`alphabetic`** attribute defines the lower baseline of a font. It has the same syntax and semantics as the [baseline--](/docs/Web/CSS/@font-face/baseline) descriptor within an [@font-face--](/docs/Web/CSS/@font-face).",
  "svg/global_attributes/amplitude": "The **`amplitude`** attribute controls the amplitude of the gamma function of a component transfer element when its [type--](/docs/Web/SVG/Attribute/type) attribute is `gamma`.",
  "svg/global_attributes/arabic-form": "The **`arabic-form`** attribute indicates which of the four possible forms an Arabic glyph represents.",
  "svg/global_attributes/ascent": "The **`ascent`** attribute defines the maximum unaccented height of the font within the font coordinate system.",
  "svg/global_attributes/attributename": "The **`attributeName`** attribute indicates the name of the CSS property or attribute of the target element that is going to be changed during an animation.",
  "svg/global_attributes/attributetype": "The **`attributeType`** attribute specifies the namespace in which the target attribute and its associated values are defined.",
  "svg/global_attributes/azimuth": "The **`azimuth`** attribute specifies the direction angle for the light source on the XY plane (clockwise), in degrees from the x axis.",
  "svg/global_attributes/basefrequency": "The **`baseFrequency`** attribute represents the base frequency parameter for the noise function of the [feTurbulence--](/docs/Web/SVG/Element/feTurbulence) filter primitive.",
  "svg/global_attributes/baseline-shift": "The **`baseline-shift`** attribute allows repositioning of the dominant-baseline relative to the dominant-baseline of the parent text content element. The shifted object might be a sub- or superscript.",
  "svg/global_attributes/baseprofile": "The **`baseProfile`** attribute describes the minimum SVG language profile that the author believes is necessary to correctly render the content. The attribute does not specify any processing restrictions; It can be considered metadata.",
  "svg/global_attributes/bbox": "The **`bbox`** attribute defines the maximal bounding box of a font.",
  "svg/global_attributes/begin": "The **`begin`** attribute defines when an animation should begin.",
  "svg/global_attributes/bias": "The **`bias`** attribute shifts the range of the filter. After applying the [kernelMatrix--](/docs/Web/SVG/Attribute/kernelMatrix) of the [feConvolveMatrix--](/docs/Web/SVG/Element/feConvolveMatrix) element to the input image to yield a number and applied the [divisor--](/docs/Web/SVG/Attribute/divisor) attribute, the `bias` attribute is added to each component. This allows representation of values that would otherwise be clamped to 0 or 1.",
  "svg/global_attributes/by": "The **`by`** attribute specifies a relative offset value for an attribute that will be modified during an animation.",
  "svg/global_attributes/calcmode": "The **`calcMode`** attribute specifies the [interpolation--](/docs/Glossary/interpolation) mode for the animation.",
  "svg/global_attributes/cap-height": "The **`cap-height`** attribute defines the height of uppercase glyphs of the font within the font coordinate system.",
  "svg/global_attributes/class": "« [SVG Attribute reference home](/en-US/docs/Web/SVG/Attribute)",
  "svg/global_attributes/clip": "The **`clip`** attribute is a presentation attribute defining the visible region of an element.",
  "svg/global_attributes/clip-path": "The **`clip-path`** presentation attribute defines or associates a clipping path with the element it is related to.",
  "svg/global_attributes/clip-rule": "« [SVG Attribute reference home](/en-US/docs/Web/SVG/Attribute)",
  "svg/global_attributes/clippathunits": "The **`clipPathUnits`** attribute indicates which coordinate system to use for the contents of the [clipPath--](/docs/Web/SVG/Element/clipPath) element.",
  "svg/global_attributes/color": "The **`color`** attribute is used to provide a potential indirect value, `currentcolor`, for the [fill--](/docs/Web/SVG/Attribute/fill), [stroke--](/docs/Web/SVG/Attribute/stroke), [stop-color--](/docs/Web/SVG/Attribute/stop-color), [flood-color--](/docs/Web/SVG/Attribute/flood-color), and [lighting-color--](/docs/Web/SVG/Attribute/lighting-color) attributes.",
  "svg/global_attributes/color-interpolation": "The **`color-interpolation`** attribute specifies the color space for gradient interpolations, color animations, and alpha compositing.",
  "svg/global_attributes/color-interpolation-filters": "The **`color-interpolation-filters`** attribute specifies the color space for imaging operations performed via filter effects.",
  "svg/global_attributes/color-profile": "The **`color-profile`** attribute is used to define which color profile a raster image included through the [image--](/docs/Web/SVG/Element/image) element should use.",
  "svg/global_attributes/crossorigin": "|\n| `anonymous`       | Client CORS requests for this element will have the credentials flag set to 'same-origin'.                        |\n| `use-credentials` | Client CORS requests for this element will have the credentials flag set to 'include'.                            |\n| `\"\"`              | Setting the attribute name to an empty value, like `crossorigin` or `crossorigin=\"\"`, is the same as `anonymous`. |",
  "svg/global_attributes/cursor": "[SVG Attribute reference home](/en-US/docs/Web/SVG/Attribute)",
  "svg/global_attributes/cx": "The **`cx`** attribute define the x-axis coordinate of a center point.",
  "svg/global_attributes/cy": "The **`cy`** attribute define the y-axis coordinate of a center point.",
  "svg/global_attributes/d": "The **`d`** attribute defines a path to be drawn.",
  "svg/global_attributes/data-_star_": "The **`data-*`** SVG attributes are called custom data attributes. They let SVG markup and its resulting DOM share information that standard attributes can't, usually for scripting purposes. Their custom data are available via the [SVGElement--](/docs/Web/API/SVGElement) interface of the element the attributes belong to, with the [HTMLElement.dataset--](/docs/Web/API/HTMLElement/dataset) property.",
  "svg/global_attributes/decoding": "The `decoding` attribute, valid on [image--](/docs/Web/SVG/Element/image) elements, provides a hint to the browser as to whether it should perform image decoding along with rendering other content in a single presentation step that looks more \"correct\" (`sync`), or render and present the other content first and then decode the image and present it later (`async`). In practice, `async` means that the next paint does not wait for the image to decode.",
  "svg/global_attributes/descent": "The **`descent`** attribute defines the maximum unaccented depth of the font.",
  "svg/global_attributes/diffuseconstant": "The **`diffuseConstant`** attribute represents the k<sub>d</sub> value in the [Phong lighting model](https://en.wikipedia.org/wiki/Phong_reflection_model). In SVG, this can be any non-negative number.",
  "svg/global_attributes/direction": "The **`direction`** attribute specifies the inline-base direction of a [text--](/docs/Web/SVG/Element/text) or [tspan--](/docs/Web/SVG/Element/tspan) element. It defines the start and end points of a line of text as used by the [text-anchor--](/docs/Web/SVG/Attribute/text-anchor) and [inline-size--](/docs/Web/SVG/Attribute/inline-size) properties. It also may affect the direction in which characters are positioned if the [unicode-bidi--](/docs/Web/SVG/Attribute/unicode-bidi) property's value is either `embed` or `bidi-override`.",
  "svg/global_attributes/display": "The **`display`** attribute lets you control the rendering of graphical or container elements.",
  "svg/global_attributes/divisor": "The **`divisor`** attribute specifies the value by which the resulting number of applying the [kernelMatrix--](/docs/Web/SVG/Attribute/kernelMatrix) of a [feConvolveMatrix--](/docs/Web/SVG/Element/feConvolveMatrix) element to the input image color value is divided to yield the destination color value.",
  "svg/global_attributes/dominant-baseline": "The **`dominant-baseline`** attribute specifies the dominant baseline, which is the baseline used to align the box's text and inline-level contents. It also indicates the default alignment baseline of any boxes participating in baseline alignment in the box's alignment context.",
  "svg/global_attributes/dur": "The **`dur`** attribute indicates the simple duration of an animation.",
  "svg/global_attributes/dx": "The **`dx`** attribute indicates a shift along the x-axis on the position of an element or its content.",
  "svg/global_attributes/dy": "The **`dy`** attribute indicates a shift along the y-axis on the position of an element or its content.",
  "svg/global_attributes/edgemode": "The **`edgeMode`** attribute determines how to extend the input image as necessary with color values so that the matrix operations can be applied when the kernel is positioned at or near the edge of the input image.",
  "svg/global_attributes/elevation": "The **`elevation`** attribute specifies the direction angle for the light source from the XY plane towards the Z-axis, in degrees. Note that the positive Z-axis points towards the viewer of the content.",
  "svg/global_attributes/enable-background": "The **`enable-background`** attribute specifies how the accumulation of the background image is managed.",
  "svg/global_attributes/end": "The **`end`** attribute defines an end value for the animation that can constrain the active duration.",
  "svg/global_attributes/exponent": "The **`exponent`** attribute defines the exponent of the gamma function.",
  "svg/global_attributes/fill": "The **`fill`** attribute has two different meanings. For shapes and text it's a presentation attribute that defines the color (_or any SVG paint servers like gradients or patterns_) used to paint the element; for animation it defines the final state of the animation.",
  "svg/global_attributes/fill-opacity": "The **`fill-opacity`** attribute is a presentation attribute defining the opacity of the paint server (_color_, _gradient_, _pattern_, etc.) applied to a shape.",
  "svg/global_attributes/fill-rule": "The **`fill-rule`** attribute is a presentation attribute defining the algorithm to use to determine the _inside_ part of a shape.",
  "svg/global_attributes/filter": "The **`filter`** attribute specifies the filter effects defined by the [filter--](/docs/Web/SVG/Element/filter) element that shall be applied to its element.",
  "svg/global_attributes/filterunits": "The **`filterUnits`** attribute defines the coordinate system for the attributes [x--](/docs/Web/SVG/Attribute/x), [y--](/docs/Web/SVG/Attribute/y), [width--](/docs/Web/SVG/Attribute/width) and [height--](/docs/Web/SVG/Attribute/height).",
  "svg/global_attributes/flood-color": "The **`flood-color`** attribute indicates what color to use to flood the current filter primitive subregion.",
  "svg/global_attributes/flood-opacity": "The **`flood-opacity`** attribute indicates the opacity value to use across the current filter primitive subregion.",
  "svg/global_attributes/font-family": "The **`font-family`** attribute indicates which font family will be used to render the text, specified as a prioritized list of font family names and/or generic family names.",
  "svg/global_attributes/font-size": "The **`font-size`** attribute refers to the size of the font from [baseline--](/docs/Glossary/baseline/typography) to baseline when multiple lines of text are set solid in a multiline layout environment.",
  "svg/global_attributes/font-size-adjust": "The `font-size-adjust` attribute allows authors to specify an aspect value for an element that will preserve the x-height of the first choice font in a substitute font.",
  "svg/global_attributes/font-stretch": "The **`font-stretch`** attribute indicates the desired amount of condensing or expansion in the glyphs used to render the text.",
  "svg/global_attributes/font-style": "The **`font-style`** attribute specifies whether the text is to be rendered using a normal, italic, or oblique face.",
  "svg/global_attributes/font-variant": "The **`font-variant`** attribute indicates whether the text is to be rendered using variations of the font's [glyphs--](/docs/Glossary/glyph).",
  "svg/global_attributes/font-weight": "The **`font-weight`** attribute refers to the boldness or lightness of the glyphs used to render the text, relative to other fonts in the same font family.",
  "svg/global_attributes/fr": "The **`fr`** attribute defines the radius of the focal point for the radial gradient.",
  "svg/global_attributes/from": "The **`from`** attribute indicates the initial value of the attribute that will be modified during the animation.",
  "svg/global_attributes/fx": "The **`fx`** attribute defines the x-axis coordinate of the focal point for a radial gradient.",
  "svg/global_attributes/fy": "The **`fy`** attribute defines the y-axis coordinate of the focal point for a radial gradient.",
  "svg/global_attributes/g1": "The **`g1`** attribute specifies a list of glyph names which identify a set of possible first glyphs in the kerning pair.",
  "svg/global_attributes/g2": "The **`g2`** attribute specifies a list of glyph names which identify a set of possible second glyphs in the kerning pair.",
  "svg/global_attributes/glyph-name": "The **`glyph-name`** attribute specifies the name of a [glyph--](/docs/Glossary/glyph).",
  "svg/global_attributes/glyph-orientation-horizontal": "The **`glyph-orientation-horizontal`** attribute affects the amount that the current text position advances as each [glyph--](/docs/Glossary/glyph) is rendered.",
  "svg/global_attributes/glyph-orientation-vertical": "The **`glyph-orientation-vertical`** attribute affects the amount that the current text position advances as each [glyph--](/docs/Glossary/glyph) is rendered.",
  "svg/global_attributes/gradienttransform": "The `gradientTransform` attribute contains the definition of an optional additional transformation from the gradient coordinate system onto the target coordinate system (i.e., userSpaceOnUse or objectBoundingBox). This allows for things such as skewing the gradient. This additional transformation matrix is post-multiplied to (i.e., inserted to the right of) any previously defined transformations, including the implicit transformation necessary to convert from object bounding box units to user space.",
  "svg/global_attributes/gradientunits": "The **`gradientUnits`** attribute defines the coordinate system used for attributes specified on the gradient elements.",
  "svg/global_attributes/hanging": "The **`hanging`** attribute indicates the alignment coordinate for [glyphs--](/docs/Glossary/glyph) to achieve hanging baseline alignment for horizontally oriented glyph layouts. The value is an offset in the font coordinate system.",
  "svg/global_attributes/height": "The **`height`** attribute defines the vertical length of an element in the user coordinate system.",
  "svg/global_attributes/horiz-adv-x": "The **`horiz-adv-x`** attribute indicates the horizontal advance after rendering a [glyph--](/docs/Glossary/glyph) in horizontal orientation.",
  "svg/global_attributes/horiz-origin-x": "The **`horiz-origin-x`** attribute indicates the x-coordinate in the font coordinate system of the origin of a [glyph--](/docs/Glossary/glyph) to be used when drawing horizontally oriented text.",
  "svg/global_attributes/horiz-origin-y": "The **`horiz-origin-y`** attribute indicates the y-coordinate in the font coordinate system of the origin of a [glyph--](/docs/Glossary/glyph) to be used when drawing horizontally oriented text.",
  "svg/global_attributes/href": "The **`href`** attribute defines a link to a resource as a reference [URL](/en-US/docs/Web/SVG/Content_type#url). The exact meaning of that link depends on the context of each element using it.",
  "svg/global_attributes/id": "The **`id`** attribute assigns a unique name to an element.",
  "svg/global_attributes/ideographic": "The **`ideographic`** attribute indicates the alignment coordinate for [glyphs--](/docs/Glossary/glyphs) to achieve ideographic [baseline--](/docs/Glossary/baseline/typography) alignment for horizontally oriented glyph layouts. The value is an offset in the font coordinate system.",
  "svg/global_attributes/image-rendering": "The **`image-rendering`** attribute provides a hint to the browser about how to make speed vs. quality tradeoffs as it performs image processing.",
  "svg/global_attributes/in": "The **`in`** attribute identifies input for the given filter primitive.",
  "svg/global_attributes/in2": "The **`in2`** attribute identifies the second input for the given filter primitive. It works exactly like the [in--](/docs/Web/SVG/Attribute/in) attribute.",
  "svg/global_attributes/intercept": "The **`intercept`** attribute defines the intercept of the linear function of color component transfers when the [type--](/docs/Web/SVG/Attribute/type) attribute is set to `linear`.",
  "svg/global_attributes/k": "The **`k`** attribute specifies the amount for decreasing the spacing between the two glyphs in a kerning pair.",
  "svg/global_attributes/k1": "The **`k1`** attribute defines one of the values to be used within the `arithmetic` operation of the [feComposite--](/docs/Web/SVG/Element/feComposite) filter primitive.",
  "svg/global_attributes/k2": "The **`k2`** attribute defines one of the values to be used within the `arithmetic` operation of the [feComposite--](/docs/Web/SVG/Element/feComposite) filter primitive.",
  "svg/global_attributes/k3": "The **`k3`** attribute defines one of the values to be used within the `arithmetic` operation of the [feComposite--](/docs/Web/SVG/Element/feComposite) filter primitive.",
  "svg/global_attributes/k4": "The **`k4`** attribute defines one of the values to be used within the `arithmetic` operation of the [feComposite--](/docs/Web/SVG/Element/feComposite) filter primitive.",
  "svg/global_attributes/kernelmatrix": "The **`kernelMatrix`** attribute defines the list of numbers that make up the kernel matrix for the [feConvolveMatrix--](/docs/Web/SVG/Element/feConvolveMatrix) element.",
  "svg/global_attributes/kernelunitlength": "The **`kernelUnitLength`** attribute has two meanings based on the context it's used in. For lighting filter primitives, it indicates the intended distance for the x and y coordinates, for [feConvolveMatrix--](/docs/Web/SVG/Element/feConvolveMatrix), it indicates the intended distance between successive columns and rows in the kernel matrix.",
  "svg/global_attributes/kerning": "The **`kerning`** attribute indicates whether the spacing between [glyphs--](/docs/Glossary/glyph) should be adjusted based on kerning tables that are included in the relevant font (i.e., enable auto-kerning) or instead disable auto-kerning and set the spacing between them to a specific length (typically, zero).",
  "svg/global_attributes/keypoints": "The **`keyPoints`** attribute indicates the simple duration of an animation.",
  "svg/global_attributes/keysplines": "The **`keySplines`** attribute defines a set of [Bézier curve](/en-US/docs/Glossary/Bezier_curve) control points associated with the [keyTimes--](/docs/Web/SVG/Attribute/keyTimes) list, defining a cubic Bézier function that controls interval pacing.",
  "svg/global_attributes/keytimes": "The **`keyTimes`** attribute represents a list of time values used to control the pacing of the animation.",
  "svg/global_attributes/lang": "The **`lang`** attribute specifies the primary language used in contents and attributes containing text content of particular elements.",
  "svg/global_attributes/lengthadjust": "The lengthAdjust attribute controls how the text is stretched into the length defined by the [textLength--](/docs/Web/SVG/Attribute/textLength) attribute.",
  "svg/global_attributes/letter-spacing": "The **`letter-spacing`** attribute controls spacing between text characters, in addition to any spacing from the [kerning--](/docs/Web/SVG/Attribute/kerning) attribute.",
  "svg/global_attributes/lighting-color": "The **`lighting-color`** attribute defines the color of the light source for lighting filter primitives.",
  "svg/global_attributes/limitingconeangle": "The **`limitingConeAngle`** attribute represents the angle in degrees between the spot light axis (i.e. the axis between the light source and the point to which it is pointing at) and the spot light cone. So it defines a limiting cone which restricts the region where the light is projected. No light is projected outside the cone.",
  "svg/global_attributes/marker-end": "The **`marker-end`** attribute defines the arrowhead or polymarker that will be drawn at the final vertex of the given [shape](/en-US/docs/Web/SVG/Element#shape_elements).",
  "svg/global_attributes/marker-mid": "The **`marker-mid`** attribute defines the arrowhead or polymarker that will be drawn at all interior vertices of the given [shape](/en-US/docs/Web/SVG/Element#shape_elements).",
  "svg/global_attributes/marker-start": "The **`marker-start`** attribute defines the arrowhead or polymarker that will be drawn at the first vertex of the given [shape](/en-US/docs/Web/SVG/Element#shape_elements).",
  "svg/global_attributes/markerheight": "The **`markerHeight`** attribute represents the height of the viewport into which the [marker--](/docs/Web/SVG/Element/marker) is to be fitted when it is rendered according to the [viewBox--](/docs/Web/SVG/Attribute/viewBox) and [preserveAspectRatio--](/docs/Web/SVG/Attribute/preserveAspectRatio) attributes.",
  "svg/global_attributes/markerunits": "The **`markerUnits`** attribute defines the coordinate system for the [markerWidth--](/docs/Web/SVG/Attribute/markerWidth) and [markerHeight--](/docs/Web/SVG/Attribute/markerHeight) attributes and the contents of the [marker--](/docs/Web/SVG/Element/marker).",
  "svg/global_attributes/markerwidth": "The **`markerWidth`** attribute represents the width of the viewport into which the [marker--](/docs/Web/SVG/Element/marker) is to be fitted when it is rendered according to the [viewBox--](/docs/Web/SVG/Attribute/viewBox) and [preserveAspectRatio--](/docs/Web/SVG/Attribute/preserveAspectRatio) attributes.",
  "svg/global_attributes/mask": "The **`mask`** attribute is a presentation attribute mainly used to bind a given [mask--](/docs/Web/SVG/Element/mask) element with the element the attribute belongs to.",
  "svg/global_attributes/maskcontentunits": "The **`maskContentUnits`** attribute indicates which coordinate system to use for the contents of the [mask--](/docs/Web/SVG/Element/mask) element.",
  "svg/global_attributes/maskunits": "The **`maskUnits`** attribute indicates which coordinate system to use for the geometry properties of the [mask--](/docs/Web/SVG/Element/mask) element.",
  "svg/global_attributes/mathematical": "The **`mathematical`** attribute indicates the alignment coordinate for [glyphs--](/docs/Glossary/glyph) to achieve mathematical baseline alignment for horizontally oriented glyph layouts. The value is an offset in the font coordinate system.",
  "svg/global_attributes/max": "The **`max`** attribute specifies the maximum value of the active animation duration.",
  "svg/global_attributes/media": "The **`media`** attribute specifies a [media query](/en-US/docs/Web/CSS/CSS_media_queries) that must be matched for a style sheet to apply.",
  "svg/global_attributes/method": "The **`method`** attribute indicates the method by which text should be rendered along the path of a [textPath--](/docs/Web/SVG/Element/textPath) element.",
  "svg/global_attributes/min": "The **`min`** attribute specifies the minimum value of the active animation duration.",
  "svg/global_attributes/mode": "The **`mode`** attribute defines the blending mode on the [feBlend--](/docs/Web/SVG/Element/feBlend) filter primitive.",
  "svg/global_attributes/name": "The **`name`** attribute specifies either the name of a color profile or a font face.",
  "svg/global_attributes/numoctaves": "The **`numOctaves`** attribute defines the number of octaves for the noise function of the [feTurbulence--](/docs/Web/SVG/Element/feTurbulence) primitive.",
  "svg/global_attributes/opacity": "The **`opacity`** attribute specifies the transparency of an object or of a group of objects, that is, the degree to which the background behind the element is overlaid.",
  "svg/global_attributes/operator": "The **`operator`** attribute has two meanings based on the context it's used in. Either it defines the compositing or morphing operation to be performed.",
  "svg/global_attributes/order": "The **`order`** attribute indicates the size of the matrix to be used by a [feConvolveMatrix--](/docs/Web/SVG/Element/feConvolveMatrix) element.",
  "svg/global_attributes/orient": "The **`orient`** attribute indicates how a marker is rotated when it is placed at its position on the shape.",
  "svg/global_attributes/orientation": "The **`orientation`** attribute indicates that the given [glyph--](/docs/Glossary/glyph) is only to be used for a particular text direction, i.e. horizontal or vertical.",
  "svg/global_attributes/origin": "The **`origin`** attribute specifies the origin of motion for an animation. It has no effect in SVG.",
  "svg/global_attributes/overflow": "The **`overflow`** attribute sets what to do when an element's content is too big to fit in its block formatting context. **This feature is not widely implemented yet**.",
  "svg/global_attributes/overline-position": "The `overline-position` attribute represents the ideal vertical position of the overline. The overline position is expressed in the font's coordinate system.",
  "svg/global_attributes/overline-thickness": "The `overline-thickness` attribute represents the ideal thickness of the overline. The overline thickness is expressed in the font's coordinate system.",
  "svg/global_attributes/paint-order": "The **`paint-order`** attribute specifies the order that the fill, stroke, and markers of a given shape or text element are painted.",
  "svg/global_attributes/panose-1": "The **`panose-1`** attribute indicates the Panose-1 number of a font face.",
  "svg/global_attributes/path": "The **`path`** attribute has two different meanings, either it defines a text path along which the characters of a text are rendered, or a motion path along which a referenced element is animated.",
  "svg/global_attributes/pathlength": "The **`pathLength`** attribute lets authors specify a total length for the path, in user units. This value is then used to calibrate the browser's distance calculations with those of the author, by scaling all distance computations using the ratio `pathLength` / (_computed value of path length_).",
  "svg/global_attributes/patterncontentunits": "The **`patternContentUnits`** attribute indicates which coordinate system to use for the contents of the [pattern--](/docs/Web/SVG/Element/pattern) element.",
  "svg/global_attributes/patterntransform": "The **`patternTransform`** attribute defines a list of [transform definitions](/en-US/docs/Web/SVG/Attribute/transform#transform_functions) that are applied to a pattern tile.",
  "svg/global_attributes/patternunits": "The **`patternUnits`** attribute indicates which coordinate system to use for the geometry properties of the [pattern--](/docs/Web/SVG/Element/pattern) element.",
  "svg/global_attributes/pointer-events": "The **`pointer-events`** attribute is a presentation attribute that allows defining whether or when an element may be the target of a mouse event.",
  "svg/global_attributes/points": "The **`points`** attribute defines a list of points. Each point is defined by a pair of number representing a X and a Y coordinate in the user coordinate system. If the attribute contains an odd number of coordinates, the last one will be ignored.",
  "svg/global_attributes/pointsatx": "The **`pointsAtX`** attribute represents the x location in the coordinate system established by attribute [primitiveUnits--](/docs/Web/SVG/Attribute/primitiveUnits) on the [filter--](/docs/Web/SVG/Element/filter) element of the point at which the light source is pointing.",
  "svg/global_attributes/pointsaty": "The **`pointsAtY`** attribute represents the y location in the coordinate system established by attribute [primitiveUnits--](/docs/Web/SVG/Attribute/primitiveUnits) on the [filter--](/docs/Web/SVG/Element/filter) element of the point at which the light source is pointing.",
  "svg/global_attributes/pointsatz": "The **`pointsAtZ`** attribute represents the y location in the coordinate system established by attribute [primitiveUnits--](/docs/Web/SVG/Attribute/primitiveUnits) on the [filter--](/docs/Web/SVG/Element/filter) element of the point at which the light source is pointing, assuming that, in the initial local coordinate system, the positive z-axis comes out towards the person viewing the content and assuming that one unit along the z-axis equals one unit in x and y.",
  "svg/global_attributes/preservealpha": "the `preserveAlpha` attribute indicates how a [feConvolveMatrix--](/docs/Web/SVG/Element/feConvolveMatrix) element handles alpha transparency.",
  "svg/global_attributes/preserveaspectratio": "The **`preserveAspectRatio`** attribute indicates how an element with a viewBox providing a given aspect ratio must fit into a viewport with a different aspect ratio.",
  "svg/global_attributes/primitiveunits": "The **`primitiveUnits`** attribute specifies the coordinate system for the various length values within the filter primitives and for the attributes that define the filter primitive subregion.",
  "svg/global_attributes/r": "The **`r`** attribute defines the radius of a circle.",
  "svg/global_attributes/radius": "The **`radius`** attribute represents the radius (or radii) for the operation on a given [feMorphology--](/docs/Web/SVG/Element/feMorphology) filter primitive.",
  "svg/global_attributes/refx": "The **`refX`** attribute defines the x coordinate of an element's reference point.",
  "svg/global_attributes/refy": "The **`refY`** attribute defines the y coordinate of an element's reference point.",
  "svg/global_attributes/repeatcount": "The **`repeatCount`** attribute indicates the number of times an animation will take place.",
  "svg/global_attributes/repeatdur": "The **`repeatDur`** attribute specifies the total duration for repeating an animation.",
  "svg/global_attributes/requiredfeatures": "The **`requiredFeatures`** attribute takes a list of feature strings, with the individual strings separated by white space. It determines whether or not all of the named features are supported by the browser; if all of them are supported, the attribute evaluates to `true` end the element is rendered; otherwise, the attribute evaluates to `false` and the current element and its children are skipped and thus will not be rendered. This provides a way to design SVG that gracefully falls back when features aren't available.",
  "svg/global_attributes/restart": "The **`restart`** attribute specifies whether or not an animation can restart.",
  "svg/global_attributes/result": "The **`result`** attribute defines the assigned name for this filter primitive. If supplied, then graphics that result from processing this filter primitive can be referenced by an [in--](/docs/Web/SVG/Attribute/in) attribute on a subsequent filter primitive within the same [filter--](/docs/Web/SVG/Element/filter) element. If no value is provided, the output will only be available for re-use as the implicit input into the next filter primitive if that filter primitive provides no value for its `in` attribute.",
  "svg/global_attributes/rotate": "The `rotate` attribute specifies how the animated element rotates as it travels along a path specified in an [animateMotion--](/docs/Web/SVG/Element/animateMotion) element.",
  "svg/global_attributes/rx": "The **`rx`** attribute defines a radius on the x-axis.",
  "svg/global_attributes/ry": "The **`ry`** attribute defines a radius on the y-axis.",
  "svg/global_attributes/scale": "The **`scale`** attribute defines the displacement scale factor to be used on a [feDisplacementMap--](/docs/Web/SVG/Element/feDisplacementMap) filter primitive. The amount is expressed in the coordinate system established by the [primitiveUnits--](/docs/Web/SVG/Attribute/primitiveUnits) attribute on the [filter--](/docs/Web/SVG/Element/filter) element.",
  "svg/global_attributes/seed": "The **`seed`** attribute represents the starting number for the pseudo random number generator of the [feTurbulence--](/docs/Web/SVG/Element/feTurbulence) filter primitive.",
  "svg/global_attributes/shape-rendering": "The **`shape-rendering`** attribute provides hints to the renderer about what tradeoffs to make when rendering shapes like paths, circles, or rectangles.",
  "svg/global_attributes/side": "The **`side`** attribute determines the side of a path the text is placed on (relative to the path direction).",
  "svg/global_attributes/slope": "The **`slope`** attribute indicates the vertical stroke angle of a font.",
  "svg/global_attributes/spacing": "The **`spacing`** attribute indicates how the user agent should determine the spacing between typographic characters that are to be rendered along a path.",
  "svg/global_attributes/specularconstant": "The **`specularConstant`** attribute controls the ratio of reflection of the specular lighting. It represents the k<sub>s</sub> value in [the Phong lighting model](https://en.wikipedia.org/wiki/Phong_reflection_model). The bigger the value the stronger the reflection.",
  "svg/global_attributes/specularexponent": "The **`specularExponent`** attribute controls the focus for the light source. The bigger the value the brighter the light.",
  "svg/global_attributes/spreadmethod": "The **`spreadMethod`** attribute determines how a shape is filled beyond the defined edges of a gradient.",
  "svg/global_attributes/startoffset": "The **`startOffset`** attribute defines an offset from the start of the path for the initial current text position along the path after converting the path to the [textPath--](/docs/Web/SVG/Element/textPath) element's coordinate system.",
  "svg/global_attributes/stddeviation": "The **`stdDeviation`** attribute defines the standard deviation for the blur operation.",
  "svg/global_attributes/stemh": "The **`stemh`** attribute indicates the horizontal stem width of the font.",
  "svg/global_attributes/stemv": "The **`stemv`** attribute indicates the vertical stem width of the font.",
  "svg/global_attributes/stitchtiles": "The **`stitchTiles`** attribute defines how the Perlin Noise tiles behave at the border.",
  "svg/global_attributes/stop-color": "The **`stop-color`** attribute indicates what color to use at a gradient stop.",
  "svg/global_attributes/stop-opacity": "The **`stop-opacity`** attribute defines the opacity of a given color gradient stop.",
  "svg/global_attributes/strikethrough-position": "The `strikethrough-position` attribute represents the ideal vertical position of the strikethrough. The strikethrough position is expressed in the font's coordinate system.",
  "svg/global_attributes/strikethrough-thickness": "The `strikethrough-thickness` attribute represents the ideal thickness of the strikethrough. The strikethrough thickness is expressed in the font's coordinate system.",
  "svg/global_attributes/string": "The **`string`** attribute is a hint to the user agent, and specifies a list of formats that the font referenced by the parent [font-face-uri--](/docs/Web/SVG/Element/font-face-uri) element supports.",
  "svg/global_attributes/stroke": "The **`stroke`** attribute is a presentation attribute defining the color (_or any SVG paint servers like gradients or patterns_) used to paint the outline of the shape;",
  "svg/global_attributes/stroke-dasharray": "The **`stroke-dasharray`** attribute is a presentation attribute defining the pattern of dashes and gaps used to paint the outline of the shape;",
  "svg/global_attributes/stroke-dashoffset": "The **`stroke-dashoffset`** attribute is a presentation attribute defining an offset on the rendering of the associated dash array.",
  "svg/global_attributes/stroke-linecap": "The **`stroke-linecap`** attribute is a presentation attribute defining the shape to be used at the end of open subpaths when they are stroked.",
  "svg/global_attributes/stroke-linejoin": "The **`stroke-linejoin`** attribute is a presentation attribute defining the shape to be used at the corners of paths when they are stroked.",
  "svg/global_attributes/stroke-miterlimit": "The **`stroke-miterlimit`** attribute is a presentation attribute defining a limit on the ratio of the miter length to the [stroke-width--](/docs/Web/SVG/Attribute/stroke-width) used to draw a miter join. When the limit is exceeded, the join is converted from a miter to a bevel.",
  "svg/global_attributes/stroke-opacity": "The **`stroke-opacity`** attribute is a presentation attribute defining the opacity of the paint server (_color_, _gradient_, _pattern_, etc.) applied to the stroke of a shape.",
  "svg/global_attributes/stroke-width": "The **`stroke-width`** attribute is a presentation attribute defining the width of the stroke to be applied to the shape.",
  "svg/global_attributes/style": "The **`style`** attribute allows to style an element using [CSS--](/docs/Glossary/CSS) declarations. It functions identically to [the `style` attribute in HTML](/en-US/docs/Web/HTML/Global_attributes/style).",
  "svg/global_attributes/surfacescale": "The **`surfaceScale`** attribute represents the height of the surface for a light filter primitive.",
  "svg/global_attributes/systemlanguage": "The **`systemLanguage`** attribute represents a list of supported language tags. This list is matched against the language defined in the user preferences.",
  "svg/global_attributes/tabindex": "The **`tabindex`** attribute allows you to control whether an element is focusable and to define the relative order of the element for the purposes of sequential focus navigation.",
  "svg/global_attributes/tablevalues": "The **`tableValues`** attribute defines a list of numbers defining a lookup table of values for a color component transfer function.",
  "svg/global_attributes/target": "The **`target`** attribute should be used when there are multiple possible targets for the ending resource, such as when the parent document is embedded within an HTML or XHTML document, or is viewed with a tabbed browser. This attribute specifies the name of the browsing context (e.g., a browser tab or an (X)HTML iframe or object element) into which a document is to be opened when the link is activated:",
  "svg/global_attributes/targetx": "The **`targetX`** attribute determines the positioning in horizontal direction of the convolution matrix relative to a given target pixel in the input image. The leftmost column of the matrix is column number zero. The value must be such that: `0` <= `targetX` < [order--](/docs/Web/SVG/Attribute/order) `X`.",
  "svg/global_attributes/targety": "The **`targetY`** attribute determines the positioning in vertical direction of the convolution matrix relative to a given target pixel in the input image. The topmost row of the matrix is row number zero. The value must be such that: `0` <= `targetY` < [order--](/docs/Web/SVG/Attribute/order) `Y`.",
  "svg/global_attributes/text-anchor": "The **`text-anchor`** attribute is used to align (start-, middle- or end-alignment) a string of pre-formatted text or auto-wrapped text where the wrapping area is determined from the [inline-size--](/docs/Web/CSS/inline-size) property relative to a given point.",
  "svg/global_attributes/text-decoration": "The **`text-decoration`** attribute defines whether text is decorated with an underline, overline and/or strike-through. It is a shorthand for the [text-decoration-line--](/docs/Web/CSS/text-decoration-line) and [text-decoration-style--](/docs/Web/CSS/text-decoration-style) properties.",
  "svg/global_attributes/text-rendering": "The **`text-rendering`** attribute provides hints to the renderer about what tradeoffs to make when rendering text.",
  "svg/global_attributes/textlength": "The **`textLength`** attribute, available on SVG [text--](/docs/Web/SVG/Element/text) and [tspan--](/docs/Web/SVG/Element/tspan) elements, lets you specify the width of the space into which the text will draw. The [user agent--](/docs/Glossary/user_agent) will ensure that the text does not extend farther than that distance, using the method or methods specified by the [lengthAdjust--](/docs/Web/SVG/Attribute/lengthAdjust) attribute. By default, only the spacing between characters is adjusted, but the glyph size can also be adjusted if you change `lengthAdjust`.",
  "svg/global_attributes/to": "The **`to`** attribute indicates the final value of the attribute that will be modified during the animation.",
  "svg/global_attributes/transform": "The **`transform`** attribute defines a list of transform definitions that are applied to an element and the element's children.",
  "svg/global_attributes/transform-origin": "The **`transform-origin`** SVG attribute sets the origin for an item's transformations.",
  "svg/global_attributes/type": "The `type` attribute is a generic attribute and it has different meaning based on the context in which it's used.",
  "svg/global_attributes/u1": "The **`u1`** attribute specifies list of [Unicode--](/docs/Glossary/Unicode) characters (refer to the description of the [unicode--](/docs/Web/SVG/Attribute/unicode) attribute of the [glyph--](/docs/Web/SVG/Element/glyph) element for a description of how to express individual Unicode characters) and/or ranges of Unicode characters, which identify a set of possible first [glyph--](/docs/Glossary/glyph) in a kerning pair.",
  "svg/global_attributes/u2": "The **`u2`** attribute specifies list of [Unicode--](/docs/Glossary/Unicode) characters (refer to the description of the [unicode--](/docs/Web/SVG/Attribute/unicode) attribute of the [glyph--](/docs/Web/SVG/Element/glyph) element for a description of how to express individual Unicode characters) and/or ranges of Unicode characters, which identify a set of possible second [glyph--](/docs/Glossary/glyph) in a kerning pair.",
  "svg/global_attributes/underline-position": "The `underline-position` attribute represents the ideal vertical position of the underline. The underline position is expressed in the font's coordinate system.",
  "svg/global_attributes/underline-thickness": "The `underline-thickness` attribute represents the ideal thickness of the underline. The underline thickness is expressed in the font's coordinate system.",
  "svg/global_attributes/unicode": "The **`unicode`** attribute specifies one or more [Unicode--](/docs/Glossary/Unicode) characters indicating the sequence of Unicode characters which corresponds to a [glyph--](/docs/Glossary/glyph).",
  "svg/global_attributes/unicode-bidi": "The **`unicode-bidi`** attribute specifies how the accumulation of the background image is managed.",
  "svg/global_attributes/unicode-range": "The **`unicode-range`** attribute defines the range of [ISO 10646](https://www.iso.org/standard/56921.html) characters possibly covered by the glyphs in a font.",
  "svg/global_attributes/units-per-em": "The **`units-per-em`** attribute specifies the number of coordinate units on the \"em square\", an abstract square whose height is the intended distance between lines of type in the same type size. This is the size of the design grid on which [glyphs--](/docs/Glossary/glyph) are laid out.",
  "svg/global_attributes/v-alphabetic": "The **`v-alphabetic`** attribute defines indicates the alignment coordinate for [glyphs--](/docs/Glossary/glyphs) to achieve alphabetic baseline alignment. The value is an offset in the font coordinate system relative to the glyph-specific [vert-origin-x--](/docs/Web/SVG/Attribute/vert-origin-x) attribute.",
  "svg/global_attributes/v-hanging": "The **`v-hanging`** attribute indicates the alignment coordinate for [glyphs--](/docs/Glossary/glyph) to achieve hanging [baseline--](/docs/Glossary/baseline/typography) alignment. The value is an offset in the font coordinate system relative to the glyph-specific [vert-origin-x--](/docs/Web/SVG/Attribute/vert-origin-x) attribute.",
  "svg/global_attributes/v-ideographic": "The **`v-ideographic`** attribute indicates the alignment coordinate for [glyphs--](/docs/Glossary/glyphs) to achieve ideographic [baseline--](/docs/Glossary/baseline/typography) alignment for vertically oriented glyph layouts. The value is an offset in the font coordinate system relative to the glyph-specific [vert-origin-x--](/docs/Web/SVG/Attribute/vert-origin-x) attribute.",
  "svg/global_attributes/v-mathematical": "The **`v-mathematical`** attribute indicates the alignment coordinate for [glyphs--](/docs/Glossary/glyph) to achieve mathematical baseline alignment for vertically oriented glyph layouts. The value is an offset in the font coordinate system relative to the glyph-specific [vert-origin-x--](/docs/Web/SVG/Attribute/vert-origin-x) attribute.",
  "svg/global_attributes/values": "The `values` attribute has different meanings, depending upon the context where it's used, either it defines a sequence of values used over the course of an animation, or it's a list of numbers for a color matrix, which is interpreted differently depending on the type of color change to be performed.",
  "svg/global_attributes/vector-effect": "The **`vector-effect`** property specifies the vector effect to use when drawing an object. Vector effects are applied before any of the other compositing operations, i.e. filters, masks and clips.",
  "svg/global_attributes/version": "The **`version`** attribute is used to indicate what specification a SVG document conforms to. It is only allowed on the root [svg--](/docs/Web/SVG/Element/svg) element. It is purely advisory and has no influence on rendering or processing.",
  "svg/global_attributes/vert-adv-y": "The **`vert-adv-y`** attribute indicates the vertical advance after rendering a [glyph--](/docs/Glossary/glyph) in vertical orientation.",
  "svg/global_attributes/vert-origin-x": "The **`vert-origin-x`** attribute indicates the x-coordinate in the font coordinate system of the origin of a [glyph--](/docs/Glossary/glyph) to be used when drawing vertically oriented text.",
  "svg/global_attributes/vert-origin-y": "The **`vert-origin-y`** attribute indicates the y-coordinate in the font coordinate system of the origin of a [glyph--](/docs/Glossary/glyph) to be used when drawing vertically oriented text.",
  "svg/global_attributes/viewbox": "The **`viewBox`** attribute defines the position and dimension, in user space, of an SVG viewport.",
  "svg/global_attributes/visibility": "The **`visibility`** attribute lets you control the visibility of graphical elements. With a value of `hidden` or `collapse` the current graphics element is invisible.",
  "svg/global_attributes/width": "The **`width`** attribute defines the horizontal length of an element in the user coordinate system.",
  "svg/global_attributes/widths": "The **`widths`** attribute indicates a list of range values, each followed by one or more [glyph--](/docs/Glossary/glyph) widths.",
  "svg/global_attributes/word-spacing": "The **`word-spacing`** attribute specifies spacing behavior between words.",
  "svg/global_attributes/writing-mode": "The **`writing-mode`** attribute specifies whether the initial inline-progression-direction for a [text--](/docs/Web/SVG/Element/text) element shall be left-to-right, right-to-left, or top-to-bottom. The `writing-mode` attribute applies only to [text--](/docs/Web/SVG/Element/text) elements; the attribute is ignored for [tspan--](/docs/Web/SVG/Element/tspan), [tref--](/docs/Web/SVG/Element/tref), and [textPath--](/docs/Web/SVG/Element/textPath) sub-elements. (Note that the inline-progression-direction can change within a [text--](/docs/Web/SVG/Element/text) element due to the Unicode bidirectional algorithm and properties [direction--](/docs/Web/SVG/Attribute/direction) and [unicode-bidi--](/docs/Web/SVG/Attribute/unicode-bidi).)",
  "svg/global_attributes/x": "The **`x`** attribute defines an x-axis coordinate in the user coordinate system.",
  "svg/global_attributes/x-height": "The **`x-height`** attribute indicates the height of lowercase glyphs in the font within the font coordinate system.",
  "svg/global_attributes/x1": "The **`x1`** attribute is used to specify the first x-coordinate for drawing an SVG element that requires more than one coordinate. Elements that only need one coordinate use the [x--](/docs/Web/SVG/Attribute/x) attribute instead.",
  "svg/global_attributes/x2": "The **`x2`** attribute is used to specify the second x-coordinate for drawing an SVG element that requires more than one coordinate. Elements that only need one coordinate use the [x--](/docs/Web/SVG/Attribute/x) attribute instead.",
  "svg/global_attributes/xchannelselector": "The **`xChannelSelector`** attribute indicates which color channel from [in2--](/docs/Web/SVG/Attribute/in2) to use to displace the pixels in [in--](/docs/Web/SVG/Attribute/in) along the x-axis.",
  "svg/global_attributes/xlinkarcrole": "The **`xlink:arcrole`** attribute specifies a contextual role for the element and corresponds to the [RDF Primer](https://www.w3.org/TR/rdf-primer/) notion of a property.",
  "svg/global_attributes/xlinkhref": "The **`xlink:href`** attribute defines a reference to a resource as a reference [IRI](/en-US/docs/Web/SVG/Content_type#iri). The exact meaning of that link depends on the context of each element using it.",
  "svg/global_attributes/xlinkshow": "The **`xlink:show`** attribute indicates how a linked resource should be opened and is meant for [XLink--](/docs/Glossary/XLink)-aware processors. In case of a conflict, the [target--](/docs/Web/SVG/Attribute/target) attribute has priority, since it can express a wider range of values.",
  "svg/global_attributes/xlinktitle": "The **`xlink:title`** attribute is used to describe the meaning of a link or resource in a human-readable fashion.",
  "svg/global_attributes/xlinktype": "The **`xlink:type`** attribute identifies the type of [XLink--](/docs/Glossary/XLink) being used. In SVG, only simple links are available.",
  "svg/global_attributes/xmlbase": "The **`xml:base`** attribute specifies a base [IRI--](/docs/Glossary/IRI) other than the base IRI of the document or external entity.",
  "svg/global_attributes/xmllang": "The **`xml:lang`** attribute specifies the primary language used in contents and attributes containing text content of particular elements.",
  "svg/global_attributes/xmlspace": "SVG supports the built-in XML **`xml:space`** attribute to handle whitespace characters inside elements. Child elements inside an element may also have an `xml:space` attribute that overrides the parent's one.",
  "svg/global_attributes/y": "The **`y`** attribute defines a y-axis coordinate in the user coordinate system.",
  "svg/global_attributes/y1": "The **`y1`** attribute is used to specify the first y-coordinate for drawing an SVG element that requires more than one coordinate. Elements that only need one coordinate use the [y--](/docs/Web/SVG/Attribute/y) attribute instead.",
  "svg/global_attributes/y2": "The **`y2`** attribute is used to specify the second y-coordinate for drawing an SVG element that requires more than one coordinate. Elements that only need one coordinate use the [y--](/docs/Web/SVG/Attribute/y) attribute instead.",
  "svg/global_attributes/ychannelselector": "The **`yChannelSelector`** attribute indicates which color channel from [in2--](/docs/Web/SVG/Attribute/in2) to use to displace the pixels in [in--](/docs/Web/SVG/Attribute/in) along the y-axis.",
  "svg/global_attributes/z": "The **`z`** attribute defines the location along the z-axis for a light source in the coordinate system established by the [primitiveUnits--](/docs/Web/SVG/Attribute/primitiveUnits) attribute on the [filter--](/docs/Web/SVG/Element/filter) element, assuming that, in the initial coordinate system, the positive z-axis comes out towards the person viewing the content and assuming that one unit along the z-axis equals one unit in x and y.",
  "svg/global_attributes/zoomandpan": "The **`zoomAndPan`** attribute specifies whether the SVG document can be magnified and panned.",
  "css/--_star_": "Property names that are prefixed with `--`, like `--example-name`, represent _custom properties_ that contain a value that can be used in other declarations using the [var()--](/docs/Web/CSS/var) function.",
  "css/-moz-float-edge": "The non-standard **`-moz-float-edge`** [CSS](/en-US/docs/Web/CSS) property specifies whether the height and width properties of the element include the margin, border, or padding thickness.",
  "css/-moz-force-broken-image-icon": "The **`-moz-force-broken-image-icon`** extended CSS property can be used to force the broken image icon to be shown even when a broken image has an `alt` attribute.",
  "css/-moz-image-rect": "The **`-moz-image-rect`** value for [CSS](/en-US/docs/Web/CSS) [background-image--](/docs/Web/CSS/background-image) lets you use a portion of a larger image as a background.",
  "css/-moz-image-region": "For certain XUL elements and pseudo-elements that use an image from the [list-style-image--](/docs/Web/CSS/list-style-image) property, this property specifies a region of the image that is used in place of the whole image. This allows elements to use different pieces of the same image to improve performance.",
  "css/-moz-orient": "The **`-moz-orient`** [CSS](/en-US/docs/Web/CSS) property specifies the orientation of the element to which it's applied.",
  "css/-moz-user-focus": "The **`-moz-user-focus`** [CSS](/en-US/docs/Web/CSS) property is used to indicate whether an element can have the focus.",
  "css/-moz-user-input": "In Mozilla applications, **`-moz-user-input`** determines if an element will accept user input.",
  "css/-webkit-border-before": "The **`-webkit-border-before`** [CSS](/en-US/docs/Web/CSS) property is a shorthand property for setting the individual logical block start border property values in a single place in the style sheet.",
  "css/-webkit-box-reflect": "The **`-webkit-box-reflect`** [CSS](/en-US/docs/Web/CSS) property lets you reflect the content of an element in one specific direction.",
  "css/-webkit-line-clamp": "The **`-webkit-line-clamp`** CSS property allows limiting of the contents of a [block--](/docs/Glossary/block) to the specified number of lines.",
  "css/-webkit-mask-box-image": "The non-standard prefixed **`-webkit-mask-box-image`** [shorthand](/en-US/docs/Web/CSS/Shorthand_properties) property sets the mask image for an element's border box.",
  "css/-webkit-mask-composite": "The **`-webkit-mask-composite`** property specifies the manner in which multiple mask images applied to the same element are composited with one another. Mask images are composited in the opposite order that they are declared with the [-webkit-mask-image--](/docs/Web/CSS/mask-image) property.",
  "css/-webkit-mask-position-x": "The `-webkit-mask-position-x` CSS property sets the initial horizontal position of a mask image.",
  "css/-webkit-mask-position-y": "The `-webkit-mask-position-y` CSS property sets the initial vertical position of a mask image.",
  "css/-webkit-mask-repeat-x": "The `-webkit-mask-repeat-x` property specifies whether and how a mask image is repeated (tiled) horizontally.",
  "css/-webkit-mask-repeat-y": "The `-webkit-mask-repeat-y` property sets whether and how a mask image is repeated (tiled) vertically.",
  "css/-webkit-overflow-scrolling": "The `-webkit-overflow-scrolling` [CSS](/en-US/docs/Web/CSS) property controls whether or not touch devices use momentum-based scrolling for a given element.",
  "css/-webkit-tap-highlight-color": "**`-webkit-tap-highlight-color`** is a non-standard CSS property that sets the color of the highlight that appears over a link while it's being tapped. The highlighting indicates to the user that their tap is being successfully recognized, and indicates which element they're tapping on.",
  "css/-webkit-text-fill-color": "The **`-webkit-text-fill-color`** CSS property specifies the fill [color](/en-US/docs/Web/CSS/color_value) of characters of text. If this property is not set, the value of the [color--](/docs/Web/CSS/color) property is used.",
  "css/-webkit-text-security": "**`-webkit-text-security`** is a non-standard CSS property that obfuscates characters in a [form--](/docs/Web/HTML/Element/form) field (such as [input--](/docs/Web/HTML/Element/input) or [textarea--](/docs/Web/HTML/Element/textarea)) by replacing them with a shape. It only affects fields that are _not_ of `type=password`.",
  "css/-webkit-text-stroke": "The **`-webkit-text-stroke`** [CSS](/en-US/docs/Web/CSS) property specifies the [width](/en-US/docs/Web/CSS/length) and [color](/en-US/docs/Web/CSS/color_value) of strokes for text characters. This is a shorthand property for the longhand properties [-webkit-text-stroke-width--](/docs/Web/CSS/-webkit-text-stroke-width) and [-webkit-text-stroke-color--](/docs/Web/CSS/-webkit-text-stroke-color).",
  "css/-webkit-text-stroke-color": "The **`-webkit-text-stroke-color`** CSS property specifies the stroke [color](/en-US/docs/Web/CSS/color_value) of characters of text. If this property is not set, the value of the [color--](/docs/Web/CSS/color) property is used.",
  "css/-webkit-text-stroke-width": "The **`-webkit-text-stroke-width`** [CSS](/en-US/docs/Web/CSS) property specifies the width of the stroke for text.",
  "css/-webkit-touch-callout": "The `-webkit-touch-callout` [CSS](/en-US/docs/Web/CSS) property controls the display of the default callout shown when you touch and hold a touch target.",
  "css/@charset": "The **`@charset`** [CSS](/en-US/docs/Web/CSS) rule specifies the character encoding used in the style sheet. Although the first character in `@charset` is the `@` symbol, it is not an [at-rule](/en-US/docs/Web/CSS/At-rule). The [CSS syntax](/en-US/docs/Web/CSS/CSS_syntax) module deprecates this rule, defining it as an unrecognized legacy rule to be dropped when a stylesheet is grammar-checked, but it is [fully supported in all browsers](#browser_compatibility).",
  "css/@color-profile": "The **`@color-profile`** [CSS](/en-US/docs/Web/CSS) [at-rule](/en-US/docs/Web/CSS/At-rule) defines and names a color profile which can later be used in the [color()--](/docs/Web/CSS/color_value/color) function to specify a color.",
  "css/@container": "The **`@container`** [CSS](/en-US/docs/Web/CSS) [at-rule](/en-US/docs/Web/CSS/At-rule) is a conditional group rule that applies styles to a [containment context](/en-US/docs/Web/CSS/CSS_containment/Container_queries#naming_containment_contexts).\nStyle declarations are filtered by a condition and applied to the container if the condition is true.\nThe condition is evaluated when the container size or [`<style-feature>`](#container_style_queries) value changes.",
  "css/@counter-style": "The **`@counter-style`** [CSS](/en-US/docs/Web/CSS) [at-rule](/en-US/docs/Web/CSS/At-rule) lets you extend predefined list styles and define your own counter styles that are not part of the predefined set of styles. The `@counter-style` rule contains [descriptors](#descriptors) defining how the counter value is converted into a string representation.",
  "css/@document": "The **`@document`** [CSS](/en-US/docs/Web/CSS) [at-rule](/en-US/docs/Web/CSS/At-rule) restricts the style rules contained within it based on the URL of the document. It is designed primarily for user-defined style sheets, though it can be used on author-defined style sheets, too.",
  "css/@font-face": "The **`@font-face`** [CSS](/en-US/docs/Web/CSS) [at-rule](/en-US/docs/Web/CSS/At-rule) specifies a custom font with which to display text; the font can be loaded from either a remote server or a locally-installed font on the user's own computer.",
  "css/@font-feature-values": "The **`@font-feature-values`** [CSS](/en-US/docs/Web/CSS) [at-rule](/en-US/docs/Web/CSS/At-rule) lets you use a common name in the [font-variant-alternates--](/docs/Web/CSS/font-variant-alternates) property for features activated differently in OpenType. This can help simplify your CSS when using multiple fonts.",
  "css/@font-palette-values": "The **`@font-palette-values`** [CSS](/en-US/docs/Web/CSS) [at-rule](/en-US/docs/Web/CSS/At-rule) allows you to customize the default values of [font-palette](/en-US/docs/Web/CSS/font-palette) created by the font-maker.",
  "css/@import": "The **`@import`** [CSS](/en-US/docs/Web/CSS) [at-rule](/en-US/docs/Web/CSS/At-rule) is used to import style rules from other valid stylesheets.\nAn `@import` rule _must_ be defined at the top of the stylesheet, before any other at-rule (except [@charset](/en-US/docs/Web/CSS/@charset) and [@layer](/en-US/docs/Web/CSS/@layer)) and style declarations, or it will be ignored.",
  "css/@keyframes": "The **`@keyframes`** CSS [at-rule](/en-US/docs/Web/CSS/At-rule) controls the intermediate steps in a CSS animation sequence by defining styles for keyframes (or waypoints) along the animation sequence. This gives more control over the intermediate steps of the animation sequence than [transitions](/en-US/docs/Web/CSS/CSS_transitions).",
  "css/@layer": "The **`@layer`** [CSS](/en-US/docs/Web/CSS) [at-rule](/en-US/docs/Web/CSS/At-rule) is used to declare a cascade layer and can also be used to define the order of precedence in case of multiple cascade layers.",
  "css/@media": "The **`@media`** [CSS](/en-US/docs/Web/CSS) [at-rule](/en-US/docs/Web/CSS/At-rule) can be used to apply part of a style sheet based on the result of one or more [media queries](/en-US/docs/Web/CSS/CSS_media_queries/Using_media_queries). With it, you specify a media query and a block of CSS to apply to the document if and only if the media query matches the device on which the content is being used.",
  "css/@namespace": "**`@namespace`** is an [at-rule](/en-US/docs/Web/CSS/At-rule) that defines XML [namespaces](/en-US/docs/Glossary/Namespace) to be used in a [CSS](/en-US/docs/Glossary/CSS) [style sheet](/en-US/docs/Web/API/StyleSheet).",
  "css/@page": "The **`@page`** at-rule is a CSS at-rule used to modify different aspects of printed pages. It targets and modifies the page's dimensions, orientation, and margins. The `@page` at-rule can be used to target all pages in a print-out or a subset using its various pseudo-classes.",
  "css/@property": "The **`@property`** [CSS](/en-US/docs/Web/CSS) [at-rule](/en-US/docs/Web/CSS/At-rule) is part of the [CSS Houdini](/en-US/docs/Web/API/Houdini_APIs) umbrella of APIs. It allows developers to explicitly define their [CSS custom properties--](/docs/Web/CSS/--*), allowing for property type checking and constraining, setting default values, and defining whether a custom property can inherit values or not.",
  "css/@scope": "The **`@scope`** [CSS](/en-US/docs/Web/CSS) [at-rule](/en-US/docs/Web/CSS/At-rule) enables you to select elements in specific DOM subtrees, targeting elements precisely without writing overly-specific selectors that are hard to override, and without coupling your selectors too tightly to the DOM structure.",
  "css/@starting-style": "The **`@starting-style`** [CSS](/en-US/docs/Web/CSS) [at-rule](/en-US/docs/Web/CSS/At-rule) is used to define starting values for properties set on an element that you want to transition from when the element receives its first style update, i.e. when an element is first displayed on a previously loaded page.",
  "css/@supports": "The **`@supports`** [CSS](/en-US/docs/Web/CSS) [at-rule](/en-US/docs/Web/CSS/At-rule) lets you specify CSS declarations that depend on a browser's support for CSS features.\nUsing this at-rule is commonly called a _feature query_.\nThe rule must be placed at the top level of your code or nested inside any other [conditional group at-rule](/en-US/docs/Web/CSS/At-rule#conditional_group_rules).",
  "css/-moz-broken": "The **`:-moz-broken`** [CSS](/en-US/docs/Web/CSS) [pseudo-class](/en-US/docs/Web/CSS/Pseudo-classes) is a [Mozilla extension](/en-US/docs/Web/CSS/Mozilla_Extensions) that matches elements representing broken image links.",
  "css/-moz-drag-over": "The **`:-moz-drag-over`** [CSS](/en-US/docs/Web/CSS) [pseudo-class](/en-US/docs/Web/CSS/Pseudo-classes) is a [Mozilla extension](/en-US/docs/Web/CSS/Mozilla_Extensions) that matches an element when a [dragover--](/docs/Web/API/HTMLElement/dragover_event) event is called on it.",
  "css/-moz-first-node": "The **`:-moz-first-node`** [CSS](/en-US/docs/Web/CSS) [pseudo-class](/en-US/docs/Web/CSS/Pseudo-classes) is a [Mozilla extension](/en-US/docs/Web/CSS/Mozilla_Extensions) that represents any element that is the first child node of some other element. It differs from [:first-child--](/docs/Web/CSS/:first-child) because it does not match a first-child element with (non-whitespace) text before it.",
  "css/-moz-handler-blocked": "The **`:-moz-handler-blocked`** [CSS](/en-US/docs/Web/CSS) [pseudo-class](/en-US/docs/Web/CSS/Pseudo-classes) is a [Mozilla extension](/en-US/docs/Web/CSS/Mozilla_Extensions) that matches elements that can't be displayed because their handlers have been blocked.",
  "css/-moz-handler-crashed": "The **`:-moz-handler-crashed`** [CSS](/en-US/docs/Web/CSS) [pseudo-class](/en-US/docs/Web/CSS/Pseudo-classes) is a [Mozilla extension](/en-US/docs/Web/CSS/Mozilla_Extensions) that matches elements that can't be displayed because the plugin responsible for drawing them has crashed.",
  "css/-moz-handler-disabled": "The **`:-moz-handler-disabled`** [CSS](/en-US/docs/Web/CSS) [pseudo-class](/en-US/docs/Web/CSS/Pseudo-classes) is a [Mozilla extension](/en-US/docs/Web/CSS/Mozilla_Extensions) that matches elements that can't be displayed because their handlers have been disabled by the user.",
  "css/-moz-last-node": "The **`:-moz-last-node`** [CSS](/en-US/docs/Web/CSS) [pseudo-class](/en-US/docs/Web/CSS/Pseudo-classes) is a [Mozilla extension](/en-US/docs/Web/CSS/Mozilla_Extensions) that represents any element that is the last child node of some other element. It differs from [:last-child--](/docs/Web/CSS/:last-child) because it does not match a last-child element with (non-whitespace) text after it.",
  "css/-moz-loading": "The **`:-moz-loading`** [CSS](/en-US/docs/Web/CSS) [pseudo-class](/en-US/docs/Web/CSS/Pseudo-classes) is a [Mozilla extension](/en-US/docs/Web/CSS/Mozilla_Extensions) that matches elements that can't be displayed because they have not started loading, such as images that haven't started to arrive yet. Note that images that are _in the process_ of loading _are not_ matched by this pseudo-class.",
  "css/-moz-locale-dir_ltr": "The **`:-moz-locale-dir(ltr)`** [CSS](/en-US/docs/Web/CSS) [pseudo-class](/en-US/docs/Web/CSS/Pseudo-classes) is a [Mozilla extension](/en-US/docs/Web/CSS/Mozilla_Extensions) that matches an element if the user interface is being displayed left-to-right. This is determined by the preference `intl.uidirection.locale` (where `locale` is the current locale) being set to \"ltr\".",
  "css/-moz-locale-dir_rtl": "The **`:-moz-locale-dir(rtl)`** [CSS](/en-US/docs/Web/CSS) [pseudo-class](/en-US/docs/Web/CSS/Pseudo-classes) is a [Mozilla extension](/en-US/docs/Web/CSS/Mozilla_Extensions) that matches an element if the user interface is being displayed right-to-left. This is determined by the preference `intl.uidirection.locale` (where `locale` is the current locale) being set to \"rtl\".",
  "css/-moz-only-whitespace": "The **`:-moz-only-whitespace`** [CSS](/en-US/docs/Web/CSS) [pseudo-class](/en-US/docs/Web/CSS/Pseudo-classes) matches elements that only contain text nodes that only contain [whitespace--](/docs/Glossary/whitespace). (This includes elements with empty text nodes and elements with no child nodes.)",
  "css/-moz-submit-invalid": "The **`:-moz-submit-invalid`** CSS [pseudo-class](/en-US/docs/Web/CSS/Pseudo-classes) is a [Mozilla extension](/en-US/docs/Web/CSS/Mozilla_Extensions) that represents any submit [button--](/docs/Web/HTML/Element/button) on forms whose contents aren't valid based on their [validation constraints](/en-US/docs/Learn/Forms#constraint_validation).",
  "css/-moz-suppressed": "The **`:-moz-suppressed`** [CSS](/en-US/docs/Web/CSS) [pseudo-class](/en-US/docs/Web/CSS/Pseudo-classes) is a [Mozilla extension](/en-US/docs/Web/CSS/Mozilla_Extensions) that matches elements representing images that were suppressed because loading images from the specified site has been blocked.",
  "css/-moz-user-disabled": "The **`:-moz-user-disabled`** [CSS](/en-US/docs/Web/CSS) [pseudo-class](/en-US/docs/Web/CSS/Pseudo-classes) is a [Mozilla extension](/en-US/docs/Web/CSS/Mozilla_Extensions) that matches elements representing images that were not loaded because images have been entirely disabled by the user's preferences.",
  "css/-moz-window-inactive": "The **`:-moz-window-inactive`** [CSS](/en-US/docs/Web/CSS) [pseudo-class](/en-US/docs/Web/CSS/Pseudo-classes) is a [Mozilla extension](/en-US/docs/Web/CSS/Mozilla_Extensions) that matches any element while it's in an inactive window.",
  "css/active": "The **`:active`** [CSS](/en-US/docs/Web/CSS) [pseudo-class](/en-US/docs/Web/CSS/Pseudo-classes) represents an element (such as a button) that is being activated by the user. When using a mouse, \"activation\" typically starts when the user presses down the primary mouse button.",
  "css/any-link": "The **`:any-link`** [CSS](/en-US/docs/Web/CSS) [pseudo-class](/en-US/docs/Web/CSS/Pseudo-classes) selector represents an element that acts as the source anchor of a hyperlink, independent of whether it has been visited. In other words, it matches every [a--](/docs/Web/HTML/Element/a) or [area--](/docs/Web/HTML/Element/area) element that has an `href` attribute. Thus, it matches all elements that match [:link--](/docs/Web/CSS/:link) or [:visited--](/docs/Web/CSS/:visited).",
  "css/autofill": "The **`:autofill`** CSS [pseudo-class](/en-US/docs/Web/CSS/Pseudo-classes) matches when an [input--](/docs/Web/HTML/Element/input) element has its value autofilled by the browser. The class stops matching if the user edits the field.",
  "css/blank": ">\n> See [CSSWG issue #1967](https://github.com/w3c/csswg-drafts/issues/1967).",
  "css/buffering": "The **`:buffering`** [CSS](/en-US/docs/Web/CSS) [pseudo-class](/en-US/docs/Web/CSS/Pseudo-classes) selector represents an element that is playable, such as [audio--](/docs/Web/HTML/Element/audio) or [video--](/docs/Web/HTML/Element/video), when the playable element is buffering a media resource.",
  "css/checked": "The **`:checked`** [CSS](/en-US/docs/Web/CSS) [pseudo-class](/en-US/docs/Web/CSS/Pseudo-classes) selector represents any **radio** ([`<input type=\"radio\">`](/en-US/docs/Web/HTML/Element/input/radio)), **checkbox** ([`<input type=\"checkbox\">`](/en-US/docs/Web/HTML/Element/input/checkbox)), or **option** ([option--](/docs/Web/HTML/Element/option) in a [select--](/docs/Web/HTML/Element/select)) element that is checked or toggled to an `on` state.",
  "css/current": "The **`:current`** [CSS](/en-US/docs/Web/CSS) [pseudo-class](/en-US/docs/Web/CSS/Pseudo-classes) selector is a time-dimensional pseudo-class that represents an element or the ancestor of an element that is currently being displayed. For example, this pseudo-class can be used to represent a video that is being displayed with captions by [WebVTT](/en-US/docs/Web/API/WebVTT_API).",
  "css/default": "The **`:default`** [CSS](/en-US/docs/Web/CSS) [pseudo-class](/en-US/docs/Web/CSS/Pseudo-classes) selects form elements that are the default in a group of related elements.",
  "css/defined": "The **`:defined`** [CSS](/en-US/docs/Web/CSS) [pseudo-class](/en-US/docs/Web/CSS/Pseudo-classes) represents any element that has been defined. This includes any standard element built in to the browser, and custom elements that have been successfully defined (i.e. with the [CustomElementRegistry.define()--](/docs/Web/API/CustomElementRegistry/define) method).",
  "css/dir": "The **`:dir()`** [CSS](/en-US/docs/Web/CSS) [pseudo-class](/en-US/docs/Web/CSS/Pseudo-classes) matches elements based on the directionality of the text contained in them.",
  "css/disabled": "The **`:disabled`** [CSS](/en-US/docs/Web/CSS) [pseudo-class](/en-US/docs/Web/CSS/Pseudo-classes) represents any disabled element. An element is disabled if it can't be activated (selected, clicked on, typed into, etc.) or accept focus. The element also has an enabled state, in which it can be activated or accept focus.",
  "css/empty": "The **`:empty`** [CSS](/en-US/docs/Web/CSS) [pseudo-class](/en-US/docs/Web/CSS/Pseudo-classes) represents any element that has no children. Children can be either element nodes or text (including whitespace). Comments, processing instructions, and CSS [content--](/docs/Web/CSS/content) do not affect whether an element is considered empty.",
  "css/enabled": "The **`:enabled`** [CSS](/en-US/docs/Web/CSS) [pseudo-class](/en-US/docs/Web/CSS/Pseudo-classes) represents any enabled element. An element is enabled if it can be activated (selected, clicked on, typed into, etc.) or accept focus. The element also has a disabled state, in which it can't be activated or accept focus.",
  "css/first": "The **`:first`** [CSS](/en-US/docs/Web/CSS) [pseudo-class](/en-US/docs/Web/CSS/Pseudo-classes), used with the [@page--](/docs/Web/CSS/@page) [at-rule](/en-US/docs/Web/CSS/At-rule), represents the first page of a printed document. (See [:first-child--](/docs/Web/CSS/:first-child) for general first element of a node.)",
  "css/first-child": "The **`:first-child`** [CSS](/en-US/docs/Web/CSS) [pseudo-class](/en-US/docs/Web/CSS/Pseudo-classes) represents the first element among a group of sibling elements.",
  "css/first-of-type": "The **`:first-of-type`** [CSS](/en-US/docs/Web/CSS) [pseudo-class](/en-US/docs/Web/CSS/Pseudo-classes) represents the first element of its type among a group of sibling elements.",
  "css/focus": "The **`:focus`** [CSS](/en-US/docs/Web/CSS) [pseudo-class](/en-US/docs/Web/CSS/Pseudo-classes) represents an element (such as a form input) that has received focus. It is generally triggered when the user clicks or taps on an element or selects it with the keyboard's <kbd>Tab</kbd> key.",
  "css/focus-visible": "The **`:focus-visible`** pseudo-class applies while an element matches the [:focus--](/docs/Web/CSS/:focus) pseudo-class and the UA ([User Agent--](/docs/Glossary/User_Agent)) determines via heuristics that the focus should be made evident on the element. (Many browsers show a \"focus ring\" by default in this case.)",
  "css/focus-within": "The **`:focus-within`** [CSS](/en-US/docs/Web/CSS) [pseudo-class](/en-US/docs/Web/CSS/Pseudo-classes) matches an element if the element or any of its descendants are focused. In other words, it represents an element that is itself matched by the [:focus--](/docs/Web/CSS/:focus) pseudo-class or has a descendant that is matched by `:focus`. (This includes descendants in [shadow trees](/en-US/docs/Web/API/Web_components/Using_shadow_DOM).)",
  "css/fullscreen": "The **`:fullscreen`** [CSS](/en-US/docs/Web/CSS) [pseudo-class](/en-US/docs/Web/CSS/Pseudo-classes) matches every element that is currently in fullscreen mode. If multiple elements have been put into fullscreen mode, this selects them all.",
  "css/future": "The **`:future`** [CSS](/en-US/docs/Web/CSS) [pseudo-class](/en-US/docs/Web/CSS/Pseudo-classes) selector is a time-dimensional pseudo-class that will match for any element which appears entirely after an element that matches [:current--](/docs/Web/CSS/:current). For example in a video with captions which are being displayed by [WebVTT](/en-US/docs/Web/API/WebVTT_API).",
  "css/has": "The functional **`:has()`** CSS [pseudo-class](/en-US/docs/Web/CSS/Pseudo-classes) represents an element if any of the [relative selectors](/en-US/docs/Web/CSS/CSS_selectors/Selector_structure#relative_selector) that are passed as an argument match at least one element when anchored against this element. This pseudo-class presents a way of selecting a parent element or a previous sibling element with respect to a reference element by taking a [relative selector list](/en-US/docs/Web/CSS/Selector_list#relative_selector_list) as an argument.",
  "css/host": "The **`:host`** [CSS](/en-US/docs/Web/CSS) [pseudo-class](/en-US/docs/Web/CSS/Pseudo-classes) selects the shadow host of the [shadow DOM](/en-US/docs/Web/API/Web_components/Using_shadow_DOM) containing the CSS it is used inside — in other words, this allows you to select a custom element from inside its shadow DOM.",
  "css/host-context": "The **`:host-context()`** [CSS](/en-US/docs/Web/CSS) [pseudo-class](/en-US/docs/Web/CSS/Pseudo-classes) function selects the shadow host of the [shadow DOM](/en-US/docs/Web/API/Web_components/Using_shadow_DOM) containing the CSS it is used inside (so you can select a custom element from inside its shadow DOM) — but only if the selector given as the function's parameter matches the shadow host's ancestor(s) in the place it sits inside the DOM hierarchy.",
  "css/host_function": "The **`:host()`** [CSS](/en-US/docs/Web/CSS) [pseudo-class](/en-US/docs/Web/CSS/Pseudo-classes) function selects the shadow host of the [shadow DOM](/en-US/docs/Web/API/Web_components/Using_shadow_DOM) containing the CSS it is used inside (so you can select a custom element from inside its shadow DOM) — but only if the selector given as the function's parameter matches the shadow host. **`:host()`** has no effect when used outside a shadow DOM.",
  "css/hover": "The **`:hover`** [CSS](/en-US/docs/Web/CSS) [pseudo-class](/en-US/docs/Web/CSS/Pseudo-classes) matches when the user interacts with an element with a pointing device, but does not necessarily activate it. It is generally triggered when the user hovers over an element with the cursor (mouse pointer).",
  "css/in-range": "The **`:in-range`** [CSS](/en-US/docs/Web/CSS) [pseudo-class](/en-US/docs/Web/CSS/Pseudo-classes) represents an [input--](/docs/Web/HTML/Element/input) element whose current value is within the range limits specified by the [`min`](/en-US/docs/Web/HTML/Element/input#min) and [`max`](/en-US/docs/Web/HTML/Element/input#max) attributes.",
  "css/indeterminate": "The **`:indeterminate`** [CSS](/en-US/docs/Web/CSS) [pseudo-class](/en-US/docs/Web/CSS/Pseudo-classes) represents any form element whose state is indeterminate, such as checkboxes that have been set to an [`indeterminate`](/en-US/docs/Web/HTML/Element/input/checkbox#indeterminate_state_checkboxes) state with JavaScript, radio buttons which are members of a group in which all radio buttons are unchecked, and [progress--](/docs/Web/HTML/Element/progress) elements with no `value` attribute.",
  "css/invalid": "The **`:invalid`** [CSS](/en-US/docs/Web/CSS) [pseudo-class](/en-US/docs/Web/CSS/Pseudo-classes) represents any [form--](/docs/Web/HTML/Element/form), [fieldset--](/docs/Web/HTML/Element/fieldset), [input--](/docs/Web/HTML/Element/input) or other [form--](/docs/Web/HTML/Element/form) element whose contents fail to [validate](/en-US/docs/Web/HTML/Constraint_validation).",
  "css/is": "The **`:is()`** [CSS](/en-US/docs/Web/CSS) [pseudo-class](/en-US/docs/Web/CSS/Pseudo-classes) function takes a selector list as its argument, and selects any element that can be selected by one of the selectors in that list. This is useful for writing large selectors in a more compact form.",
  "css/lang": "The **`:lang()`** [CSS](/en-US/docs/Web/CSS) [pseudo-class](/en-US/docs/Web/CSS/Pseudo-classes) matches elements based on the language they are determined to be in.",
  "css/last-child": "The **`:last-child`** [CSS](/en-US/docs/Web/CSS) [pseudo-class](/en-US/docs/Web/CSS/Pseudo-classes) represents the last element among a group of sibling elements.",
  "css/last-of-type": "The **`:last-of-type`** [CSS](/en-US/docs/Web/CSS) [pseudo-class](/en-US/docs/Web/CSS/Pseudo-classes) represents the last element of its type among a group of sibling elements.",
  "css/left": "The **`left`** [CSS](/en-US/docs/Web/CSS) property participates in specifying the horizontal position of a [positioned element](/en-US/docs/Web/CSS/position). It has no effect on non-positioned elements.",
  "css/link": "The **`:link`** [CSS](/en-US/docs/Web/CSS) [pseudo-class](/en-US/docs/Web/CSS/Pseudo-classes) represents an element that has not yet been visited. It matches every unvisited [a--](/docs/Web/HTML/Element/a) or [area--](/docs/Web/HTML/Element/area) element that has an `href` attribute.",
  "css/local-link": "The **`:local-link`** [CSS](/en-US/docs/Web/CSS) [pseudo-class](/en-US/docs/Web/CSS/Pseudo-classes) represents a link to the same document. Therefore an element that is the source anchor of a hyperlink whose target's absolute URL matches the element's own document URL.",
  "css/modal": "The **`:modal`** [CSS](/en-US/docs/Web/CSS) [pseudo-class](/en-US/docs/Web/CSS/Pseudo-classes) matches an element that is in a state in which it excludes all interaction with elements outside it until the interaction has been dismissed. Multiple elements can be selected by the `:modal` pseudo-class at the same time, but only one of them will be active and able to receive input.",
  "css/muted": "The **`:muted`** [CSS](/en-US/docs/Web/CSS) [pseudo-class](/en-US/docs/Web/CSS/Pseudo-classes) selector represents an element that is capable of making sound, such as [audio--](/docs/Web/HTML/Element/audio) or [video--](/docs/Web/HTML/Element/video), but is muted (forced silent).",
  "css/not": "The **`:not()`** [CSS](/en-US/docs/Web/CSS) [pseudo-class](/en-US/docs/Web/CSS/Pseudo-classes) represents elements that do not match a list of selectors. Since it prevents specific items from being selected, it is known as the _negation pseudo-class_.",
  "css/nth-child": "The **`:nth-child()`** [CSS](/en-US/docs/Web/CSS) [pseudo-class](/en-US/docs/Web/CSS/Pseudo-classes) matches elements based on the indexes of the elements in the child list of their parents. In other words, the `:nth-child()` selector selects child elements according to their position among all the sibling elements within a parent element.",
  "css/nth-last-child": "The **`:nth-last-child()`** [CSS](/en-US/docs/Web/CSS) [pseudo-class](/en-US/docs/Web/CSS/Pseudo-classes) matches elements based on their position among a group of siblings, counting from the end.",
  "css/nth-last-of-type": "The **`:nth-last-of-type()`** [CSS](/en-US/docs/Web/CSS) [pseudo-class](/en-US/docs/Web/CSS/Pseudo-classes) matches elements based on their position among siblings of the same type (tag name), counting from the end.",
  "css/nth-of-type": "The **`:nth-of-type()`** [CSS](/en-US/docs/Web/CSS) [pseudo-class](/en-US/docs/Web/CSS/Pseudo-classes) matches elements based on their position among siblings of the same type (tag name).",
  "css/only-child": "The **`:only-child`** CSS [pseudo-class](/en-US/docs/Web/CSS/Pseudo-classes) represents an element without any siblings. This is the same as `:first-child:last-child` or `:nth-child(1):nth-last-child(1)`, but with a lower specificity.",
  "css/only-of-type": "The **`:only-of-type`** CSS [pseudo-class](/en-US/docs/Web/CSS/Pseudo-classes) represents an element that has no siblings of the same type.",
  "css/optional": "The **`:optional`** [CSS](/en-US/docs/Web/CSS) [pseudo-class](/en-US/docs/Web/CSS/Pseudo-classes) represents any [input--](/docs/Web/HTML/Element/input), [select--](/docs/Web/HTML/Element/select), or [textarea--](/docs/Web/HTML/Element/textarea) element that does not have the [`required`](/en-US/docs/Web/HTML/Element/input#required) attribute set on it.",
  "css/out-of-range": "The **`:out-of-range`** [CSS](/en-US/docs/Web/CSS) [pseudo-class](/en-US/docs/Web/CSS/Pseudo-classes) represents an [input--](/docs/Web/HTML/Element/input) element whose current value is outside the range limits specified by the [`min`](/en-US/docs/Web/HTML/Element/input#min) and [`max`](/en-US/docs/Web/HTML/Element/input#max) attributes.",
  "css/past": "The **`:past`** [CSS](/en-US/docs/Web/CSS) [pseudo-class](/en-US/docs/Web/CSS/Pseudo-classes) selector is a time-dimensional pseudo-class that will match for any element which appears entirely before an element that matches [:current--](/docs/Web/CSS/:current). For example in a video with captions which are being displayed by [WebVTT](/en-US/docs/Web/API/WebVTT_API).",
  "css/paused": "The **`:paused`** [CSS](/en-US/docs/Web/CSS) [pseudo-class](/en-US/docs/Web/CSS/Pseudo-classes) selector represents an element that is playable, such as [audio--](/docs/Web/HTML/Element/audio) or [video--](/docs/Web/HTML/Element/video), when that element is \"paused\" (i.e. not \"playing\").",
  "css/picture-in-picture": "The **`:picture-in-picture`** [CSS](/en-US/docs/Web/CSS) [pseudo-class](/en-US/docs/Web/CSS/Pseudo-classes) matches the element which is currently in picture-in-picture mode.",
  "css/placeholder-shown": "The **`:placeholder-shown`** [CSS](/en-US/docs/Web/CSS) [pseudo-class](/en-US/docs/Web/CSS/Pseudo-classes) represents any [input--](/docs/Web/HTML/Element/input) or [textarea--](/docs/Web/HTML/Element/textarea) element that is currently displaying [placeholder text](/en-US/docs/Web/HTML/Element/input#placeholder).",
  "css/playing": "The **`:playing`** [CSS](/en-US/docs/Web/CSS) [pseudo-class](/en-US/docs/Web/CSS/Pseudo-classes) selector represents the playback state of an element that is playable, such as [audio--](/docs/Web/HTML/Element/audio) or [video--](/docs/Web/HTML/Element/video), when that element is \"playing\".\nAn element is considered to be playing if it is currently playing the media resource, or if it has temporarily stopped for reasons other than user intent (such as [:buffering--](/docs/Web/CSS/:buffering) or [:stalled--](/docs/Web/CSS/:stalled)).",
  "css/popover-open": "The **`:popover-open`** [CSS](/en-US/docs/Web/CSS) [pseudo-class](/en-US/docs/Web/CSS/Pseudo-classes) represents a [popover--](/docs/Web/API/Popover_API) element (i.e. one with a [`popover` attribute](/en-US/docs/Web/HTML/Global_attributes/popover)) that is in the showing state. You can use this to apply style to popover elements only when they are shown.",
  "css/read-only": "The **`:read-only`** [CSS](/en-US/docs/Web/CSS) [pseudo-class](/en-US/docs/Web/CSS/Pseudo-classes) represents an element (such as `input` or `textarea`) that is not editable by the user.",
  "css/read-write": "The **`:read-write`** [CSS](/en-US/docs/Web/CSS) [pseudo-class](/en-US/docs/Web/CSS/Pseudo-classes) represents an element (such as `input` or `textarea`) that is editable by the user.",
  "css/required": "The **`:required`** [CSS](/en-US/docs/Web/CSS) [pseudo-class](/en-US/docs/Web/CSS/Pseudo-classes) represents any [input--](/docs/Web/HTML/Element/input), [select--](/docs/Web/HTML/Element/select), or [textarea--](/docs/Web/HTML/Element/textarea) element that has the [`required`](/en-US/docs/Web/HTML/Element/input#required) attribute set on it.",
  "css/right": "The **`right`** [CSS](/en-US/docs/Web/CSS) property participates in specifying the horizontal position of a [positioned element](/en-US/docs/Web/CSS/position). It has no effect on non-positioned elements.",
  "css/root": "The **`:root`** [CSS](/en-US/docs/Web/CSS) [pseudo-class](/en-US/docs/Web/CSS/Pseudo-classes) matches the root element of a tree representing the document. In HTML, `:root` represents the [html--](/docs/Web/HTML/Element/html) element and is identical to the selector `html`, except that its [specificity](/en-US/docs/Web/CSS/Specificity) is higher.",
  "css/scope": "The **`:scope`** [CSS](/en-US/docs/Web/CSS) [pseudo-class](/en-US/docs/Web/CSS/Pseudo-classes) represents elements that are a reference point, or scope, for selectors to match against.",
  "css/seeking": "The **`:seeking`** [CSS](/en-US/docs/Web/CSS) [pseudo-class](/en-US/docs/Web/CSS/Pseudo-classes) selector represents an element that is playable, such as [audio--](/docs/Web/HTML/Element/audio) or [video--](/docs/Web/HTML/Element/video), when the playable element is seeking a playback position in the media resource.\nA resource is considered to be seeking if the user has requested playback of a specific position in the media resource, but the media element has not yet reached that position.",
  "css/stalled": "The **`:stalled`** [CSS](/en-US/docs/Web/CSS) [pseudo-class](/en-US/docs/Web/CSS/Pseudo-classes) selector represents an element that is playable, such as [audio--](/docs/Web/HTML/Element/audio) or [video--](/docs/Web/HTML/Element/video), when playback is stalled.\nA resource is considered to be stalled if the user has requested playback of a specific position in the media resource, but it has failed to receive any data for some amount of time.\nThis is different from [:buffering--](/docs/Web/CSS/:buffering) in that the media element is unexpectedly not loading data when stalled (e.g. due to a network error) for around 3 seconds (the exact time is [user agent dependent](https://html.spec.whatwg.org/multipage/media.html#stall-timeout)).",
  "css/state": "The **`:state()`** [CSS](/en-US/docs/Web/CSS) [pseudo-class](/en-US/docs/Web/CSS/Pseudo-classes) matches [custom elements](/en-US/docs/Web/API/Web_components/Using_custom_elements) that have the specified custom state.",
  "css/target": "The **`:target`** [CSS](/en-US/docs/Web/CSS) [pseudo-class](/en-US/docs/Web/CSS/Pseudo-classes) represents a unique element (the _target element_) with an [`id`](/en-US/docs/Web/HTML/Global_attributes#id) matching the URL's fragment.",
  "css/target-within": "The **`:target-within`** [CSS](/en-US/docs/Web/CSS) [pseudo-class](/en-US/docs/Web/CSS/Pseudo-classes) represents an element that is a target element or _contains_ an element that is a target. A target element is a unique element with an [`id`](/en-US/docs/Web/HTML/Global_attributes#id) matching the URL's fragment. In other words, it represents an element that is itself matched by the [:target--](/docs/Web/CSS/:target) pseudo-class or has a descendant that is matched by `:target`. (This includes descendants in [shadow trees](/en-US/docs/Web/API/Web_components/Using_shadow_DOM).)",
  "css/user-invalid": "The **`:user-invalid`** CSS [pseudo-class](/en-US/docs/Web/CSS/Pseudo-classes) represents any validated form element whose value isn't valid based on their [validation constraints](/en-US/docs/Learn/Forms#constraint_validation), after the user has interacted with it.",
  "css/user-valid": "The **`:user-valid`** CSS [pseudo-class](/en-US/docs/Web/CSS/Pseudo-classes) represents any validated form element whose value validates correctly based on its [validation constraints](/en-US/docs/Learn/Forms#constraint_validation). However, unlike [:valid--](/docs/Web/CSS/:valid) it only matches once the user has interacted with it.",
  "css/valid": "The **`:valid`** [CSS](/en-US/docs/Web/CSS) [pseudo-class](/en-US/docs/Web/CSS/Pseudo-classes) represents any [input--](/docs/Web/HTML/Element/input) or other [form--](/docs/Web/HTML/Element/form) element whose contents [validate](/en-US/docs/Web/HTML/Constraint_validation) successfully. This allows to easily make valid fields adopt an appearance that helps the user confirm that their data is formatted properly.",
  "css/visited": "The **`:visited`** [CSS](/en-US/docs/Web/CSS) [pseudo-class](/en-US/docs/Web/CSS/Pseudo-classes) applies once the link has been visited by the user. For privacy reasons, the styles that can be modified using this selector are very limited. The `:visited` pseudo-class applies only to [a--](/docs/Web/HTML/Element/a) and [area--](/docs/Web/HTML/Element/area) elements that have an `href` attribute.",
  "css/volume-locked": "The **`:volume-locked`** [CSS](/en-US/docs/Web/CSS) [pseudo-class](/en-US/docs/Web/CSS/Pseudo-classes) selector represents an element that is capable of making sound, such as [audio--](/docs/Web/HTML/Element/audio) or [video--](/docs/Web/HTML/Element/video), but the audio volume of the media element is currently \"locked\" by the user.",
  "css/where": "The **`:where()`** [CSS](/en-US/docs/Web/CSS) [pseudo-class](/en-US/docs/Web/CSS/Pseudo-classes) function takes a selector list as its argument, and selects any element that can be selected by one of the selectors in that list.",
  "css/-moz-color-swatch": "The **`::-moz-color-swatch`** [CSS](/en-US/docs/Web/CSS) [pseudo-element](/en-US/docs/Web/CSS/Pseudo-elements) is a [Mozilla extension](/en-US/docs/Web/CSS/Mozilla_Extensions) that represents the color selected in an [input--](/docs/Web/HTML/Element/input) of `type=\"color\"`.",
  "css/-moz-focus-inner": "The **`::-moz-focus-inner`** [CSS](/en-US/docs/Web/CSS) [pseudo-element](/en-US/docs/Web/CSS/Pseudo-elements) is a [Mozilla extension](/en-US/docs/Web/CSS/Mozilla_Extensions) that represents an inner focus ring of the [button--](/docs/Web/HTML/Element/button) element as well as the [button--](/docs/Web/HTML/Element/input/button), [submit--](/docs/Web/HTML/Element/input/submit), [reset--](/docs/Web/HTML/Element/input/reset), and [color--](/docs/Web/HTML/Element/input/color) types of the [input--](/docs/Web/HTML/Element/input) element.",
  "css/-moz-list-bullet": "The **`::-moz-list-bullet`** [CSS](/en-US/docs/Web/CSS) [pseudo-element](/en-US/docs/Web/CSS/Pseudo-elements) is a [Mozilla extension](/en-US/docs/Web/CSS/Mozilla_Extensions) that represents the marker (typically a bullet) of a list item ([li--](/docs/Web/HTML/Element/li)) in an unordered list ([ul--](/docs/Web/HTML/Element/ul)).",
  "css/-moz-list-number": "The **`::-moz-list-number`** [CSS](/en-US/docs/Web/CSS) [pseudo-element](/en-US/docs/Web/CSS/Pseudo-elements) is a [Mozilla extension](/en-US/docs/Web/CSS/Mozilla_Extensions) that represents the marker (typically a number) of a list item ([li--](/docs/Web/HTML/Element/li)) in an ordered list ([ol--](/docs/Web/HTML/Element/ol)).",
  "css/-moz-page": "The **`::-moz-page`** [CSS](/en-US/docs/Web/CSS) [pseudo-element](/en-US/docs/Web/CSS/Pseudo-elements) is a [Mozilla extension](/en-US/docs/Web/CSS/Mozilla_Extensions) that represents an individual page when printed or in a print preview.",
  "css/-moz-page-sequence": "The **`::-moz-page-sequence`** [CSS](/en-US/docs/Web/CSS) [pseudo-element](/en-US/docs/Web/CSS/Pseudo-elements) is a [Mozilla extension](/en-US/docs/Web/CSS/Mozilla_Extensions) that represents the background of a print preview.",
  "css/-moz-progress-bar": "The **`::-moz-progress-bar`** [CSS](/en-US/docs/Web/CSS) [pseudo-element](/en-US/docs/Web/CSS/Pseudo-elements) is a [Mozilla extension](/en-US/docs/Web/CSS/Mozilla_Extensions) that represents the progress bar inside a [progress--](/docs/Web/HTML/Element/progress) element. (The bar represents the amount of progress that has been made.)",
  "css/-moz-range-progress": "The **`::-moz-range-progress`** [CSS](/en-US/docs/Web/CSS) [pseudo-element](/en-US/docs/Web/CSS/Pseudo-elements) is a [Mozilla extension](/en-US/docs/Web/CSS/Mozilla_Extensions) that represents the lower portion of the _track_ (i.e., groove) in which the indicator slides in an [input--](/docs/Web/HTML/Element/input) of `type=\"range\"`. This portion corresponds to values lower than the value currently selected by the _thumb_ (i.e., virtual knob).",
  "css/-moz-range-thumb": "The **`::-moz-range-thumb`** [CSS](/en-US/docs/Web/CSS) [pseudo-element](/en-US/docs/Web/CSS/Pseudo-elements) is a [Mozilla extension](/en-US/docs/Web/CSS/Mozilla_Extensions) that represents the _thumb_ (i.e., virtual knob) of an [input--](/docs/Web/HTML/Element/input) of `type=\"range\"`. The user can move the thumb along the input's track to alter its numerical value.",
  "css/-moz-range-track": "The **`::-moz-range-track`** [CSS](/en-US/docs/Web/CSS) [pseudo-element](/en-US/docs/Web/CSS/Pseudo-elements) is a [Mozilla extension](/en-US/docs/Web/CSS/Mozilla_Extensions) that represents the _track_ (i.e., groove) in which the indicator slides in an [input--](/docs/Web/HTML/Element/input) of `type=\"range\"`.",
  "css/-moz-scrolled-page-sequence": "The **`::-moz-scrolled-page-sequence`** [CSS](/en-US/docs/Web/CSS) [pseudo-element](/en-US/docs/Web/CSS/Pseudo-elements) is a [Mozilla extension](/en-US/docs/Web/CSS/Mozilla_Extensions) that represents the background of a print preview.",
  "css/-webkit-inner-spin-button": "The **`::-webkit-inner-spin-button`** CSS pseudo-element is used to style the inner part of the spinner button of number picker input elements.",
  "css/-webkit-meter-bar": "The **`::-webkit-meter-bar`** [CSS](/en-US/docs/Web/CSS) [pseudo-element](/en-US/docs/Glossary/Pseudo-element) is a [WebKit extension](/en-US/docs/Web/CSS/WebKit_Extensions) that represents the meter bar in a [meter--](/docs/Web/HTML/Element/meter) element. It is used for selecting and applying styles to the container meter gauge.",
  "css/-webkit-meter-even-less-good-value": "The **`::-webkit-meter-even-less-good-value`** styles the [meter--](/docs/Web/HTML/Element/meter) element when the value and the optimum attributes fall outside the low-high range, but in opposite zones. To illustrate, it applies when _value_ < _low_ < _high_ < _optimum_ or _value_ > _high_ > _low_ > _optimum_.",
  "css/-webkit-meter-inner-element": "**`::-webkit-meter-inner-element`** is a proprietary WebKit CSS pseudo-element for selecting and applying styles to the outer containing element of a [meter--](/docs/Web/HTML/Element/meter) element. Additional markup to render the meter element as read-only.",
  "css/-webkit-meter-optimum-value": "The **`::-webkit-meter-optimum-value`** CSS [pseudo-element](/en-US/docs/Glossary/Pseudo-element) styles the [meter--](/docs/Web/HTML/Element/meter) element when its value is inside the low-high range, or when the value is equivalent to the optimum value.",
  "css/-webkit-meter-suboptimum-value": "The **`::-webkit-meter-suboptimum-value`** [pseudo-element](/en-US/docs/Glossary/Pseudo-element) styles the [meter--](/docs/Web/HTML/Element/meter) element when the value attribute falls outside of the low-high range and is not equivalent to the optimum value.",
  "css/-webkit-progress-bar": "The **`::-webkit-progress-bar`** [CSS](/en-US/docs/Web/CSS) [pseudo-element](/en-US/docs/Web/CSS/Pseudo-elements) represents the entire bar of a [progress--](/docs/Web/HTML/Element/progress) element. Normally it's only visible as the unfilled portion of the bar, since by default it's rendered below the [::-webkit-progress-value--](/docs/Web/CSS/::-webkit-progress-value) pseudo-element. It is a child of the [::-webkit-progress-inner-element--](/docs/Web/CSS/::-webkit-progress-inner-element) pseudo-element and the parent of the [::-webkit-progress-value--](/docs/Web/CSS/::-webkit-progress-value) pseudo-element.",
  "css/-webkit-progress-inner-element": "The **`::-webkit-progress-inner-element`** [CSS](/en-US/docs/Web/CSS) [pseudo-element](/en-US/docs/Web/CSS/Pseudo-elements) represents the outermost container of the [progress--](/docs/Web/HTML/Element/progress) element. It is the parent of the [::-webkit-progress-bar--](/docs/Web/CSS/::-webkit-progress-bar) pseudo-element.",
  "css/-webkit-progress-value": "The **`::-webkit-progress-value`** [CSS](/en-US/docs/Web/CSS) [pseudo-element](/en-US/docs/Web/CSS/Pseudo-elements) represents the filled-in portion of the bar of a [progress--](/docs/Web/HTML/Element/progress) element. It is a child of the [::-webkit-progress-bar--](/docs/Web/CSS/::-webkit-progress-bar) pseudo-element.",
  "css/-webkit-scrollbar": "The `::-webkit-scrollbar` CSS pseudo-element affects the style of an element's scrollbar when it has scrollable overflow.",
  "css/-webkit-search-cancel-button": "The **`::-webkit-search-cancel-button`** CSS [pseudo-element](/en-US/docs/Web/CSS/Pseudo-elements) represents a button (the \"cancel button\") at the edge of an [input--](/docs/Web/HTML/Element/input) of `type=\"search\"` which clears away the current value of the [input--](/docs/Web/HTML/Element/input) element. This button and pseudo-element are non-standard, supported only in WebKit and Blink, hence the vendor prefix. The clear button is only shown on non-empty search [input--](/docs/Web/HTML/Element/input) elements.",
  "css/-webkit-search-results-button": "The **`::-webkit-search-results-button`** CSS [pseudo-element](/en-US/docs/Web/CSS/Pseudo-elements) represents a button (the \"search results button\") at the left edge of an [input--](/docs/Web/HTML/Element/input) of `type=\"search\"` which when clicked displays a menu which allows the user to choose from previous recent search queries. This button and pseudo-element are non-standard, supported only in WebKit and Blink, hence the vendor prefix. The search results button is only shown on search [input--](/docs/Web/HTML/Element/input) elements that have a [`results`](/en-US/docs/Web/HTML/Element/input#results) attribute.",
  "css/-webkit-slider-runnable-track": "The **`::-webkit-slider-runnable-track`** CSS [pseudo-element](/en-US/docs/Web/CSS/Pseudo-elements) represents the \"track\" (the groove in which the indicator slides) of an [&lt;input type=\"range\"&gt;--](/docs/Web/HTML/Element/input/range).",
  "css/-webkit-slider-thumb": "The **`::-webkit-slider-thumb`** CSS [pseudo-element](/en-US/docs/Web/CSS/Pseudo-elements) represents the \"thumb\" that the user can move within the \"groove\" of an [input--](/docs/Web/HTML/Element/input) of `type=\"range\"` to alter its numerical value.",
  "css/after": "In CSS, **`::after`** creates a [pseudo-element](/en-US/docs/Web/CSS/Pseudo-elements) that is the last child of the selected element. It is often used to add cosmetic content to an element with the [content--](/docs/Web/CSS/content) property. It is inline by default.",
  "css/backdrop": "The **`::backdrop`** [CSS](/en-US/docs/Web/CSS) [pseudo-element](/en-US/docs/Web/CSS/Pseudo-elements) is a box the size of the [viewport--](/docs/Glossary/viewport), which is rendered immediately beneath any element being presented in the [top layer--](/docs/Glossary/top_layer).",
  "css/before": "In CSS, **`::before`** creates a [pseudo-element](/en-US/docs/Web/CSS/Pseudo-elements) that is the first child of the selected element. It is often used to add cosmetic content to an element with the [content--](/docs/Web/CSS/content) property. It is inline by default.",
  "css/cue": "The **`::cue`** [CSS](/en-US/docs/Web/CSS) [pseudo-element](/en-US/docs/Web/CSS/Pseudo-elements) matches [WebVTT](/en-US/docs/Web/API/WebVTT_API) cues within a selected element. This can be used to [style captions and other cues](/en-US/docs/Web/API/WebVTT_API#styling_webvtt_cues) in media with VTT tracks.",
  "css/cue-region": "The **`::cue-region`** [CSS](/en-US/docs/Web/CSS) [pseudo-element](/en-US/docs/Web/CSS/Pseudo-elements) matches [WebVTT--](/docs/Web/API/WebVTT_API) cues within a selected element. This can be used to [style captions and other cues](/en-US/docs/Web/API/WebVTT_API#styling_webvtt_cues) in media with VTT tracks.",
  "css/file-selector-button": "The **`::file-selector-button`** [CSS](/en-US/docs/Web/CSS) [pseudo-element](/en-US/docs/Web/CSS/Pseudo-elements) represents the button of an [input--](/docs/Web/HTML/Element/input) of [`type=\"file\"`](/en-US/docs/Web/HTML/Element/input/file).",
  "css/first-letter": "The **`::first-letter`** [CSS](/en-US/docs/Web/CSS) [pseudo-element](/en-US/docs/Web/CSS/Pseudo-elements) applies styles to the first letter of the first line of a [block container](/en-US/docs/Web/CSS/Visual_formatting_model#block_containers), but only when not preceded by other content (such as images or inline tables).",
  "css/first-line": "The **`::first-line`** [CSS](/en-US/docs/Web/CSS) [pseudo-element](/en-US/docs/Web/CSS/Pseudo-elements) applies styles to the first line of a [block container](/en-US/docs/Web/CSS/Visual_formatting_model#block_containers).",
  "css/grammar-error": "The **`::grammar-error`** [CSS](/en-US/docs/Web/CSS) [pseudo-element](/en-US/docs/Web/CSS/Pseudo-elements) represents a text segment which the [user agent--](/docs/Glossary/user_agent) has flagged as grammatically incorrect.",
  "css/highlight": "The **`::highlight()`** CSS [pseudo-element](/en-US/docs/Web/CSS/Pseudo-elements) applies styles to a custom highlight.",
  "css/marker": "The **`::marker`** [CSS](/en-US/docs/Web/CSS) [pseudo-element](/en-US/docs/Web/CSS/Pseudo-elements) selects the marker box of a list item, which typically contains a bullet or number. It works on any element or pseudo-element set to [`display: list-item`](/en-US/docs/Web/CSS/display), such as the [li--](/docs/Web/HTML/Element/li) and [summary--](/docs/Web/HTML/Element/summary) elements.",
  "css/part": "The **`::part`** [CSS](/en-US/docs/Web/CSS) [pseudo-element](/en-US/docs/Web/CSS/Pseudo-elements) represents any element within a [shadow tree](/en-US/docs/Web/API/Web_components/Using_shadow_DOM) that has a matching [`part`](/en-US/docs/Web/HTML/Global_attributes#part) attribute.",
  "css/placeholder": "The **`::placeholder`** [CSS](/en-US/docs/Web/CSS) [pseudo-element](/en-US/docs/Web/CSS/Pseudo-elements) represents the [placeholder text](/en-US/docs/Web/HTML/Element/input#placeholder) in an [input--](/docs/Web/HTML/Element/input) or [textarea--](/docs/Web/HTML/Element/textarea) element.",
  "css/selection": "The **`::selection`** CSS [pseudo-element](/en-US/docs/Web/CSS/Pseudo-elements) applies styles to the part of a document that has been highlighted by the user (such as clicking and dragging the mouse across text).",
  "css/slotted": "The **`::slotted()`** [CSS](/en-US/docs/Web/CSS) [pseudo-element](/en-US/docs/Web/CSS/Pseudo-elements) represents any element that has been placed into a slot inside an HTML template (see [Using templates and slots](/en-US/docs/Web/API/Web_components/Using_templates_and_slots) for more information).",
  "css/spelling-error": "The **`::spelling-error`** [CSS](/en-US/docs/Web/CSS) [pseudo-element](/en-US/docs/Web/CSS/Pseudo-elements) represents a text segment which the [user agent--](/docs/Glossary/user_agent) has flagged as incorrectly spelled.",
  "css/target-text": "The **`::target-text`** [CSS](/en-US/docs/Web/CSS) [pseudo-element](/en-US/docs/Web/CSS/Pseudo-elements) represents the text that has been scrolled to if the browser supports [text fragments](/en-US/docs/Web/Text_fragments). It allows authors to choose how to highlight that section of text.",
  "css/view-transition": "The **`::view-transition`** [CSS](/en-US/docs/Web/CSS) [pseudo-element](/en-US/docs/Web/CSS/Pseudo-elements) represents the root of the [view transitions](/en-US/docs/Web/API/View_Transitions_API) overlay, which contains all view transitions and sits over the top of all other page content.",
  "css/view-transition-group": "The **`::view-transition-group`** [CSS](/en-US/docs/Web/CSS) [pseudo-element](/en-US/docs/Web/CSS/Pseudo-elements) represents a single view transition group.",
  "css/view-transition-image-pair": "The **`::view-transition-image-pair`** [CSS](/en-US/docs/Web/CSS) [pseudo-element](/en-US/docs/Web/CSS/Pseudo-elements) represents a container for a [view transition's](/en-US/docs/Web/API/View_Transitions_API) \"old\" and \"new\" view states — before and after the transition.",
  "css/view-transition-new": "The **`::view-transition-new`** [CSS](/en-US/docs/Web/CSS) [pseudo-element](/en-US/docs/Web/CSS/Pseudo-elements) represents the \"new\" view state of a view transition — a live representation of the new view, after the transition.",
  "css/view-transition-old": "The **`::view-transition-old`** [CSS](/en-US/docs/Web/CSS) [pseudo-element](/en-US/docs/Web/CSS/Pseudo-elements) represents the \"old\" view state of a view transition — a static screenshot of the old view, before the transition.",
  "css/abs": "The **`abs()`** [CSS](/en-US/docs/Web/CSS) [function](/en-US/docs/Web/CSS/CSS_Functions) returns the absolute value of the argument, as the same type as the input.",
  "css/absolute-size": "The **`<absolute-size>`** [CSS](/en-US/docs/Web/CSS) [data type](/en-US/docs/Web/CSS/CSS_Types) describes the absolute size keywords. This data type is used in the [font--](/docs/Web/CSS/font) shorthand and [font-size--](/docs/Web/CSS/font-size) properties.",
  "css/accent-color": "The **`accent-color`** [CSS](/en-US/docs/Web/CSS) property sets the [accent--](/docs/Glossary/accent) color for user-interface controls generated by some elements.",
  "css/acos": "The **`acos()`** [CSS](/en-US/docs/Web/CSS) [function](/en-US/docs/Web/CSS/CSS_Functions) is a trigonometric function that returns the inverse cosine of a number between `-1` and `1`. The function contains a single calculation that returns the number of radians representing an [&lt;angle&gt;--](/docs/Web/CSS/&lt;angle&gt;) between `0deg` and `180deg`.",
  "css/actual_value": "The **actual value** of a [CSS](/en-US/docs/Web/CSS) property is the [used value](/en-US/docs/Web/CSS/used_value) of that property after any necessary approximations have been applied. For example, a [user agent--](/docs/Glossary/user_agent) that can only render borders with a whole-number pixel width may round the thickness of the border to the nearest integer.",
  "css/align-content": "The [CSS](/en-US/docs/Web/CSS) **`align-content`** property sets the distribution of space between and around content items along a [flexbox](/en-US/docs/Web/CSS/CSS_flexible_box_layout)'s [cross axis](/en-US/docs/Glossary/Cross_Axis), or a [grid](/en-US/docs/Web/CSS/CSS_grid_layout) or [block-level](/en-US/docs/Glossary/Block-level_content) element's block axis.",
  "css/align-items": "The [CSS](/en-US/docs/Web/CSS) **`align-items`** property sets the [align-self--](/docs/Web/CSS/align-self) value on all direct children as a group. In Flexbox, it controls the alignment of items on the [Cross Axis--](/docs/Glossary/Cross_Axis). In Grid Layout, it controls the alignment of items on the Block Axis within their [grid area--](/docs/Glossary/Grid_Areas).",
  "css/align-self": "The **`align-self`** [CSS](/en-US/docs/Web/CSS) property overrides a grid or flex item's [align-items--](/docs/Web/CSS/align-items) value. In Grid, it aligns the item inside the [grid area--](/docs/Glossary/Grid_Areas). In Flexbox, it aligns the item on the [cross axis--](/docs/Glossary/cross_axis).",
  "css/align-tracks": "The **`align-tracks`** CSS property sets the alignment in the masonry axis for grid containers that have [masonry](/en-US/docs/Web/CSS/CSS_grid_layout/Masonry_layout) in their block axis.",
  "css/all": "The **`all`** [shorthand](/en-US/docs/Web/CSS/Shorthand_properties) [CSS](/en-US/docs/Web/CSS) property resets all of an element's properties except [unicode-bidi--](/docs/Web/CSS/unicode-bidi), [direction--](/docs/Web/CSS/direction), and [CSS Custom Properties](/en-US/docs/Web/CSS/Using_CSS_custom_properties). It can set properties to their initial or inherited values, or to the values specified in another cascade layer or stylesheet origin.",
  "css/alpha-value": "The **`<alpha-value>`** [CSS](/en-US/docs/Web/CSS) [data type](/en-US/docs/Web/CSS/CSS_Types) represents a value that can be either a [&lt;number&gt;--](/docs/Web/CSS/&lt;number&gt;) or a [&lt;percentage&gt;--](/docs/Web/CSS/&lt;percentage&gt;), specifying the **[alpha channel--](/docs/Glossary/alpha)** or **transparency** of a color.",
  "css/alternative_style_sheets": "Specifying **alternative style sheets** in a web page provides a way for users to see multiple versions of a page, based on their needs or preferences.",
  "css/angle": "The **`<angle>`** [CSS](/en-US/docs/Web/CSS) [data type](/en-US/docs/Web/CSS/CSS_Types) represents an angle value expressed in degrees, gradians, radians, or turns. It is used, for example, in [&lt;gradient&gt;--](/docs/Web/CSS/&lt;gradient&gt;)s and in some [transform--](/docs/Web/CSS/transform) functions.",
  "css/angle-percentage": "The **`<angle-percentage>`** [CSS](/en-US/docs/Web/CSS) [data type](/en-US/docs/Web/CSS/CSS_Types) represents a value that can be either a [angle--](/docs/Web/CSS/angle) or a [percentage--](/docs/Web/CSS/percentage).",
  "css/animation": "The **`animation`** [shorthand](/en-US/docs/Web/CSS/Shorthand_properties) [CSS](/en-US/docs/Web/CSS) property applies an animation between styles. It is a shorthand for [animation-name--](/docs/Web/CSS/animation-name), [animation-duration--](/docs/Web/CSS/animation-duration), [animation-timing-function--](/docs/Web/CSS/animation-timing-function), [animation-delay--](/docs/Web/CSS/animation-delay), [animation-iteration-count--](/docs/Web/CSS/animation-iteration-count), [animation-direction--](/docs/Web/CSS/animation-direction), [animation-fill-mode--](/docs/Web/CSS/animation-fill-mode), [animation-play-state--](/docs/Web/CSS/animation-play-state), and [animation-timeline--](/docs/Web/CSS/animation-timeline).",
  "css/animation-composition": "The **`animation-composition`** [CSS](/en-US/docs/Web/CSS) property specifies the [composite operation--](/docs/Glossary/composite_operation) to use when multiple animations affect the same property simultaneously.",
  "css/animation-delay": "The **`animation-delay`** [CSS](/en-US/docs/Web/CSS) property specifies the amount of time to wait from applying the animation to an element before beginning to perform the animation. The animation can start later, immediately from its beginning, or immediately and partway through the animation.",
  "css/animation-direction": "The **`animation-direction`** [CSS](/en-US/docs/Web/CSS) property sets whether an animation should play forward, backward, or alternate back and forth between playing the sequence forward and backward.",
  "css/animation-duration": "The **`animation-duration`** [CSS](/en-US/docs/Web/CSS) property sets the length of time that an animation takes to complete one cycle.",
  "css/animation-fill-mode": "The **`animation-fill-mode`** [CSS](/en-US/docs/Web/CSS) property sets how a CSS animation applies styles to its target before and after its execution.",
  "css/animation-iteration-count": "The **`animation-iteration-count`** [CSS](/en-US/docs/Web/CSS) property sets the number of times an animation sequence should be played before stopping.",
  "css/animation-name": "The **`animation-name`** [CSS](/en-US/docs/Web/CSS) property specifies the names of one or more [@keyframes--](/docs/Web/CSS/@keyframes) at-rules that describe the animation to apply to an element. Multiple `@keyframe` at-rules are specified as a comma-separated list of names. If the specified name does not match any `@keyframe` at-rule, no properties are animated.",
  "css/animation-play-state": "The **`animation-play-state`** [CSS](/en-US/docs/Web/CSS) property sets whether an animation is running or paused.",
  "css/animation-range": "The **`animation-range`** [CSS](/en-US/docs/Web/CSS) [shorthand property](/en-US/docs/Web/CSS/Shorthand_properties) is used to set the start and end of an animation's attachment range along its timeline, i.e. where along the timeline an animation will start and end.",
  "css/animation-range-end": "The **`animation-range-end`** [CSS](/en-US/docs/Web/CSS) property is used to set the end of an animation's attachment range along its timeline, i.e. where along the timeline an animation will end.",
  "css/animation-range-start": "The **`animation-range-start`** [CSS](/en-US/docs/Web/CSS) property is used to set the start of an animation's attachment range along its timeline, i.e. where along the timeline an animation will start.",
  "css/animation-timeline": "The **`animation-timeline`** [CSS](/en-US/docs/Web/CSS) property specifies the timeline that is used to control the progress of a CSS animation.",
  "css/animation-timing-function": "The **`animation-timing-function`** [CSS](/en-US/docs/Web/CSS) property sets how an animation progresses through the duration of each cycle.",
  "css/appearance": "The **`appearance`** CSS property is used to display UI elements with platform-specific styling, based on the operating system's theme.",
  "css/asin": "The **`asin()`** [CSS](/en-US/docs/Web/CSS) [function](/en-US/docs/Web/CSS/CSS_Functions) is a trigonometric function that returns the inverse sine of a number between `-1` and `1`. The function contains a single calculation that returns the number of radians representing an [&lt;angle&gt;--](/docs/Web/CSS/&lt;angle&gt;) between `-90deg` and `90deg`.",
  "css/aspect-ratio": "The **`aspect-ratio`** [CSS](/en-US/docs/Web/CSS) property allows you to define the desired width-to-height ratio of an element's box. This means that even if the parent container or viewport size changes, the browser will adjust the element's dimensions to maintain the specified width-to-height ratio. The specified aspect ratio is used in the calculation of auto sizes and some other layout functions.",
  "css/at-rule": "**At-rules** are [CSS statements](/en-US/docs/Web/CSS/Syntax#css_statements) that instruct CSS how to behave. They begin with an at sign, '`@`' (`U+0040 COMMERCIAL AT`), followed by an identifier and includes everything up to the next semicolon, '`;`' (`U+003B SEMICOLON`), or the next [CSS block](/en-US/docs/Web/CSS/Syntax#css_declaration_blocks), whichever comes first.",
  "css/at-rule-functions": "**[CSS](/en-US/docs/Web/CSS) [at-rule](/en-US/docs/Web/CSS/At-rule) functions** are at-rule statements that represent complex rules or can invoke special data processing or calculations.",
  "css/atan": "The **`atan()`** [CSS](/en-US/docs/Web/CSS) [function](/en-US/docs/Web/CSS/CSS_Functions) is a trigonometric function that returns the inverse tangent of a number between `-∞` and `+∞`. The function contains a single calculation that returns the number of radians representing an [&lt;angle&gt;--](/docs/Web/CSS/&lt;angle&gt;) between `-90deg` and `90deg`.",
  "css/atan2": "The **`atan2()`** [CSS](/en-US/docs/Web/CSS) [function](/en-US/docs/Web/CSS/CSS_Functions) is a trigonometric function that returns the inverse tangent of two values between `-infinity` and `infinity`. The function accepts two arguments and returns the number of radians representing an [&lt;angle&gt;--](/docs/Web/CSS/&lt;angle&gt;) between `-180deg` and `180deg`.",
  "css/attr": "The **`attr()`** [CSS](/en-US/docs/Web/CSS) [function](/en-US/docs/Web/CSS/CSS_Functions) is used to retrieve the value of an attribute of the selected element and use it in the stylesheet. It can also be used on [pseudo-elements](/en-US/docs/Web/CSS/Pseudo-elements), in which case the value of the attribute on the pseudo-element's originating element is returned.",
  "css/attribute_selectors": "The CSS **attribute selector** matches elements based on the element having a given attribute explicitly set, with options for defining an attribute value or substring value match.",
  "css/backdrop-filter": "The **`backdrop-filter`** [CSS](/en-US/docs/Web/CSS) property lets you apply graphical effects such as blurring or color shifting to the area behind an element. Because it applies to everything _behind_ the element, to see the effect the element or its background needs to be transparent or partially transparent.",
  "css/backface-visibility": "The **`backface-visibility`** [CSS](/en-US/docs/Web/CSS) property sets whether the back face of an element is visible when turned towards the user.",
  "css/background": "The **`background`** [shorthand](/en-US/docs/Web/CSS/Shorthand_properties) [CSS](/en-US/docs/Web/CSS) property sets all background style properties at once, such as color, image, origin and size, or repeat method. Component properties not set in the `background` shorthand property value declaration are set to their default values.",
  "css/background-attachment": "The **`background-attachment`** [CSS](/en-US/docs/Web/CSS) property sets whether a background image's position is fixed within the [viewport--](/docs/Glossary/viewport), or scrolls with its containing block.",
  "css/background-blend-mode": "The **`background-blend-mode`** [CSS](/en-US/docs/Web/CSS) property sets how an element's background images should blend with each other and with the element's background color.",
  "css/background-clip": "The **`background-clip`** [CSS](/en-US/docs/Web/CSS) property sets whether an element's background extends underneath its border box, padding box, or content box.",
  "css/background-color": "The **`background-color`** [CSS](/en-US/docs/Web/CSS) property sets the background color of an element.",
  "css/background-image": "The **`background-image`** [CSS](/en-US/docs/Web/CSS) property sets one or more background images on an element.",
  "css/background-origin": "The **`background-origin`** [CSS](/en-US/docs/Web/CSS) property sets the background's origin: from the border start, inside the border, or inside the padding.",
  "css/background-position": "The **`background-position`** [CSS](/en-US/docs/Web/CSS) property sets the initial position for each background image. The position is relative to the position layer set by [background-origin--](/docs/Web/CSS/background-origin).",
  "css/background-position-x": "The **`background-position-x`** [CSS](/en-US/docs/Web/CSS) property sets the initial horizontal position for each background image. The position is relative to the position layer set by [background-origin--](/docs/Web/CSS/background-origin).",
  "css/background-position-y": "The **`background-position-y`** [CSS](/en-US/docs/Web/CSS) property sets the initial vertical position for each background image. The position is relative to the position layer set by [background-origin--](/docs/Web/CSS/background-origin).",
  "css/background-repeat": "The **`background-repeat`** [CSS](/en-US/docs/Web/CSS) property sets how background images are repeated. A background image can be repeated along the horizontal and vertical axes, or not repeated at all.",
  "css/background-size": "The **`background-size`** [CSS](/en-US/docs/Web/CSS) property sets the size of the element's background image.\nThe image can be left to its natural size, stretched, or constrained to fit the available space.",
  "css/basic-shape": "The **`<basic-shape>`** [CSS](/en-US/docs/Web/CSS) [data type](/en-US/docs/Web/CSS/CSS_Types) represents a shape used in the [clip-path--](/docs/Web/CSS/clip-path), [shape-outside--](/docs/Web/CSS/shape-outside), and [offset-path--](/docs/Web/CSS/offset-path) properties.",
  "css/blend-mode": "The **`<blend-mode>`** [CSS](/en-US/docs/Web/CSS) [data type](/en-US/docs/Web/CSS/CSS_Types) describes how colors should appear when elements overlap. It is used in the [background-blend-mode--](/docs/Web/CSS/background-blend-mode) and [mix-blend-mode--](/docs/Web/CSS/mix-blend-mode) properties.",
  "css/block-size": "The **`block-size`** [CSS](/en-US/docs/Web/CSS) property defines the horizontal or vertical size of an element's block, depending on its writing mode. It corresponds to either the [width--](/docs/Web/CSS/width) or the [height--](/docs/Web/CSS/height) property, depending on the value of [writing-mode--](/docs/Web/CSS/writing-mode).",
  "css/border": "The **`border`** [shorthand](/en-US/docs/Web/CSS/Shorthand_properties) [CSS](/en-US/docs/Web/CSS) property sets an element's border. It sets the values of [border-width--](/docs/Web/CSS/border-width), [border-style--](/docs/Web/CSS/border-style), and [border-color--](/docs/Web/CSS/border-color).",
  "css/border-block": "The **`border-block`** [CSS](/en-US/docs/Web/CSS) property is a [shorthand property](/en-US/docs/Web/CSS/Shorthand_properties) for setting the individual logical block border property values in a single place in the style sheet.",
  "css/border-block-color": "The **`border-block-color`** [CSS](/en-US/docs/Web/CSS) property defines the color of the logical block borders of an element, which maps to a physical border color depending on the element's writing mode, directionality, and text orientation. It corresponds to the [border-top-color--](/docs/Web/CSS/border-top-color) and [border-bottom-color--](/docs/Web/CSS/border-bottom-color), or [border-right-color--](/docs/Web/CSS/border-right-color) and [border-left-color--](/docs/Web/CSS/border-left-color) property depending on the values defined for [writing-mode--](/docs/Web/CSS/writing-mode), [direction--](/docs/Web/CSS/direction), and [text-orientation--](/docs/Web/CSS/text-orientation).",
  "css/border-block-end": "The **`border-block-end`** [CSS](/en-US/docs/Web/CSS) property is a [shorthand property](/en-US/docs/Web/CSS/Shorthand_properties) for setting the individual logical block-end border property values in a single place in the style sheet.",
  "css/border-block-end-color": "The **`border-block-end-color`** [CSS](/en-US/docs/Web/CSS) property defines the color of the logical block-end border of an element, which maps to a physical border color depending on the element's writing mode, directionality, and text orientation. It corresponds to the [border-top-color--](/docs/Web/CSS/border-top-color), [border-right-color--](/docs/Web/CSS/border-right-color), [border-bottom-color--](/docs/Web/CSS/border-bottom-color), or [border-left-color--](/docs/Web/CSS/border-left-color) property depending on the values defined for [writing-mode--](/docs/Web/CSS/writing-mode), [direction--](/docs/Web/CSS/direction), and [text-orientation--](/docs/Web/CSS/text-orientation).",
  "css/border-block-end-style": "The **`border-block-end-style`** [CSS](/en-US/docs/Web/CSS) property defines the style of the logical block-end border of an element, which maps to a physical border style depending on the element's writing mode, directionality, and text orientation. It corresponds to the [border-top-style--](/docs/Web/CSS/border-top-style), [border-right-style--](/docs/Web/CSS/border-right-style), [border-bottom-style--](/docs/Web/CSS/border-bottom-style), or [border-left-style--](/docs/Web/CSS/border-left-style) property depending on the values defined for [writing-mode--](/docs/Web/CSS/writing-mode), [direction--](/docs/Web/CSS/direction), and [text-orientation--](/docs/Web/CSS/text-orientation).",
  "css/border-block-end-width": "The **`border-block-end-width`** [CSS](/en-US/docs/Web/CSS) property defines the width of the logical block-end border of an element, which maps to a physical border width depending on the element's writing mode, directionality, and text orientation. It corresponds to the [border-top-width--](/docs/Web/CSS/border-top-width), [border-right-width--](/docs/Web/CSS/border-right-width), [border-bottom-width--](/docs/Web/CSS/border-bottom-width), or [border-left-width--](/docs/Web/CSS/border-left-width) property depending on the values defined for [writing-mode--](/docs/Web/CSS/writing-mode), [direction--](/docs/Web/CSS/direction), and [text-orientation--](/docs/Web/CSS/text-orientation).",
  "css/border-block-start": "The **`border-block-start`** [CSS](/en-US/docs/Web/CSS) property is a [shorthand property](/en-US/docs/Web/CSS/Shorthand_properties) for setting the individual logical block-start border property values in a single place in the style sheet.",
  "css/border-block-start-color": "The **`border-block-start-color`** [CSS](/en-US/docs/Web/CSS) property defines the color of the logical block-start border of an element, which maps to a physical border color depending on the element's writing mode, directionality, and text orientation. It corresponds to the [border-top-color--](/docs/Web/CSS/border-top-color), [border-right-color--](/docs/Web/CSS/border-right-color), [border-bottom-color--](/docs/Web/CSS/border-bottom-color), or [border-left-color--](/docs/Web/CSS/border-left-color) property depending on the values defined for [writing-mode--](/docs/Web/CSS/writing-mode), [direction--](/docs/Web/CSS/direction), and [text-orientation--](/docs/Web/CSS/text-orientation).",
  "css/border-block-start-style": "The **`border-block-start-style`** [CSS](/en-US/docs/Web/CSS) property defines the style of the logical block start border of an element, which maps to a physical border style depending on the element's writing mode, directionality, and text orientation. It corresponds to the [border-top-style--](/docs/Web/CSS/border-top-style), [border-right-style--](/docs/Web/CSS/border-right-style), [border-bottom-style--](/docs/Web/CSS/border-bottom-style), or [border-left-style--](/docs/Web/CSS/border-left-style) property depending on the values defined for [writing-mode--](/docs/Web/CSS/writing-mode), [direction--](/docs/Web/CSS/direction), and [text-orientation--](/docs/Web/CSS/text-orientation).",
  "css/border-block-start-width": "The **`border-block-start-width`** [CSS](/en-US/docs/Web/CSS) property defines the width of the logical block-start border of an element, which maps to a physical border width depending on the element's writing mode, directionality, and text orientation. It corresponds to the [border-top-width--](/docs/Web/CSS/border-top-width), [border-right-width--](/docs/Web/CSS/border-right-width), [border-bottom-width--](/docs/Web/CSS/border-bottom-width), or [border-left-width--](/docs/Web/CSS/border-left-width) property depending on the values defined for [writing-mode--](/docs/Web/CSS/writing-mode), [direction--](/docs/Web/CSS/direction), and [text-orientation--](/docs/Web/CSS/text-orientation).",
  "css/border-block-style": "The **`border-block-style`** [CSS](/en-US/docs/Web/CSS) property defines the style of the logical block borders of an element, which maps to a physical border style depending on the element's writing mode, directionality, and text orientation. It corresponds to the [border-top-style--](/docs/Web/CSS/border-top-style) and [border-bottom-style--](/docs/Web/CSS/border-bottom-style), or [border-left-style--](/docs/Web/CSS/border-left-style) and [border-right-style--](/docs/Web/CSS/border-right-style) properties depending on the values defined for [writing-mode--](/docs/Web/CSS/writing-mode), [direction--](/docs/Web/CSS/direction), and [text-orientation--](/docs/Web/CSS/text-orientation).",
  "css/border-block-width": "The **`border-block-width`** [CSS](/en-US/docs/Web/CSS) property defines the width of the logical block borders of an element, which maps to a physical border width depending on the element's writing mode, directionality, and text orientation. It corresponds to the [border-top-width--](/docs/Web/CSS/border-top-width) and [border-bottom-width--](/docs/Web/CSS/border-bottom-width), or [border-left-width--](/docs/Web/CSS/border-left-width), and [border-right-width--](/docs/Web/CSS/border-right-width) property depending on the values defined for [writing-mode--](/docs/Web/CSS/writing-mode), [direction--](/docs/Web/CSS/direction), and [text-orientation--](/docs/Web/CSS/text-orientation).",
  "css/border-bottom": "The **`border-bottom`** [shorthand](/en-US/docs/Web/CSS/Shorthand_properties) [CSS](/en-US/docs/Web/CSS) property sets an element's bottom [border](/en-US/docs/Web/CSS/border). It sets the values of [border-bottom-width--](/docs/Web/CSS/border-bottom-width), [border-bottom-style--](/docs/Web/CSS/border-bottom-style) and [border-bottom-color--](/docs/Web/CSS/border-bottom-color).",
  "css/border-bottom-color": "The **`border-bottom-color`** CSS property sets the color of an element's bottom [border](/en-US/docs/Web/CSS/border). It can also be set with the shorthand CSS properties [border-color--](/docs/Web/CSS/border-color) or [border-bottom--](/docs/Web/CSS/border-bottom).",
  "css/border-bottom-left-radius": "The **`border-bottom-left-radius`** [CSS](/en-US/docs/Web/CSS) property rounds the bottom-left corner of an element by specifying the radius (or the radius of the semi-major and semi-minor axes) of the ellipse defining the curvature of the corner.",
  "css/border-bottom-right-radius": "The **`border-bottom-right-radius`** [CSS](/en-US/docs/Web/CSS) property rounds the bottom-right corner of an element by specifying the radius (or the radius of the semi-major and semi-minor axes) of the ellipse defining the curvature of the corner.",
  "css/border-bottom-style": "The **`border-bottom-style`** [CSS](/en-US/docs/Web/CSS) property sets the line style of an element's bottom [border--](/docs/Web/CSS/border).",
  "css/border-bottom-width": "The **`border-bottom-width`** [CSS](/en-US/docs/Web/CSS) property sets the width of the bottom border of an element.",
  "css/border-collapse": "The **`border-collapse`** [CSS](/en-US/docs/Web/CSS) property sets whether cells inside a [table--](/docs/Web/HTML/Element/table) have shared or separate borders.",
  "css/border-color": "The **`border-color`** [shorthand](/en-US/docs/Web/CSS/Shorthand_properties) [CSS](/en-US/docs/Web/CSS) property sets the color of an element's border.",
  "css/border-end-end-radius": "The **`border-end-end-radius`** [CSS](/en-US/docs/Web/CSS) property defines a logical border radius on an element, which maps to a physical border radius that depends on the element's [writing-mode--](/docs/Web/CSS/writing-mode), [direction--](/docs/Web/CSS/direction), and [text-orientation--](/docs/Web/CSS/text-orientation). This is useful when building styles to work regardless of the [text orientation](/en-US/docs/Web/CSS/text-orientation) and [writing mode](/en-US/docs/Web/CSS/CSS_writing_modes).",
  "css/border-end-start-radius": "The **`border-end-start-radius`** [CSS](/en-US/docs/Web/CSS) property defines a logical border radius on an element, which maps to a physical border radius depending on the element's [writing-mode--](/docs/Web/CSS/writing-mode), [direction--](/docs/Web/CSS/direction), and [text-orientation--](/docs/Web/CSS/text-orientation). This is useful when building styles to work regardless of the [text orientation](/en-US/docs/Web/CSS/text-orientation) and [writing mode](/en-US/docs/Web/CSS/CSS_writing_modes).",
  "css/border-image": "The **`border-image`** [CSS](/en-US/docs/Web/CSS) property draws an image around a given element. It replaces the element's regular [border](/en-US/docs/Web/CSS/border).",
  "css/border-image-outset": "The **`border-image-outset`** [CSS](/en-US/docs/Web/CSS) property sets the distance by which an element's [border image](/en-US/docs/Web/CSS/border-image) is set out from its border box.",
  "css/border-image-repeat": "The **`border-image-repeat`** [CSS](/en-US/docs/Web/CSS) property defines how the [edge regions](/en-US/docs/Web/CSS/border-image-slice#edge-regions) and [middle region](/en-US/docs/Web/CSS/border-image-slice#middle-region) of a source image are adjusted to fit the dimensions of an element's [border image](/en-US/docs/Web/CSS/border-image). The middle region can be displayed by using the keyword \"fill\" in the border-image-slice property.",
  "css/border-image-slice": "The **`border-image-slice`** [CSS](/en-US/docs/Web/CSS) property divides the image specified by [border-image-source--](/docs/Web/CSS/border-image-source) into regions. These regions form the components of an element's [border image](/en-US/docs/Web/CSS/border-image).",
  "css/border-image-source": "The **`border-image-source`** [CSS](/en-US/docs/Web/CSS) property sets the source image used to create an element's [border image](/en-US/docs/Web/CSS/border-image).",
  "css/border-image-width": "The **`border-image-width`** [CSS](/en-US/docs/Web/CSS) property sets the width of an element's [border image](/en-US/docs/Web/CSS/border-image).",
  "css/border-inline": "The **`border-inline`** [CSS](/en-US/docs/Web/CSS) property is a [shorthand property](/en-US/docs/Web/CSS/Shorthand_properties) for setting the individual logical inline border property values in a single place in the style sheet.",
  "css/border-inline-color": "The **`border-inline-color`** [CSS](/en-US/docs/Web/CSS) property defines the color of the logical inline borders of an element, which maps to a physical border color depending on the element's writing mode, directionality, and text orientation. It corresponds to the [border-top-color--](/docs/Web/CSS/border-top-color) and [border-bottom-color--](/docs/Web/CSS/border-bottom-color), or [border-right-color--](/docs/Web/CSS/border-right-color) and [border-left-color--](/docs/Web/CSS/border-left-color) property depending on the values defined for [writing-mode--](/docs/Web/CSS/writing-mode), [direction--](/docs/Web/CSS/direction), and [text-orientation--](/docs/Web/CSS/text-orientation).",
  "css/border-inline-end": "The **`border-inline-end`** [CSS](/en-US/docs/Web/CSS) property is a [shorthand property](/en-US/docs/Web/CSS/Shorthand_properties) for setting the individual logical inline-end border property values in a single place in the style sheet.",
  "css/border-inline-end-color": "The **`border-inline-end-color`** [CSS](/en-US/docs/Web/CSS) property defines the color of the logical inline-end border of an element, which maps to a physical border color depending on the element's writing mode, directionality, and text orientation. It corresponds to the [border-top-color--](/docs/Web/CSS/border-top-color), [border-right-color--](/docs/Web/CSS/border-right-color), [border-bottom-color--](/docs/Web/CSS/border-bottom-color), or [border-left-color--](/docs/Web/CSS/border-left-color) property depending on the values defined for [writing-mode--](/docs/Web/CSS/writing-mode), [direction--](/docs/Web/CSS/direction), and [text-orientation--](/docs/Web/CSS/text-orientation).",
  "css/border-inline-end-style": "The **`border-inline-end-style`** [CSS](/en-US/docs/Web/CSS) property defines the style of the logical inline end border of an element, which maps to a physical border style depending on the element's writing mode, directionality, and text orientation. It corresponds to the [border-top-style--](/docs/Web/CSS/border-top-style), [border-right-style--](/docs/Web/CSS/border-right-style), [border-bottom-style--](/docs/Web/CSS/border-bottom-style), or [border-left-style--](/docs/Web/CSS/border-left-style) property depending on the values defined for [writing-mode--](/docs/Web/CSS/writing-mode), [direction--](/docs/Web/CSS/direction), and [text-orientation--](/docs/Web/CSS/text-orientation).",
  "css/border-inline-end-width": "The **`border-inline-end-width`** [CSS](/en-US/docs/Web/CSS) property defines the width of the logical inline-end border of an element, which maps to a physical border width depending on the element's writing mode, directionality, and text orientation. It corresponds to the [border-top-width--](/docs/Web/CSS/border-top-width), [border-right-width--](/docs/Web/CSS/border-right-width), [border-bottom-width--](/docs/Web/CSS/border-bottom-width), or [border-left-width--](/docs/Web/CSS/border-left-width) property depending on the values defined for [writing-mode--](/docs/Web/CSS/writing-mode), [direction--](/docs/Web/CSS/direction), and [text-orientation--](/docs/Web/CSS/text-orientation).",
  "css/border-inline-start": "The **`border-inline-start`** [CSS](/en-US/docs/Web/CSS) property is a [shorthand property](/en-US/docs/Web/CSS/Shorthand_properties) for setting the individual logical inline-start border property values in a single place in the style sheet.",
  "css/border-inline-start-color": "The **`border-inline-start-color`** [CSS](/en-US/docs/Web/CSS) property defines the color of the logical inline start border of an element, which maps to a physical border color depending on the element's writing mode, directionality, and text orientation. It corresponds to the [border-top-color--](/docs/Web/CSS/border-top-color), [border-right-color--](/docs/Web/CSS/border-right-color), [border-bottom-color--](/docs/Web/CSS/border-bottom-color), or [border-left-color--](/docs/Web/CSS/border-left-color) property depending on the values defined for [writing-mode--](/docs/Web/CSS/writing-mode), [direction--](/docs/Web/CSS/direction), and [text-orientation--](/docs/Web/CSS/text-orientation).",
  "css/border-inline-start-style": "The **`border-inline-start-style`** [CSS](/en-US/docs/Web/CSS) property defines the style of the logical inline start border of an element, which maps to a physical border style depending on the element's writing mode, directionality, and text orientation. It corresponds to the [border-top-style--](/docs/Web/CSS/border-top-style), [border-right-style--](/docs/Web/CSS/border-right-style), [border-bottom-style--](/docs/Web/CSS/border-bottom-style), or [border-left-style--](/docs/Web/CSS/border-left-style) property depending on the values defined for [writing-mode--](/docs/Web/CSS/writing-mode), [direction--](/docs/Web/CSS/direction), and [text-orientation--](/docs/Web/CSS/text-orientation).",
  "css/border-inline-start-width": "The **`border-inline-start-width`** [CSS](/en-US/docs/Web/CSS) property defines the width of the logical inline-start border of an element, which maps to a physical border width depending on the element's writing mode, directionality, and text orientation. It corresponds to the [border-top-width--](/docs/Web/CSS/border-top-width), [border-right-width--](/docs/Web/CSS/border-right-width), [border-bottom-width--](/docs/Web/CSS/border-bottom-width), or [border-left-width--](/docs/Web/CSS/border-left-width) property depending on the values defined for [writing-mode--](/docs/Web/CSS/writing-mode), [direction--](/docs/Web/CSS/direction), and [text-orientation--](/docs/Web/CSS/text-orientation).",
  "css/border-inline-style": "The **`border-inline-style`** [CSS](/en-US/docs/Web/CSS) property defines the style of the logical inline borders of an element, which maps to a physical border style depending on the element's writing mode, directionality, and text orientation. It corresponds to the [border-top-style--](/docs/Web/CSS/border-top-style) and [border-bottom-style--](/docs/Web/CSS/border-bottom-style), or [border-left-style--](/docs/Web/CSS/border-left-style) and [border-right-style--](/docs/Web/CSS/border-right-style) properties depending on the values defined for [writing-mode--](/docs/Web/CSS/writing-mode), [direction--](/docs/Web/CSS/direction), and [text-orientation--](/docs/Web/CSS/text-orientation).",
  "css/border-inline-width": "The **`border-inline-width`** [CSS](/en-US/docs/Web/CSS) property defines the width of the logical inline borders of an element, which maps to a physical border width depending on the element's writing mode, directionality, and text orientation. It corresponds to the [border-top-width--](/docs/Web/CSS/border-top-width) and [border-bottom-width--](/docs/Web/CSS/border-bottom-width), or [border-left-width--](/docs/Web/CSS/border-left-width), and [border-right-width--](/docs/Web/CSS/border-right-width) property depending on the values defined for [writing-mode--](/docs/Web/CSS/writing-mode), [direction--](/docs/Web/CSS/direction), and [text-orientation--](/docs/Web/CSS/text-orientation).",
  "css/border-left": "The **`border-left`** [shorthand](/en-US/docs/Web/CSS/Shorthand_properties) [CSS](/en-US/docs/Web/CSS) property sets all the properties of an element's left [border](/en-US/docs/Web/CSS/border).",
  "css/border-left-color": "The **`border-left-color`** CSS property sets the color of an element's left [border](/en-US/docs/Web/CSS/border). It can also be set with the shorthand CSS properties [border-color--](/docs/Web/CSS/border-color) or [border-left--](/docs/Web/CSS/border-left).",
  "css/border-left-style": "The **`border-left-style`** [CSS](/en-US/docs/Web/CSS) property sets the line style of an element's left [border--](/docs/Web/CSS/border).",
  "css/border-left-width": "The **`border-left-width`** [CSS](/en-US/docs/Web/CSS) property sets the width of the left border of an element.",
  "css/border-radius": "The **`border-radius`** [CSS](/en-US/docs/Web/CSS) property rounds the corners of an element's outer border edge. You can set a single radius to make circular corners, or two radii to make elliptical corners.",
  "css/border-right": "The **`border-right`** [shorthand](/en-US/docs/Web/CSS/Shorthand_properties) [CSS](/en-US/docs/Web/CSS) property sets all the properties of an element's right [border](/en-US/docs/Web/CSS/border).",
  "css/border-right-color": "The **`border-right-color`** CSS property sets the color of an element's right [border](/en-US/docs/Web/CSS/border). It can also be set with the shorthand CSS properties [border-color--](/docs/Web/CSS/border-color) or [border-right--](/docs/Web/CSS/border-right).",
  "css/border-right-style": "The **`border-right-style`** [CSS](/en-US/docs/Web/CSS) property sets the line style of an element's right [border--](/docs/Web/CSS/border).",
  "css/border-right-width": "The **`border-right-width`** [CSS](/en-US/docs/Web/CSS) property sets the width of the right border of an element.",
  "css/border-spacing": "The **`border-spacing`** [CSS](/en-US/docs/Web/CSS) property sets the distance between the borders of adjacent cells in a [table--](/docs/Web/HTML/Element/table). This property applies only when [border-collapse--](/docs/Web/CSS/border-collapse) is `separate`.",
  "css/border-start-end-radius": "The **`border-start-end-radius`** [CSS](/en-US/docs/Web/CSS) property defines a logical border radius on an element, which maps to a physical border radius depending on the element's [writing-mode--](/docs/Web/CSS/writing-mode), [direction--](/docs/Web/CSS/direction), and [text-orientation--](/docs/Web/CSS/text-orientation). This is useful when building styles to work regardless of the [text orientation](/en-US/docs/Web/CSS/text-orientation) and [writing mode](/en-US/docs/Web/CSS/CSS_writing_modes).",
  "css/border-start-start-radius": "The **`border-start-start-radius`** [CSS](/en-US/docs/Web/CSS) property defines a logical border radius on an element, which maps to a physical border radius that depends on the element's [writing-mode--](/docs/Web/CSS/writing-mode), [direction--](/docs/Web/CSS/direction), and [text-orientation--](/docs/Web/CSS/text-orientation). This is useful when building styles to work regardless of the [text orientation](/en-US/docs/Web/CSS/text-orientation) and [writing mode](/en-US/docs/Web/CSS/CSS_writing_modes).",
  "css/border-style": "The **`border-style`** [shorthand](/en-US/docs/Web/CSS/Shorthand_properties) [CSS](/en-US/docs/Web/CSS) property sets the line style for all four sides of an element's border.",
  "css/border-top": "The **`border-top`** [shorthand](/en-US/docs/Web/CSS/Shorthand_properties) [CSS](/en-US/docs/Web/CSS) property sets all the properties of an element's top [border](/en-US/docs/Web/CSS/border).",
  "css/border-top-color": "The **`border-top-color`** CSS property sets the color of an element's top [border](/en-US/docs/Web/CSS/border). It can also be set with the shorthand CSS properties [border-color--](/docs/Web/CSS/border-color) or [border-top--](/docs/Web/CSS/border-top).",
  "css/border-top-left-radius": "The **`border-top-left-radius`** [CSS](/en-US/docs/Web/CSS) property rounds the top-left corner of an element by specifying the radius (or the radius of the semi-major and semi-minor axes) of the ellipse defining the curvature of the corner.",
  "css/border-top-right-radius": "The **`border-top-right-radius`** [CSS](/en-US/docs/Web/CSS) property rounds the top-right corner of an element by specifying the radius (or the radius of the semi-major and semi-minor axes) of the ellipse defining the curvature of the corner.",
  "css/border-top-style": "The **`border-top-style`** [CSS](/en-US/docs/Web/CSS) property sets the line style of an element's top [border--](/docs/Web/CSS/border).",
  "css/border-top-width": "The **`border-top-width`** [CSS](/en-US/docs/Web/CSS) property sets the width of the top border of an element.",
  "css/border-width": "The **`border-width`** [shorthand](/en-US/docs/Web/CSS/Shorthand_properties) [CSS](/en-US/docs/Web/CSS) property sets the width of an element's border.",
  "css/bottom": "The **`bottom`** [CSS](/en-US/docs/Web/CSS) property participates in setting the vertical position of a [positioned element](/en-US/docs/Web/CSS/position). It has no effect on non-positioned elements.",
  "css/box-align": "> **Warning:** This is a property of the original CSS Flexible Box Layout Module draft, and has been replaced by a newer standard.",
  "css/box-decoration-break": "The **`box-decoration-break`** [CSS](/en-US/docs/Web/CSS) property specifies how an element's [fragments](/en-US/docs/Web/CSS/CSS_fragmentation) should be rendered when broken across multiple lines, columns, or pages.",
  "css/box-direction": "> **Warning:** This is a property of the original CSS Flexible Box Layout Module draft, and has been replaced by a newer standard. The `-moz-box-direction` will only be used for XUL while the previous standard `box-direction` has been replaced by `flex-direction`. See [flexbox](/en-US/docs/Web/CSS/CSS_flexible_box_layout/Basic_concepts_of_flexbox) for information about the current standard.",
  "css/box-edge": "The **`<box-edge>`** value types represent a [box edge](/en-US/docs/Web/CSS/CSS_box_model/Introduction_to_the_CSS_box_model) keyword, such as [`content-box`](#content-box) and [`border-box`](#border-box). The box-edge keywords are used to define different aspects of an element's box model and how elements are positioned and rendered on screen.",
  "css/box-flex": "> **Warning:** This is a property for controlling parts of the XUL box model. It does not match either the old CSS Flexible Box Layout Module drafts for '`box-flex`' (which were based on this property) or the behavior of '`-webkit-box-flex`' (which is based on those drafts). See [flexbox](/en-US/docs/Web/CSS/CSS_flexible_box_layout/Basic_concepts_of_flexbox) for information about the current standard.",
  "css/box-flex-group": "> **Warning:** This is a property of the original CSS Flexible Box Layout Module draft. It has been replaced in the specification. See [flexbox](/en-US/docs/Web/CSS/CSS_flexible_box_layout/Basic_concepts_of_flexbox) for information about the current standard.",
  "css/box-lines": "> **Warning:** This is a property of the original CSS Flexible Box Layout Module draft. It has been replaced in the specification. See [flexbox](/en-US/docs/Web/CSS/CSS_flexible_box_layout/Basic_concepts_of_flexbox) for information about the current standard.",
  "css/box-ordinal-group": "> **Warning:** This is a property of the original CSS Flexible Box Layout Module draft. It has been replaced in the specification. See [flexbox](/en-US/docs/Web/CSS/CSS_flexible_box_layout/Basic_concepts_of_flexbox) for information about the current standard.",
  "css/box-orient": "> **Warning:** This is a property of the original CSS Flexible Box Layout Module draft, and has been replaced by a newer standard. See [flexbox](/en-US/docs/Web/CSS/CSS_flexible_box_layout/Basic_concepts_of_flexbox) for information about the current standard.",
  "css/box-pack": "> **Warning:** This is a property of the original CSS Flexible Box Layout Module draft, and has been replaced by a newer standard. See [flexbox](/en-US/docs/Web/CSS/CSS_flexible_box_layout/Basic_concepts_of_flexbox) for information about the current standard.",
  "css/box-shadow": "The **`box-shadow`** [CSS](/en-US/docs/Web/CSS) property adds shadow effects around an element's frame. You can set multiple effects separated by commas. A box shadow is described by X and Y offsets relative to the element, blur and spread radius, and color.",
  "css/box-sizing": "The **`box-sizing`** [CSS](/en-US/docs/Web/CSS) property sets how the total width and height of an element is calculated.",
  "css/break-after": "The **`break-after`** [CSS](/en-US/docs/Web/CSS) property sets how page, column, or region breaks should behave after a generated box. If there is no generated box, the property is ignored.",
  "css/break-before": "The **`break-before`** [CSS](/en-US/docs/Web/CSS) property sets how page, column, or region breaks should behave before a generated box. If there is no generated box, the property is ignored.",
  "css/break-inside": "The **`break-inside`** [CSS](/en-US/docs/Web/CSS) property sets how page, column, or region breaks should behave inside a generated box. If there is no generated box, the property is ignored.",
  "css/calc": "The **`calc()`** [CSS](/en-US/docs/Web/CSS) [function](/en-US/docs/Web/CSS/CSS_Functions) lets you perform calculations when specifying CSS property values. It can be used with [&lt;length&gt;--](/docs/Web/CSS/&lt;length&gt;), [&lt;frequency&gt;--](/docs/Web/CSS/&lt;frequency&gt;), [&lt;angle&gt;--](/docs/Web/CSS/&lt;angle&gt;), [&lt;time&gt;--](/docs/Web/CSS/&lt;time&gt;), [&lt;percentage&gt;--](/docs/Web/CSS/&lt;percentage&gt;), [&lt;number&gt;--](/docs/Web/CSS/&lt;number&gt;), or [&lt;integer&gt;--](/docs/Web/CSS/&lt;integer&gt;) values.",
  "css/calc-constant": "The **`<calc-constant>`** [CSS](/en-US/docs/Web/CSS) [data type](/en-US/docs/Web/CSS/CSS_Types) represents well-defined constants such as `e` and `pi`. Rather than require authors to manually type out several digits of these mathematical constants or calculate them, a few of them are provided directly by CSS for convenience.",
  "css/calc-sum": "The **`<calc-sum>`** [CSS](/en-US/docs/Web/CSS) [data type](/en-US/docs/Web/CSS/CSS_Types) represents an expression which performs a calculation in any [CSS math function](/en-US/docs/Web/CSS/CSS_Functions#math_functions). The expression executes a basic arithmetic operation of addition and subtraction between two values.",
  "css/caption-side": "The **`caption-side`** [CSS](/en-US/docs/Web/CSS) property puts the content of a table's [caption--](/docs/Web/HTML/Element/caption) on the specified side. The values are relative to the [writing-mode--](/docs/Web/CSS/writing-mode) of the table.",
  "css/caret-color": "The **`caret-color`** CSS property sets the color of the **insertion caret**, the visible marker where the next character typed will be inserted. This is sometimes referred to as the **text input cursor**. The caret appears in elements such as [input--](/docs/Web/HTML/Element/input) or those with the [`contenteditable`](/en-US/docs/Web/HTML/Global_attributes#contenteditable) attribute. The caret is typically a thin vertical line that flashes to help make it more noticeable. By default, it is black, but its color can be altered with this property.",
  "css/cascade": "The **cascade** is an algorithm that defines how user agents combine property values originating from different sources. The cascade defines the origin and layer that takes precedence when declarations in more than one [origin](#origin_types), [cascade layer](/en-US/docs/Web/CSS/@layer), or [@scope--](/docs/Web/CSS/@scope) block set a value for a property on an element.",
  "css/child_combinator": "The **child combinator** (`>`) is placed between two CSS selectors. It matches only those elements matched by the second selector that are the direct children of elements matched by the first.",
  "css/clamp": "The **`clamp()`** [CSS](/en-US/docs/Web/CSS) [function](/en-US/docs/Web/CSS/CSS_Functions) clamps a middle value within a range of values between a defined minimum bound and a maximum bound. The function takes three parameters: a minimum value, a preferred value, and a maximum allowed value.",
  "css/class_selectors": "The [CSS](/en-US/docs/Web/CSS) **class selector** matches elements based on the contents of their [`class`](/en-US/docs/Web/HTML/Global_attributes#class) attribute.",
  "css/clear": "The **`clear`** [CSS](/en-US/docs/Web/CSS) property sets whether an element must be moved below (cleared) [floating](/en-US/docs/Web/CSS/float) elements that precede it. The `clear` property applies to floating and non-floating elements.",
  "css/clip": "> **Warning:** Where possible, authors are encouraged to use the newer [clip-path--](/docs/Web/CSS/clip-path) property instead.",
  "css/clip-path": "The **`clip-path`** [CSS](/en-US/docs/Web/CSS) property creates a clipping region that sets what part of an element should be shown. Parts that are inside the region are shown, while those outside are hidden.",
  "css/color": "The **`color`** CSS property sets the foreground [color value](/en-US/docs/Web/CSS/color_value) of an element's text and [text decorations](/en-US/docs/Web/CSS/text-decoration), and sets the [`currentcolor`](/en-US/docs/Web/CSS/color_value#currentcolor_keyword) value. `currentcolor` may be used as an indirect value on _other_ properties and is the default for other color properties, such as [border-color--](/docs/Web/CSS/border-color).",
  "css/color-interpolation": "The `color-interpolation` CSS property is used in SVG to specify which color space to use for [linearGradient--](/docs/Web/SVG/Element/linearGradient) and [radialGradient--](/docs/Web/SVG/Element/radialGradient) SVG elements.",
  "css/color-interpolation-method": "The **`<color-interpolation-method>`** [CSS](/en-US/docs/Web/CSS) [data type](/en-US/docs/Web/CSS/CSS_Types) represents the color space used for interpolation between [&lt;color&gt;--](/docs/Web/CSS/&lt;color&gt;) values. It can be used to override the default interpolation color space for color-related functional notations such as [color-mix()--](/docs/Web/CSS/color_value/color-mix) and [linear-gradient()--](/docs/Web/CSS/gradient/linear-gradient).",
  "css/color-scheme": "The **`color-scheme`** [CSS](/en-US/docs/Web/CSS) property allows an element to indicate which color schemes it can comfortably be rendered in.",
  "css/color_value": "The **`<color>`** [CSS](/en-US/docs/Web/CSS) [data type](/en-US/docs/Web/CSS/CSS_Types) represents a color.\nA `<color>` may also include an [alpha-channel](https://en.wikipedia.org/wiki/Alpha_compositing) _transparency value_, indicating how the color should [composite](https://www.w3.org/TR/compositing-1/#simplealphacompositing) with its background.",
  "css/column-count": "The **`column-count`** [CSS](/en-US/docs/Web/CSS) property breaks an element's content into the specified number of columns.",
  "css/column-fill": "The **`column-fill`** [CSS](/en-US/docs/Web/CSS) property controls how an element's contents are balanced when broken into columns.",
  "css/column-gap": "The **`column-gap`** [CSS](/en-US/docs/Web/CSS) property sets the size of the gap ([gutter--](/docs/Glossary/Gutters)) between an element's columns.",
  "css/column-rule": "The **`column-rule`** [shorthand](/en-US/docs/Web/CSS/Shorthand_properties) [CSS](/en-US/docs/Web/CSS) property sets the width, style, and color of the line drawn between columns in a multi-column layout.",
  "css/column-rule-color": "The **`column-rule-color`** [CSS](/en-US/docs/Web/CSS) property sets the color of the line drawn between columns in a multi-column layout.",
  "css/column-rule-style": "The **`column-rule-style`** [CSS](/en-US/docs/Web/CSS) property sets the style of the line drawn between columns in a multi-column layout.",
  "css/column-rule-width": "The **`column-rule-width`** [CSS](/en-US/docs/Web/CSS) property sets the width of the line drawn between columns in a multi-column layout.",
  "css/column-span": "The **`column-span`** [CSS](/en-US/docs/Web/CSS) property makes it possible for an element to span across all columns when its value is set to `all`.",
  "css/column-width": "The **`column-width`** [CSS](/en-US/docs/Web/CSS) property sets the ideal column width in a multi-column layout. The container will have as many columns as can fit without any of them having a width less than the `column-width` value. If the width of the container is narrower than the specified value, the single column's width will be smaller than the declared column width.",
  "css/column_combinator": "The **column combinator** (`||`) is placed between two CSS selectors. It matches only those elements matched by the second selector that belong to the column elements matched by the first.",
  "css/columns": "The **`columns`** [CSS](/en-US/docs/Web/CSS) shorthand property sets the number of columns to use when drawing an element's contents, as well as those columns' widths.",
  "css/comments": "A CSS **comment** is used to add explanatory notes to the code or to prevent the browser from interpreting specific parts of the style sheet. By design, comments have no effect on the layout of a document.",
  "css/computed_value": "The **computed value** of a [CSS](/en-US/docs/Web/CSS) property is the value that is transferred from parent to child during inheritance. It is calculated from the [specified value](/en-US/docs/Web/CSS/specified_value) by:",
  "css/contain": "The **`contain`** [CSS](/en-US/docs/Web/CSS) property indicates that an element and its contents are, as much as possible, independent from the rest of the document tree.\nContainment enables isolating a subsection of the DOM, providing performance benefits by limiting calculations of layout, style, paint, size, or any combination to a DOM subtree rather than the entire page. Containment can also be used to scope CSS counters and quotes.",
  "css/contain-intrinsic-block-size": "The **`contain-intrinsic-block-size`** [CSS](/en-US/docs/Web/CSS) [logical property](/en-US/docs/Web/CSS/CSS_logical_properties_and_values) defines the block size of an element that a browser can use for layout when the element is subject to [size containment](/en-US/docs/Web/CSS/CSS_containment#size_containment).",
  "css/contain-intrinsic-height": "The **`contain-intrinsic-height`** [CSS](/en-US/docs/Web/CSS) property sets the height of an element that a browser can use for layout when the element is subject to [size containment](/en-US/docs/Web/CSS/CSS_containment#size_containment).",
  "css/contain-intrinsic-inline-size": "The **`contain-intrinsic-inline-size`** [CSS](/en-US/docs/Web/CSS) [logical property](/en-US/docs/Web/CSS/CSS_logical_properties_and_values) defines the inline-size of an element that a browser can use for layout when the element is subject to [size containment](/en-US/docs/Web/CSS/CSS_containment#size_containment).",
  "css/contain-intrinsic-size": "The **`contain-intrinsic-size`** [CSS](/en-US/docs/Web/CSS) [shorthand property](/en-US/docs/Web/CSS/Shorthand_properties) sets the size of an element that a browser will use for layout when the element is subject to [size containment](/en-US/docs/Web/CSS/CSS_containment/Using_CSS_containment#size_containment).",
  "css/contain-intrinsic-width": "The **`contain-intrinsic-width`** [CSS](/en-US/docs/Web/CSS) property sets the width of an element that a browser will use for layout when the element is subject to [size containment](/en-US/docs/Web/CSS/CSS_containment#size_containment).",
  "css/container": "The **container** [shorthand](/en-US/docs/Web/CSS/Shorthand_properties) [CSS](/en-US/docs/Web/CSS) property establishes the element as a query container and specifies the name and type of the [containment context](/en-US/docs/Web/CSS/CSS_containment/Container_queries#naming_containment_contexts) used in a [container query](/en-US/docs/Web/CSS/CSS_containment/Container_queries).",
  "css/container-name": "The **container-name** [CSS](/en-US/docs/Web/CSS) property specifies a list of query container names used by the [@container](/en-US/docs/Web/CSS/@container) at-rule in a [container query](/en-US/docs/Web/CSS/CSS_containment/Container_queries).\nA container query will apply styles to elements based on the size of the nearest ancestor with a containment context.\nWhen a containment context is given a name, it can be specifically targeted using the [@container--](/docs/Web/CSS/@container) at-rule instead of the nearest ancestor with containment.",
  "css/container-type": "An element can be established as a query container for [container size queries](/en-US/docs/Web/CSS/CSS_containment/Container_queries) using the **`container-type`** [CSS](/en-US/docs/Web/CSS) property. `container-type` is used to define the type of size containment used in a container query.",
  "css/containing_block": "The size and position of an element are often impacted by its **containing block**. Most often, the containing block is the [content area](/en-US/docs/Web/CSS/CSS_box_model/Introduction_to_the_CSS_box_model#content_area) of an element's nearest [block-level](/en-US/docs/Glossary/Block-level_content) ancestor, but this is not always the case. In this article, we examine the factors that determine an element's containing block.",
  "css/content": "The **`content`** [CSS](/en-US/docs/Web/CSS) property replaces content with a generated value. It can be used to define what is rendered inside an element or pseudo-element. For elements, the `content` property specifies whether the element renders normally (`normal` or `none`) or is replaced with an image (and associated \"alt\" text). For pseudo-elements and margin boxes, `content` defines the content as images, text, both, or none, which determines whether the element renders at all.",
  "css/content-visibility": "The **`content-visibility`** [CSS](/en-US/docs/Web/CSS) property controls whether or not an element renders its contents at all, along with forcing a strong set of containments, allowing user agents to potentially omit large swathes of layout and rendering work until it becomes needed. It enables the user agent to skip an element's rendering work (including layout and painting) until it is needed — which makes the initial page load much faster.",
  "css/cos": "The **`cos()`** [CSS](/en-US/docs/Web/CSS) [function](/en-US/docs/Web/CSS/CSS_Functions) is a trigonometric function that returns the cosine of a number, which is a value between `-1` and `1`. The function contains a single calculation that must resolve to either a [&lt;number&gt;--](/docs/Web/CSS/&lt;number&gt;) or an [&lt;angle&gt;--](/docs/Web/CSS/&lt;angle&gt;) by interpreting the result of the argument as radians. That is, `cos(45deg)`, `cos(0.125turn)`, and `cos(3.14159 / 4)` all represent the same value, approximately `0.707`.",
  "css/counter": "The **`counter()`** [CSS](/en-US/docs/Web/CSS) [function](/en-US/docs/Web/CSS/CSS_Functions) returns a string representing the current value of the named counter, if there is one.",
  "css/counter-increment": "The **`counter-increment`** [CSS](/en-US/docs/Web/CSS) property can be used to increase or decrease the value of the named [CSS counters](/en-US/docs/Web/CSS/CSS_counter_styles/Using_CSS_counters) by the specified values, or to prevent all counters or an individual counter's value from being changed.",
  "css/counter-reset": "The **`counter-reset`** [CSS](/en-US/docs/Web/CSS) property creates named [CSS counters](/en-US/docs/Web/CSS/CSS_counter_styles/Using_CSS_counters) and initializes them to a specific value. It supports creating counters that count up from one to the number of elements, as well as those that count down from the number of elements to one.",
  "css/counter-set": "The **`counter-set`** [CSS](/en-US/docs/Web/CSS) property sets [CSS counters](/en-US/docs/Web/CSS/CSS_counter_styles/Using_CSS_counters) to the given values.",
  "css/counters": "The **`counters()`** [CSS](/en-US/docs/Web/CSS) [function](/en-US/docs/Web/CSS/CSS_Functions) enables combining markers when nesting counters. The function returns a string that concatenates the current values of the named and nested counters, if any are present, with the string provided. The third, optional parameter enables defining the list style.",
  "css/cross-fade": "The **`cross-fade()`** [CSS](/en-US/docs/Web/CSS) [function](/en-US/docs/Web/CSS/CSS_Functions) can be used to blend two or more images at a defined transparency.\nIt can be used for many simple image manipulations, such as tinting an image with a solid color or highlighting a particular area of the page by combining an image with a radial gradient.",
  "css/css_animated_properties": "[CSS Animations](/en-US/docs/Web/CSS/CSS_animations) and [Transitions](/en-US/docs/Web/CSS/CSS_transitions) rely on the concept of **animatable** properties, and all CSS properties are animatable unless otherwise specified. Each property's _animation type_ determines how values [combine](https://drafts.csswg.org/css-values/#combining-values) - interpolate, add, or accumulate - for this property. Transitions only involve interpolation, whereas animations may use all three combination methods.",
  "css/css_animations": "The **CSS animations** module lets you animate the values of CSS properties, such as background-position and transform, over time by using keyframes. Each keyframe describes how the animated element should render at a given time during the animation sequence. You can use the properties in the animations module to control the duration, number of repetitions, delayed start, and other aspects of an animation.",
  "css/css_backgrounds_and_borders": "The **CSS backgrounds and borders** module provides properties for adding borders, rounded corners, and box shadows to elements.",
  "css/css_basic_user_interface": "The **CSS basic user interface** module lets you define the rendering and functionality of features related to the user interface including outline properties, visual feedback to pointing device and keyboard, and altering the default appearance of UI widgets.",
  "css/css_box_alignment": "The **CSS box alignment** module specifies CSS features that relate to the alignment of boxes in the various CSS box layout models: block layout, table layout, flex layout, and grid layout. The module aims to create a consistent method of alignment across all of CSS. This document details the general concepts found in the specification.",
  "css/css_box_model": "The **CSS box model** module defines the `height`, `width`, `margin`, and `padding` properties, which along with [border properties](/en-US/docs/Web/CSS/CSS_backgrounds_and_borders) make up the CSS [box model](/en-US/docs/Web/CSS/CSS_box_model/Introduction_to_the_CSS_box_model).",
  "css/css_box_sizing": "The **CSS box sizing** module enables developers to specify how elements fit their content or fit into a particular layout context. It defines sizing, minimum sizing, and maximum sizing properties, and also extends the CSS sizing properties with keywords that represent content-based [intrinsic size--](/docs/Glossary/intrinsic_size) and context-based [extrinsic](/en-US/docs/Glossary/Intrinsic_Size#extrinsic_sizing) size.",
  "css/css_cascade": "The **CSS cascade and inheritance** module defines the rules for assigning values to properties by way of cascading and inheritance. This module specifies the rules for finding the specified value for all properties on all elements.",
  "css/css_cascading_variables": "The **CSS custom properties for cascading variables** module adds support for cascading variables in CSS properties and lets you create custom properties to define these variables along with the mechanisms to use custom properties as the values for other CSS properties.",
  "css/css_color_adjustment": "The **CSS color adjustment** module provides a model and controls automatic color adjustment by the user agent to handle user preferences, such as \"Dark Mode\", contrast adjustment, and other color scheme preferences.",
  "css/css_colors": "The **CSS colors** module defines colors, color types, color blending, opacity, and how you can apply these colors and effects to HTML content.",
  "css/css_compositing_and_blending": "The **CSS compositing and blending** module defines how an element's background layers can be blended together, how an element can be blended with its container, and whether the element must create a new [stacking context](/en-US/docs/Web/CSS/CSS_positioned_layout/Understanding_z-index/Stacking_context).",
  "css/css_conditional_rules": "The **CSS conditional rules** module defines CSS media and support queries, enabling you to define styles that are only applied if specific conditions are met. The conditional rules defined in this module are based on device, user-agent, and viewport capabilities. With conditional rules, you can target CSS styles based on query values or browser and device features, independent of the document being rendered.",
  "css/css_containment": "The **CSS containment** module defines containment and container queries.",
  "css/css_counter_styles": "The **CSS counter styles** module lets you define your own counter styles to manage the appearance of [markers](/en-US/docs/Web/CSS/::marker) in lists and counters in [generated content](/en-US/docs/Web/CSS/CSS_generated_content). It also enables you to extend native browser list styles with your own customizations.",
  "css/css_display": "The **CSS display** module defines how the CSS formatting box tree is generated from the document element tree and defines properties controlling it.",
  "css/css_filter_effects": "The properties in the **CSS filter effects** module let you define a way of processing an element's rendering before the element is displayed in the document. Examples of such effects include blurring and changing the intensity of the color of an element.",
  "css/css_flexible_box_layout": "The **CSS flexible box layout** module defines a CSS box model optimized for user interface design, and the layout of items in one dimension. In the flex layout model, the children of a flex container can be laid out in any direction, and can \"flex\" their sizes, either growing to fill unused space or shrinking to avoid overflowing the parent. Both horizontal and vertical alignment of the children can be easily manipulated.",
  "css/css_flow_layout": "_Normal Flow_, or Flow Layout, is the way that Block and Inline elements are displayed on a page before any changes are made to their layout. The flow is essentially a set of things that are all working together and know about each other in your layout. Once something is taken _out of flow_ it works independently.",
  "css/css_font_loading": "The **CSS font loading** module describes events and interfaces used for dynamically loading font resources.",
  "css/css_fonts": "The **CSS fonts** module defines font-related properties and how font resources are loaded. It lets you define the style of a font, such as its family, size and weight, and the glyph variants to use when multiple are available for a single character.",
  "css/css_fragmentation": "The **CSS fragmentation** module defines how content is displayed when it is broken (fragmented) across multiple [pages](/en-US/docs/Web/CSS/CSS_paged_media), regions, or [columns](/en-US/docs/Web/CSS/CSS_multicol_layout).",
  "css/css_functions": "**CSS value functions** are statements that invoke special data processing or calculations to return a [CSS](/en-US/docs/Web/CSS) [value](/en-US/docs/Web/CSS/CSS_Values_and_Units) for a CSS property. CSS value functions represent more complex [data types](/en-US/docs/Web/CSS/CSS_Types) and they may take some input arguments to calculate the return value.",
  "css/css_generated_content": "The **CSS generated content** module defines how an element's content can be replaced and content can be added to a document with CSS.",
  "css/css_grid_layout": "The **CSS grid layout** module excels at dividing a page into major regions or defining the relationship in terms of size, position, and layer, between parts of a control built from HTML primitives.",
  "css/css_houdini": "**CSS Houdini** is a set of APIs that expose parts of the CSS engine. This makes it easier for developers to create extensions for CSS. These extensions might be to polyfill features that are not yet available in a browser, experiment with new ways of doing layout, or add creative borders or other effects.",
  "css/css_images": "The **CSS images** module defines the types of images that can be used (the [&lt;image&gt;--](/docs/Web/CSS/&lt;image&gt;) type, containing URLs, gradients and other types of images), how to resize them and how they, and other replaced content, interact with the different layout models.",
  "css/css_lists": "The **CSS lists and counters** module enables styling and positioning of list item bullets and manipulating their values with a combination of strings, counters, and other features.",
  "css/css_logical_properties_and_values": "The **CSS logical properties and values** module introduces logical properties and values that provide the ability to control layout through logical, rather than physical, direction and dimension mappings.",
  "css/css_masking": "The **CSS masking** module that defines masking and clipping for partially or fully hiding portions of visual elements.",
  "css/css_media_queries": "The **CSS media queries** module enables testing and querying of viewport values and browser or device features, to conditionally apply CSS styles based on the current user environment. Media queries are used in the CSS `@media` rule and other contexts and languages such as HTML and JavaScript.",
  "css/css_miscellaneous": "These pages contain CSS properties that are supported by browsers but either aren't included in a CSS specification, don't fit into any other CSS categories, or are experimental.",
  "css/css_motion_path": "The **CSS motion path** module allows authors to animate any graphical object along a custom path.",
  "css/css_multicol_layout": "The **CSS multi-column layout** module lets you divide content across multiple columns. By using the properties in this module, you can define the preferred number and width of columns, the gap size between columns, and the visual appearance of the optional column dividing lines (known as column rules). You can also define how content should flow from column to column and how to break content between columns.",
  "css/css_namespaces": "The **CSS namespaces** module defines the syntax for using [namespaces--](/docs/Glossary/namespace) in CSS.",
  "css/css_nesting": "The **CSS nesting** module defines a syntax for nesting selectors, providing the ability to nest one style rule inside another, with the selector of the child rule relative to the selector of the parent rule.",
  "css/css_overflow": "The **CSS overflow** module properties enable you to handle scrollable overflow in visual media.",
  "css/css_overscroll_behavior": "The **CSS overscroll behavior** module provides properties to control the behavior of a [scroll container--](/docs/Glossary/Scroll_container) when its scroll position reaches the [scroll boundary--](/docs/Glossary/Scroll_boundary). Controlling this aspect is particularly useful in scenarios where embedded scrollable areas should not trigger scrolling of the parent container.",
  "css/css_paged_media": "The **CSS paged media** module defines the properties that control the presentation of content for print or any other media that splits content into discrete pages. It allows you to set page breaks, control printable area, style left and right pages differently, and control breaks inside elements.",
  "css/css_positioned_layout": "The **CSS positioned layout** module defines how to position elements on a web page.",
  "css/css_properties_and_values_api": "The **CSS properties and values API** module defines a method for registering new CSS properties, defining the property's data type, inheritance behavior, and, optionally, an initial value.\nThis API expands on [CSS custom properties for cascading variables](/en-US/docs/Web/CSS/CSS_cascading_variables) module, which allows authors to define custom properties in CSS using [two dash syntax (`--`)](/en-US/docs/Web/CSS/--*).\nThe CSS properties and values API is part of the [CSS Houdini](/en-US/docs/Web/CSS/CSS_Houdini) umbrella of APIs.",
  "css/css_pseudo-elements": "The **CSS pseudo-element** module defines abstract elements that are not directly present in the document tree. These abstract elements, called pseudo-elements, represent portions of the render tree that can be selected and styled. Pseudo-elements are used to create abstractions about the document tree beyond those provided by the document tree.",
  "css/css_ruby_layout": "The **CSS ruby layout** module provides the rendering model and formatting controls related to the display of ruby annotation. Ruby annotation is a form of interlinear annotation, consisting of short runs of text alongside the base text. They are typically used in East Asian documents to indicate pronunciation or to provide a short annotation.",
  "css/css_scoping": "The **CSS scoping** module defines the CSS scoping and encapsulation mechanisms, focusing on the [Shadow DOM](/en-US/docs/Web/API/Web_components/Using_shadow_DOM) [scoping](https://css.oddbird.net/scope/) mechanism.",
  "css/css_scroll-driven_animations": "The **CSS scroll-driven animations** module provides functionality that builds on top of the [CSS animations module](/en-US/docs/Web/CSS/CSS_animations) and [Web Animations API](/en-US/docs/Web/API/Web_Animations_API). It allows you to animate property values based on a progression along a scroll-based timeline instead of the default time-based document timeline. This means that you can animate an element by scrolling a scrollable element, rather than just by the passing of time.",
  "css/css_scroll_snap": "The **CSS scroll snap** module provides properties that let you control the panning and scrolling behavior by defining snap positions. Content can be snapped into position as the user scrolls overflowing content within a [scroll container--](/docs/Glossary/scroll_container), providing paging and scroll positioning.",
  "css/css_scrollbars_styling": "The **CSS scrollbars styling** module defines properties that you can use for visual styling of scrollbars. You can customize the width of the scrollbar as required. You can also customize the color of the scrollbar _track_, which is the background of the scrollbar, and the color of the scrollbar _thumb_, which is the draggable handle of the scrollbar.",
  "css/css_selectors": "The **CSS selectors** module defines the patterns to select elements to which a set of CSS rules are then applied along with their [specificity--](/docs/Web/CSS/specificity). The CSS selectors module provides us with more than 60 selectors and five combinators. [Other modules](#related_concepts) provide additional pseudo-class selectors and pseudo-elements.",
  "css/css_shadow_parts": "The **CSS shadow parts** module defines the [::part()--](/docs/Web/CSS/::part) pseudo-element that can be set on a [shadow host](/en-US/docs/Glossary/Shadow_tree). Using this pseudo-element, you can enable shadow hosts to expose the selected element in the shadow tree to the outside page for styling purposes.",
  "css/css_shapes": "The **CSS shapes** module describes geometric shapes that can be in CSS. For the [Level 1 specification](https://drafts.csswg.org/css-shapes/), CSS shapes can be applied to floating elements. The specification defines a number of different ways to define a shape on a floated element, causing wrapping lines to wrap round the shape rather than following the rectangle of the element's box.",
  "css/css_syntax": "The **CSS syntax** module describes, in general terms, the structure and syntax of cascading stylesheets, or CSS. It defines CSS as the language for describing the rendering of structured documents (such as HTML and XML), on the web and elsewhere.",
  "css/css_table": "The **CSS table** module helps you define how to lay out table data.",
  "css/css_text": "The **CSS text** module defines how to perform text manipulation, like line breaking, justification and alignment, white space handling, and text transformation.",
  "css/css_text_decoration": "The **CSS text decoration** module defines features relating to text decoration, such as underlines, text shadows, and emphasis marks.",
  "css/css_transforms": "The **CSS transforms** module defines how elements styled with CSS can be transformed in two-dimensional or three-dimensional space.",
  "css/css_transitions": "The **CSS transitions** module lets you create gradual transitions between the values of specific CSS properties. The behavior of these transitions can be controlled by specifying their easing function, duration, and other attributes.",
  "css/css_types": "**CSS data types** define typical values (including keywords and units) accepted by CSS properties and functions. They are a special kind of [component value type](https://www.w3.org/TR/css3-values/#component-types).",
  "css/css_values_and_units": "Every CSS declaration includes a property / value pair. Depending on the property, the value can include a single integer or keyword, to a series of keywords and values with or without units. There are a common set of data types — values and units — that CSS properties accept. Below is an overview of most of these data types. Refer to the page for each value type for more detailed information.",
  "css/css_writing_modes": "The **CSS writing modes** module defines various international writing modes, such as left-to-right (e.g., used by Latin and Indic scripts), right-to-left (e.g., used by Hebrew or Arabic scripts), bidirectional (used when mixing left-to-right and right-to-left scripts), and vertical (e.g., used by some Asian scripts).",
  "css/cssom_view": "The **CSSOM view** module lets you manipulate the visual view of a document, in particular its scrolling behavior.",
  "css/cursor": "The **`cursor`** [CSS](/en-US/docs/Web/CSS) property sets the mouse cursor, if any, to show when the mouse pointer is over an element.",
  "css/custom-ident": "The **`<custom-ident>`** [CSS](/en-US/docs/Web/CSS) [data type](/en-US/docs/Web/CSS/CSS_Types) denotes an arbitrary user-defined string used as an [identifier--](/docs/Glossary/identifier). It is case-sensitive, and certain values are forbidden in various contexts to prevent ambiguity.",
  "css/dashed-ident": "The **`<dashed-ident>`** [CSS](/en-US/docs/Web/CSS) [data type](/en-US/docs/Web/CSS/CSS_Types) denotes an arbitrary string used as an [identifier--](/docs/Glossary/identifier).",
  "css/descendant_combinator": "The **descendant combinator** — typically represented by a single space (\" \") character — combines two selectors such that elements matched by the second selector are selected if they have an ancestor (parent, parent's parent, parent's parent's parent, etc.) element matching the first selector. Selectors that utilize a descendant combinator are called _descendant selectors_.",
  "css/dimension": "The **`<dimension>`** [CSS](/en-US/docs/Web/CSS) [data type](/en-US/docs/Web/CSS/CSS_Types) represents a [&lt;number&gt;--](/docs/Web/CSS/&lt;number&gt;) with a unit attached to it, for example `10px`.",
  "css/direction": "> **Warning:** Where possible, authors are encouraged to avoid using the `direction` CSS property and use the HTML [`dir`](/en-US/docs/Web/HTML/Global_attributes#dir) global attribute instead.",
  "css/display": "The **`display`** [CSS](/en-US/docs/Web/CSS) property sets whether an element is treated as a [block or inline box](/en-US/docs/Web/CSS/CSS_flow_layout) and the layout used for its children, such as [flow layout](/en-US/docs/Web/CSS/CSS_flow_layout), [grid](/en-US/docs/Web/CSS/CSS_grid_layout) or [flex](/en-US/docs/Web/CSS/CSS_flexible_box_layout).",
  "css/display-box": "These keywords define whether an element generates display boxes at all.",
  "css/display-inside": "These keywords specify the element's inner [display--](/docs/Web/CSS/display) type, which defines the type of formatting context that lays out its contents (assuming it is a non-replaced element). These keywords are used as values of the `display` property, and can be used for legacy purposes as a single keyword, or as defined in the Level 3 specification alongside a value from the [&lt;display-outside&gt;--](/docs/Web/CSS/&lt;display-outside&gt;) keywords.",
  "css/display-internal": "Some layout models such as `table` and `ruby` have a complex internal structure, with several different roles that their children and descendants can fill. This page defines those \"internal\" display values, which only have meaning within that particular layout mode.",
  "css/display-legacy": "CSS 2 used a single-keyword syntax for the `display` property, requiring separate keywords for block-level and inline-level variants of the same layout mode. This page details those values.",
  "css/display-listitem": "The `list-item` keyword causes the element to generate a `::marker` pseudo-element with the content specified by its [list-style--](/docs/Web/CSS/list-style) properties (for example a bullet point) together with a principal box of the specified type for its own contents.",
  "css/display-outside": "The `<display-outside>` keywords specify the element's outer [display--](/docs/Web/CSS/display) type, which is essentially its role in flow layout. These keywords are used as values of the `display` property, and can be used for legacy purposes as a single keyword, or as defined in the Level 3 specification alongside a value from the [&lt;display-inside&gt;--](/docs/Web/CSS/&lt;display-inside&gt;) keywords.",
  "css/easing-function": "The **`<easing-function>`** [CSS](/en-US/docs/Web/CSS) [data type](/en-US/docs/Web/CSS/CSS_Types) represents a mathematical function that describes the rate at which a value changes.",
  "css/element": "The **`element()`** [CSS](/en-US/docs/Web/CSS) [function](/en-US/docs/Web/CSS/CSS_Functions) defines an [&lt;image&gt;--](/docs/Web/CSS/&lt;image&gt;) value generated from an arbitrary HTML element. This image is live, meaning that if the HTML element is changed, the CSS properties using the resulting value are automatically updated.",
  "css/empty-cells": "The **`empty-cells`** CSS property sets whether borders and backgrounds appear around [table--](/docs/Web/HTML/Element/table) cells that have no visible content.",
  "css/env": "The **`env()`** [CSS](/en-US/docs/Web/CSS) [function](/en-US/docs/Web/CSS/CSS_Functions) can be used to insert the value of a user-agent defined environment variable into your CSS, in a similar fashion to the [var()--](/docs/Web/CSS/var) function and [custom properties](/en-US/docs/Web/CSS/--*). The difference is that, as well as being user-agent defined rather than author-defined, environment variables are globally scoped to a document, whereas custom properties are scoped to the element(s) on which they are declared.",
  "css/exp": "The **`exp()`** [CSS](/en-US/docs/Web/CSS) [function](/en-US/docs/Web/CSS/CSS_Functions) is an exponential function that takes an number as an argument and returns the mathematical constant `e` raised to the power of the given number.",
  "css/field-sizing": "The **`field-sizing`** [CSS](/en-US/docs/Web/CSS) property enables you to control the sizing behavior of elements that are given a default preferred size, such as form control elements. This property enables you to override the default sizing behavior, allowing form controls to adjust in size to fit their contents.",
  "css/filter": "The **`filter`** [CSS](/en-US/docs/Web/CSS) property applies graphical effects like blur or color shift to an element. Filters are commonly used to adjust the rendering of images, backgrounds, and borders.",
  "css/filter-function": "The **`<filter-function>`** [CSS](/en-US/docs/Web/CSS) [data type](/en-US/docs/Web/CSS/CSS_Types) represents a graphical effect that can change the appearance of an input image. It is used in the [filter--](/docs/Web/CSS/filter) and [backdrop-filter--](/docs/Web/CSS/backdrop-filter) properties.",
  "css/fit-content": "The **`fit-content`** keyword is equivalent to [fit-content(stretch)--](/docs/Web/CSS/fit-content_function). In practice, this means that the box will use the available space, but never more than [max-content--](/docs/Web/CSS/max-content).",
  "css/fit-content_function": "The **`fit-content()`** [CSS](/en-US/docs/Web/CSS) [function](/en-US/docs/Web/CSS/CSS_Functions) clamps a given size to an available size according to the formula `min(maximum size, max(minimum size, argument))`.",
  "css/flex": "The **`flex`** [CSS](/en-US/docs/Web/CSS) [shorthand property](/en-US/docs/Web/CSS/Shorthand_properties) sets how a flex _item_ will grow or shrink to fit the space available in its flex container.",
  "css/flex-basis": "The **`flex-basis`** [CSS](/en-US/docs/Web/CSS) property sets the initial main size of a flex item. It sets the size of the content box unless otherwise set with [box-sizing--](/docs/Web/CSS/box-sizing).",
  "css/flex-direction": "The **`flex-direction`** [CSS](/en-US/docs/Web/CSS) property sets how flex items are placed in the flex container defining the main axis and the direction (normal or reversed).",
  "css/flex-flow": "The **`flex-flow`** [CSS](/en-US/docs/Web/CSS) [shorthand property](/en-US/docs/Web/CSS/Shorthand_properties) specifies the direction of a flex container, as well as its wrapping behavior.",
  "css/flex-grow": "The **`flex-grow`** [CSS](/en-US/docs/Web/CSS) property sets the flex grow factor, which specifies how much of the flex container's remaining space should be assigned to the flex item's [main size](https://www.w3.org/TR/css-flexbox/#main-size).",
  "css/flex-shrink": "The **`flex-shrink`** [CSS](/en-US/docs/Web/CSS) property sets the flex shrink factor of a flex item. If the size of all flex items is larger than the flex container, items shrink to fit according to `flex-shrink`.",
  "css/flex-wrap": "The **`flex-wrap`** [CSS](/en-US/docs/Web/CSS) property sets whether flex items are forced onto one line or can wrap onto multiple lines. If wrapping is allowed, it sets the direction that lines are stacked.",
  "css/flex_value": "The **`<flex>`** [CSS](/en-US/docs/Web/CSS) [data type](/en-US/docs/Web/CSS/CSS_Types) denotes a flexible length within a grid container. It is used in [grid-template-columns--](/docs/Web/CSS/grid-template-columns), [grid-template-rows--](/docs/Web/CSS/grid-template-rows) and other related properties.",
  "css/float": "|\n| `inline`             | `block`        |\n| `inline-block`       | `block`        |\n| `inline-table`       | `table`        |\n| `table-row`          | `block`        |\n| `table-row-group`    | `block`        |\n| `table-column`       | `block`        |\n| `table-column-group` | `block`        |\n| `table-cell`         | `block`        |\n| `table-caption`      | `block`        |\n| `table-header-group` | `block`        |\n| `table-footer-group` | `block`        |\n| `inline-flex`        | `flex`         |\n| `inline-grid`        | `grid`         |\n| _other_              | _unchanged_    |",
  "css/font": "The **`font`** CSS [shorthand property](/en-US/docs/Web/CSS/Shorthand_properties) sets all the different properties of an element's font. Alternatively, it sets an element's font to a system font.",
  "css/font-family": "The **`font-family`** CSS property specifies a prioritized list of one or more font family names and/or generic family names for the selected element.",
  "css/font-feature-settings": "The **`font-feature-settings`** CSS property controls advanced typographic features in OpenType fonts.",
  "css/font-kerning": "The **`font-kerning`** CSS property sets the use of the kerning information stored in a font.",
  "css/font-language-override": "The **`font-language-override`** CSS property controls the use of language-specific glyphs in a typeface.",
  "css/font-optical-sizing": "The **`font-optical-sizing`** [CSS](/en-US/docs/Web/CSS) property sets whether text rendering is optimized for viewing at different sizes.",
  "css/font-palette": "The **`font-palette`** [CSS](/en-US/docs/Web/CSS) property allows specifying one of the many palettes contained in a [color font](https://www.colorfonts.wtf/) that a user agent may use for the font. Users can also override the values in a palette or create a new palette by using the [`@font-palette-values`](/en-US/docs/Web/CSS/@font-palette-values) at-rule.",
  "css/font-size": "The **`font-size`** [CSS](/en-US/docs/Web/CSS) property sets the size of the font. Changing the font size also updates the sizes of the font size-relative [&lt;length&gt;--](/docs/Web/CSS/&lt;length&gt;) units, such as `em`, `ex`, and so forth.",
  "css/font-size-adjust": "The **`font-size-adjust`** [CSS](/en-US/docs/Web/CSS) property provides a way to modify the size of lowercase letters relative to the size of uppercase letters, which defines the overall [font-size--](/docs/Web/CSS/font-size). This property is useful for situations where font fallback can occur.",
  "css/font-smooth": "The **`font-smooth`** [CSS](/en-US/docs/Web/CSS) property controls the application of anti-aliasing when fonts are rendered.",
  "css/font-stretch": "The **`font-stretch`** [CSS](/en-US/docs/Web/CSS) property selects a normal, condensed, or expanded face from a font.",
  "css/font-style": "The **`font-style`** [CSS](/en-US/docs/Web/CSS) property sets whether a font should be styled with a normal, italic, or oblique face from its [font-family--](/docs/Web/CSS/font-family).",
  "css/font-synthesis": "The **`font-synthesis`** [shorthand](/en-US/docs/Web/CSS/Shorthand_properties) [CSS](/en-US/docs/Web/CSS) property lets you specify whether or not the browser may synthesize the bold, italic, small-caps, and/or subscript and superscript typefaces when they are missing in the specified font-family.",
  "css/font-synthesis-position": "The **`font-synthesis-position`** [CSS](/en-US/docs/Web/CSS) property lets you specify whether or not a browser may synthesize the subscript and superscript \"position\" typefaces when they are missing in a font family, while using [font-variant-position--](/docs/Web/CSS/font-variant-position) to set the positions.",
  "css/font-synthesis-small-caps": "The **`font-synthesis-small-caps`** [CSS](/en-US/docs/Web/CSS) property lets you specify whether or not the browser may synthesize small-caps typeface when it is missing in a font family. Small-caps glyphs typically use the form of uppercase letters but are reduced to the size of lowercase letters.",
  "css/font-synthesis-style": "The **`font-synthesis-style`** [CSS](/en-US/docs/Web/CSS) property lets you specify whether or not the browser may synthesize the oblique typeface when it is missing in a font family.",
  "css/font-synthesis-weight": "The **`font-synthesis-weight`** [CSS](/en-US/docs/Web/CSS) property lets you specify whether or not the browser may synthesize the bold typeface when it is missing in a font family.",
  "css/font-variant": "The **`font-variant`** CSS [shorthand property](/en-US/docs/Web/CSS/Shorthand_properties) allows you to set all the font variants for a font.",
  "css/font-variant-alternates": "The **`font-variant-alternates`** CSS property controls the usage of alternate glyphs. These alternate glyphs may be referenced by alternative names defined in [@font-feature-values--](/docs/Web/CSS/@font-feature-values).",
  "css/font-variant-caps": "The **`font-variant-caps`** [CSS](/en-US/docs/Web/CSS) property controls the use of alternate glyphs used for small or petite capitals or for titling.",
  "css/font-variant-east-asian": "The **`font-variant-east-asian`** CSS property controls the use of alternate glyphs for East Asian scripts, like Japanese and Chinese.",
  "css/font-variant-emoji": "The **`font-variant-emoji`** [CSS](/en-US/docs/Web/CSS) property specifies the default presentation style for displaying emojis.",
  "css/font-variant-ligatures": "The **`font-variant-ligatures`** CSS property controls which [ligatures--](/docs/Glossary/ligature) and [contextual forms--](/docs/Glossary/contextual_forms) are used in textual content of the elements it applies to. This leads to more harmonized forms in the resulting text.",
  "css/font-variant-numeric": "The **`font-variant-numeric`** CSS property controls the usage of alternate glyphs for numbers, fractions, and ordinal markers.",
  "css/font-variant-position": "The **`font-variant-position`** CSS property controls the use of alternate, smaller glyphs that are positioned as superscript or subscript.",
  "css/font-variation-settings": "The **`font-variation-settings`** CSS property provides low-level control over [variable font](/en-US/docs/Web/CSS/CSS_fonts/Variable_fonts_guide) characteristics by letting you specify the four letter axis names of the characteristics you want to vary along with their values.",
  "css/font-weight": "The **`font-weight`** [CSS](/en-US/docs/Web/CSS) property sets the weight (or boldness) of the font. The weights available depend on the [font-family--](/docs/Web/CSS/font-family) that is currently set.",
  "css/forced-color-adjust": "The **`forced-color-adjust`** CSS property allows authors to opt certain elements out of forced colors mode. This then restores the control of those values to CSS.",
  "css/frequency": "The **`<frequency>`** [CSS](/en-US/docs/Web/CSS) [data type](/en-US/docs/Web/CSS/CSS_Types) represents a frequency dimension, such as the pitch of a speaking voice. It is not currently used in any CSS properties.",
  "css/frequency-percentage": "The **`<frequency-percentage>`** [CSS](/en-US/docs/Web/CSS) [data type](/en-US/docs/Web/CSS/CSS_Types) represents a value that can be either a [frequency--](/docs/Web/CSS/frequency) or a [percentage--](/docs/Web/CSS/percentage). Frequency values, e.g. the pitch of a speaking voice, are not currently used in any CSS properties.",
  "css/gap": "The **`gap`** [CSS](/en-US/docs/Web/CSS) [shorthand property](/en-US/docs/Web/CSS/Shorthand_properties) sets the gaps ([gutters--](/docs/Glossary/gutters)) between rows and columns.",
  "css/generic-family": "The **`<generic-family>`** [CSS](/en-US/docs/Web/CSS) [data type](/en-US/docs/Web/CSS/CSS_Types) represents the keyword values for generic font families used in the [font--](/docs/Web/CSS/font) shorthand and [font-family--](/docs/Web/CSS/font-family) longhand properties. The `<generic-family>` represents one or more locally-installed fonts belonging to that category of fonts.",
  "css/gradient": "The **`<gradient>`** [CSS](/en-US/docs/Web/CSS) [data type](/en-US/docs/Web/CSS/CSS_Types) is a special type of [&lt;image&gt;--](/docs/Web/CSS/&lt;image&gt;) that consists of a progressive transition between two or more colors.",
  "css/grid": "The **`grid`** CSS property is a [shorthand property](/en-US/docs/Web/CSS/Shorthand_properties) that sets all of the explicit and implicit grid properties in a single declaration.",
  "css/grid-area": "The **`grid-area`** CSS [shorthand property](/en-US/docs/Web/CSS/Shorthand_properties) specifies a grid item's size and location within a [grid--](/docs/Glossary/grid) by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the edges of its [grid area--](/docs/Glossary/grid_areas).",
  "css/grid-auto-columns": "The **`grid-auto-columns`** CSS property specifies the size of an implicitly-created grid column [track--](/docs/Glossary/grid_tracks) or pattern of tracks.",
  "css/grid-auto-flow": "The **`grid-auto-flow`** CSS property controls how the auto-placement algorithm works, specifying exactly how auto-placed items get flowed into the grid.",
  "css/grid-auto-rows": "The **`grid-auto-rows`** CSS property specifies the size of an implicitly-created grid row [track--](/docs/Glossary/grid_tracks) or pattern of tracks.",
  "css/grid-column": "The **`grid-column`** CSS [shorthand property](/en-US/docs/Web/CSS/Shorthand_properties) specifies a grid item's size and location within a [grid column--](/docs/Glossary/grid_column) by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start and inline-end edge of its [grid area--](/docs/Glossary/grid_areas).",
  "css/grid-column-end": "The **`grid-column-end`** CSS property specifies a grid item's end position within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the block-end edge of its [grid area--](/docs/Glossary/grid_areas).",
  "css/grid-column-start": "The **`grid-column-start`** CSS property specifies a grid item's start position within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement. This start position defines the block-start edge of the [grid area--](/docs/Glossary/grid_areas).",
  "css/grid-row": "The **`grid-row`** CSS [shorthand property](/en-US/docs/Web/CSS/Shorthand_properties) specifies a grid item's size and location within a [grid row--](/docs/Glossary/grid_row) by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start and inline-end edge of its [grid area--](/docs/Glossary/grid_areas).",
  "css/grid-row-end": "The **`grid-row-end`** CSS property specifies a grid item's end position within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-end edge of its [grid area--](/docs/Glossary/grid_areas).",
  "css/grid-row-start": "The **`grid-row-start`** CSS property specifies a grid item's start position within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start edge of its [grid area--](/docs/Glossary/grid_areas).",
  "css/grid-template": "The **`grid-template`** CSS property is a [shorthand property](/en-US/docs/Web/CSS/Shorthand_properties) for defining [grid columns--](/docs/Glossary/grid_column), [grid rows--](/docs/Glossary/grid_row), and [grid areas--](/docs/Glossary/grid_areas).",
  "css/grid-template-areas": "The **`grid-template-areas`** CSS property specifies named [grid areas--](/docs/Glossary/grid_areas), establishing the cells in the grid and assigning them names.",
  "css/grid-template-columns": "The **`grid-template-columns`** CSS property defines the line names and track sizing functions of the [grid columns--](/docs/Glossary/grid_column).",
  "css/grid-template-rows": "The **`grid-template-rows`** CSS property defines the line names and track sizing functions of the [grid rows--](/docs/Glossary/grid_row).",
  "css/hanging-punctuation": "The **`hanging-punctuation`** [CSS](/en-US/docs/Web/CSS) property specifies whether a punctuation mark should hang at the start or end of a line of text. Hanging punctuation may be placed outside the line box.",
  "css/height": "The **`height`** CSS property specifies the height of an element. By default, the property defines the height of the [content area](/en-US/docs/Web/CSS/CSS_box_model/Introduction_to_the_CSS_box_model#content_area). If [box-sizing--](/docs/Web/CSS/box-sizing) is set to `border-box`, however, it instead determines the height of the [border area](/en-US/docs/Web/CSS/CSS_box_model/Introduction_to_the_CSS_box_model#border_area).",
  "css/hex-color": "The **`<hex-color>`** [CSS](/en-US/docs/Web/CSS) [data type](/en-US/docs/Web/CSS/CSS_Types) is a notation for describing the _hexadecimal color syntax_ of an [sRGB](/en-US/docs/Glossary/RGB) color using its primary color components (red, green, blue) written as hexadecimal numbers, as well as its transparency.",
  "css/hue": "The **`<hue>`** [CSS](/en-US/docs/Web/CSS) [data type](/en-US/docs/Web/CSS/CSS_Types) represents the hue angle of a color.\nIt is used in the color functions that accept hue expressed as a single value, specifically [`hsl()`](/en-US/docs/Web/CSS/color_value/hsl), [`hwb()`](/en-US/docs/Web/CSS/color_value/hwb), [`lch()`](/en-US/docs/Web/CSS/color_value/lch), and [`oklch()`](/en-US/docs/Web/CSS/color_value/oklch) functional notations.",
  "css/hue-interpolation-method": "The **`<hue-interpolation-method>`** [CSS](/en-US/docs/Web/CSS) [data type](/en-US/docs/Web/CSS/CSS_Types) represents the algorithm used for interpolation between [&lt;hue&gt;--](/docs/Web/CSS/&lt;hue&gt;) values.\nThe interpolation method specifies how to find a midpoint between two hue values based on a color wheel.\nIt is used as a component of the [&lt;color-interpolation-method&gt;--](/docs/Web/CSS/&lt;color-interpolation-method&gt;) data type.",
  "css/hyphenate-character": "The **`hyphenate-character`** [CSS](/en-US/docs/Web/CSS) property sets the character (or string) used at the end of a line before a hyphenation break.",
  "css/hyphenate-limit-chars": "The **`hyphenate-limit-chars`** [CSS](/en-US/docs/Web/CSS) property specifies the minimum word length to allow hyphenation of words as well as the minimum number of characters before and after the hyphen.",
  "css/hyphens": "The **`hyphens`** [CSS](/en-US/docs/Web/CSS) property specifies how words should be hyphenated when text wraps across multiple lines. It can prevent hyphenation entirely, hyphenate at manually-specified points within the text, or let the browser automatically insert hyphens where appropriate.",
  "css/hypot": "The **`hypot()`** [CSS](/en-US/docs/Web/CSS) [function](/en-US/docs/Web/CSS/CSS_Functions) is an exponential function that returns the [square root](https://en.wikipedia.org/wiki/Square_root) of the sum of squares of its parameters.",
  "css/id_selectors": "The CSS **ID selector** matches an element based on the value of the element's [`id`](/en-US/docs/Web/HTML/Global_attributes/id) attribute. In order for the element to be selected, its `id` attribute must match exactly the value given in the selector.",
  "css/ident": "The **`<ident>`** [CSS](/en-US/docs/Web/CSS) [data type](/en-US/docs/Web/CSS/CSS_Types) denotes an arbitrary string used as an [identifier--](/docs/Glossary/identifier).",
  "css/image": "The **`<image>`** [CSS](/en-US/docs/Web/CSS) [data type](/en-US/docs/Web/CSS/CSS_Types) represents a two-dimensional image.",
  "css/image-orientation": "The **`image-orientation`** [CSS](/en-US/docs/Web/CSS) property specifies a layout-independent correction to the orientation of an image.",
  "css/image-rendering": "The **`image-rendering`** [CSS](/en-US/docs/Web/CSS) property sets an image scaling algorithm. The property applies to an element itself, to any images set in its other properties, and to its descendants.",
  "css/image-resolution": "The **`image-resolution`** [CSS](/en-US/docs/Web/CSS) property specifies the intrinsic resolution of all raster images used in or on the element. It affects content images such as replaced elements and generated content, and decorative images such as `background-image` images.",
  "css/important": "A `!` delimiter followed by the `important` keyword marks the declaration as important. The `!important` flag alters the rules selecting declarations inside the [cascade](/en-US/docs/Web/CSS/Cascade). A declaration that is not _important_ is called _normal_.",
  "css/inherit": "The **`inherit`** CSS keyword causes the element to take the [computed value](/en-US/docs/Web/CSS/computed_value) of the property from its parent element. It can be applied to any CSS property, including the CSS shorthand property [all--](/docs/Web/CSS/all).",
  "css/inheritance": "In CSS, **inheritance** controls what happens when no value is specified for a property on an element.",
  "css/initial": "The **`initial`** CSS keyword applies the [initial (or default) value](/en-US/docs/Web/CSS/initial_value) of a property to an element. It can be applied to any CSS property, including the CSS shorthand property [all--](/docs/Web/CSS/all). With `all` set to `initial`, all CSS properties can be restored to their respective initial values in one go instead of restoring each one separately.",
  "css/initial-letter": "The `initial-letter` CSS property sets styling for dropped, raised, and sunken initial letters.",
  "css/initial-letter-align": "The **`initial-letter-align`** CSS property specifies the alignment of initial letters within a paragraph.",
  "css/initial_value": "The **initial value** of a [CSS](/en-US/docs/Web/CSS) property is its default value, as listed in its definition table in the specification. The usage of the initial value depends on whether a property is inherited or not:",
  "css/inline-size": "The **`inline-size`** [CSS](/en-US/docs/Web/CSS) property defines the horizontal or vertical size of an element's block, depending on its writing mode. It corresponds to either the [width--](/docs/Web/CSS/width) or the [height--](/docs/Web/CSS/height) property, depending on the value of [writing-mode--](/docs/Web/CSS/writing-mode).",
  "css/inline_formatting_context": "This article explains the inline formatting context.",
  "css/inset": "The **`inset`** [CSS](/en-US/docs/Web/CSS) property is a shorthand that corresponds to the [top--](/docs/Web/CSS/top), [right--](/docs/Web/CSS/right), [bottom--](/docs/Web/CSS/bottom), and/or [left--](/docs/Web/CSS/left) properties. It has the same multi-value syntax of the [margin--](/docs/Web/CSS/margin) shorthand.",
  "css/inset-block": "The **`inset-block`** [CSS](/en-US/docs/Web/CSS) property defines the logical block start and end offsets of an element, which maps to physical offsets depending on the element's writing mode, directionality, and text orientation. It corresponds to the [top--](/docs/Web/CSS/top) and [bottom--](/docs/Web/CSS/bottom), or [right--](/docs/Web/CSS/right) and [left--](/docs/Web/CSS/left) properties depending on the values defined for [writing-mode--](/docs/Web/CSS/writing-mode), [direction--](/docs/Web/CSS/direction), and [text-orientation--](/docs/Web/CSS/text-orientation).",
  "css/inset-block-end": "The **`inset-block-end`** [CSS](/en-US/docs/Web/CSS) property defines the logical block end offset of an element, which maps to a physical inset depending on the element's writing mode, directionality, and text orientation. It corresponds to the [top--](/docs/Web/CSS/top), [right--](/docs/Web/CSS/right), [bottom--](/docs/Web/CSS/bottom), or [left--](/docs/Web/CSS/left) property depending on the values defined for [writing-mode--](/docs/Web/CSS/writing-mode), [direction--](/docs/Web/CSS/direction), and [text-orientation--](/docs/Web/CSS/text-orientation).",
  "css/inset-block-start": "The **`inset-block-start`** [CSS](/en-US/docs/Web/CSS) property defines the logical block start offset of an element, which maps to a physical inset depending on the element's writing mode, directionality, and text orientation. It corresponds to the [top--](/docs/Web/CSS/top), [right--](/docs/Web/CSS/right), [bottom--](/docs/Web/CSS/bottom), or [left--](/docs/Web/CSS/left) property depending on the values defined for [writing-mode--](/docs/Web/CSS/writing-mode), [direction--](/docs/Web/CSS/direction), and [text-orientation--](/docs/Web/CSS/text-orientation).",
  "css/inset-inline": "The **`inset-inline`** [CSS](/en-US/docs/Web/CSS) property defines the logical start and end offsets of an element in the inline direction, which maps to physical offsets depending on the element's writing mode, directionality, and text orientation. It corresponds to the [top--](/docs/Web/CSS/top) and [bottom--](/docs/Web/CSS/bottom), or [right--](/docs/Web/CSS/right) and [left--](/docs/Web/CSS/left) properties depending on the values defined for [writing-mode--](/docs/Web/CSS/writing-mode), [direction--](/docs/Web/CSS/direction), and [text-orientation--](/docs/Web/CSS/text-orientation).",
  "css/inset-inline-end": "The **`inset-inline-end`** [CSS](/en-US/docs/Web/CSS) property defines the logical inline end inset of an element, which maps to a physical offset depending on the element's writing mode, directionality, and text orientation. It corresponds to the [top--](/docs/Web/CSS/top), [right--](/docs/Web/CSS/right), [bottom--](/docs/Web/CSS/bottom), or [left--](/docs/Web/CSS/left) property depending on the values defined for [writing-mode--](/docs/Web/CSS/writing-mode), [direction--](/docs/Web/CSS/direction), and [text-orientation--](/docs/Web/CSS/text-orientation).",
  "css/inset-inline-start": "The **`inset-inline-start`** [CSS](/en-US/docs/Web/CSS) property defines the logical inline start inset of an element, which maps to a physical offset depending on the element's writing mode, directionality, and text orientation. It corresponds to the [top--](/docs/Web/CSS/top), [right--](/docs/Web/CSS/right), [bottom--](/docs/Web/CSS/bottom), or [left--](/docs/Web/CSS/left) property depending on the values defined for [writing-mode--](/docs/Web/CSS/writing-mode), [direction--](/docs/Web/CSS/direction), and [text-orientation--](/docs/Web/CSS/text-orientation).",
  "css/integer": "The **`<integer>`** [CSS](/en-US/docs/Web/CSS) [data type](/en-US/docs/Web/CSS/CSS_Types) is a special type of [number--](/docs/Web/CSS/number) that represents a positive or negative whole number. Integers can be used in numerous CSS properties and descriptors, such as the [column-count--](/docs/Web/CSS/column-count), [counter-increment--](/docs/Web/CSS/counter-increment), [grid-column--](/docs/Web/CSS/grid-column), [grid-row--](/docs/Web/CSS/grid-row), and [z-index--](/docs/Web/CSS/z-index) properties and the [range--](/docs/Web/CSS/@counter-style/range) descriptor.",
  "css/isolation": "The **`isolation`** [CSS](/en-US/docs/Web/CSS) property determines whether an element must create a new [stacking context--](/docs/Glossary/stacking_context).",
  "css/justify-content": "The [CSS](/en-US/docs/Web/CSS) **`justify-content`** property defines how the browser distributes space between and around content items along the [main-axis--](/docs/Glossary/Main_Axis) of a flex container, and the inline axis of a grid container.",
  "css/justify-items": "The [CSS](/en-US/docs/Web/CSS) **`justify-items`** property defines the default [justify-self--](/docs/Web/CSS/justify-self) for all items of the box, giving them all a default way of justifying each box along the appropriate axis.",
  "css/justify-self": "The [CSS](/en-US/docs/Web/CSS) **`justify-self`** property sets the way a box is justified inside its alignment container along the appropriate axis.",
  "css/justify-tracks": "The **`justify-tracks`** CSS property sets the alignment in the masonry axis for grid containers that have [masonry](/en-US/docs/Web/CSS/CSS_grid_layout/Masonry_layout) in their inline axis.",
  "css/layout_cookbook": "The CSS layout cookbook aims to bring together recipes for common layout patterns, things you might need to implement in your own sites. In addition to providing code you can use as a starting point in your projects, these recipes highlight the different ways layout specifications can be used, and the choices you can make as a developer.",
  "css/layout_mode": "A [CSS](/en-US/docs/Web/CSS) **layout mode**, sometimes called _layout_, is an algorithm that determines the position and size of boxes based on the way they interact with their sibling and ancestor boxes. There are several of them:",
  "css/length": "The **`<length>`** [CSS](/en-US/docs/Web/CSS) [data type](/en-US/docs/Web/CSS/CSS_Types) represents a distance value. Lengths can be used in numerous CSS properties, such as [width--](/docs/Web/CSS/width), [height--](/docs/Web/CSS/height), [margin--](/docs/Web/CSS/margin), [padding--](/docs/Web/CSS/padding), [border-width--](/docs/Web/CSS/border-width), [font-size--](/docs/Web/CSS/font-size), and [text-shadow--](/docs/Web/CSS/text-shadow).",
  "css/length-percentage": "The **`<length-percentage>`** [CSS](/en-US/docs/Web/CSS) [data type](/en-US/docs/Web/CSS/CSS_Types) represents a value that can be either a [length--](/docs/Web/CSS/length) or a [percentage--](/docs/Web/CSS/percentage).",
  "css/letter-spacing": "The **`letter-spacing`** [CSS](/en-US/docs/Web/CSS) property sets the horizontal spacing behavior between text characters. This value is added to the natural spacing between characters while rendering the text. Positive values of `letter-spacing` causes characters to spread farther apart, while negative values of `letter-spacing` bring characters closer together.",
  "css/line-break": "The **`line-break`** CSS property sets how to break lines of Chinese, Japanese, or Korean (CJK) text when working with punctuation and symbols.",
  "css/line-height": "The **`line-height`** [CSS](/en-US/docs/Web/CSS) property sets the height of a line box. It's commonly used to set the distance between lines of text. On block-level elements, it specifies the minimum height of line boxes within the element. On non-[replaced](/en-US/docs/Web/CSS/Replaced_element) inline elements, it specifies the height that is used to calculate line box height.",
  "css/line-height-step": "The **`line-height-step`** CSS property sets the step unit for line box heights. When the property is set, line box heights are rounded up to the closest multiple of the unit.",
  "css/line-style": "The **`<line-style>`** [enumerated--](/docs/Glossary/enumerated) value type represents keyword values that define the style of a line, or the lack of a line. The `<line-style>` keyword values are used in the following longhand and shorthand [border](/en-US/docs/Web/CSS/CSS_backgrounds_and_borders) and [column](/en-US/docs/Web/CSS/CSS_multicol_layout) properties:",
  "css/list-style": "The **`list-style`** CSS [shorthand property](/en-US/docs/Web/CSS/Shorthand_properties) allows you to set all the list style properties at once.",
  "css/list-style-image": "The **`list-style-image`** [CSS](/en-US/docs/Web/CSS) property sets an image to be used as the list item marker.",
  "css/list-style-position": "The **`list-style-position`** [CSS](/en-US/docs/Web/CSS) property sets the position of the [::marker--](/docs/Web/CSS/::marker) relative to a list item.",
  "css/list-style-type": "The **`list-style-type`** [CSS](/en-US/docs/Web/CSS) property sets the marker (such as a disc, character, or custom counter style) of a list item element.",
  "css/log": "The **`log()`** [CSS](/en-US/docs/Web/CSS) [function](/en-US/docs/Web/CSS/CSS_Functions) is an exponential function that returns the logarithm of a number.",
  "css/margin": "The **`margin`** [CSS](/en-US/docs/Web/CSS) shorthand property sets the [margin area](/en-US/docs/Web/CSS/CSS_box_model/Introduction_to_the_CSS_box_model#margin_area) on all four sides of an element.",
  "css/margin-block": "The **`margin-block`** [CSS](/en-US/docs/Web/CSS) [shorthand property](/en-US/docs/Web/CSS/Shorthand_properties) defines the logical block start and end margins of an element, which maps to physical margins depending on the element's writing mode, directionality, and text orientation.",
  "css/margin-block-end": "The **`margin-block-end`** [CSS](/en-US/docs/Web/CSS) property defines the logical block end margin of an element, which maps to a physical margin depending on the element's writing mode, directionality, and text orientation.",
  "css/margin-block-start": "The **`margin-block-start`** [CSS](/en-US/docs/Web/CSS) property defines the logical block start margin of an element, which maps to a physical margin depending on the element's writing mode, directionality, and text orientation.",
  "css/margin-bottom": "The **`margin-bottom`** [CSS](/en-US/docs/Web/CSS) property sets the [margin area](/en-US/docs/Web/CSS/CSS_box_model/Introduction_to_the_CSS_box_model#margin_area) on the bottom of an element. A positive value places it farther from its neighbors, while a negative value places it closer.",
  "css/margin-inline": "The **`margin-inline`** [CSS](/en-US/docs/Web/CSS) [shorthand property](/en-US/docs/Web/CSS/Shorthand_properties) is a shorthand property that defines both the logical inline start and end margins of an element, which maps to physical margins depending on the element's writing mode, directionality, and text orientation.",
  "css/margin-inline-end": "The **`margin-inline-end`** [CSS](/en-US/docs/Web/CSS) property defines the logical inline end margin of an element, which maps to a physical margin depending on the element's writing mode, directionality, and text orientation. In other words, it corresponds to the [margin-top--](/docs/Web/CSS/margin-top), [margin-right--](/docs/Web/CSS/margin-right), [margin-bottom--](/docs/Web/CSS/margin-bottom) or [margin-left--](/docs/Web/CSS/margin-left) property depending on the values defined for [writing-mode--](/docs/Web/CSS/writing-mode), [direction--](/docs/Web/CSS/direction), and [text-orientation--](/docs/Web/CSS/text-orientation).",
  "css/margin-inline-start": "The **`margin-inline-start`** [CSS](/en-US/docs/Web/CSS) property defines the logical inline start margin of an element, which maps to a physical margin depending on the element's writing mode, directionality, and text orientation. It corresponds to the [margin-top--](/docs/Web/CSS/margin-top), [margin-right--](/docs/Web/CSS/margin-right), [margin-bottom--](/docs/Web/CSS/margin-bottom), or [margin-left--](/docs/Web/CSS/margin-left) property depending on the values defined for [writing-mode--](/docs/Web/CSS/writing-mode), [direction--](/docs/Web/CSS/direction), and [text-orientation--](/docs/Web/CSS/text-orientation).",
  "css/margin-left": "The **`margin-left`** [CSS](/en-US/docs/Web/CSS) property sets the [margin area](/en-US/docs/Web/CSS/CSS_box_model/Introduction_to_the_CSS_box_model#margin_area) on the left side of an element. A positive value places it farther from its neighbors, while a negative value places it closer.",
  "css/margin-right": "The **`margin-right`** [CSS](/en-US/docs/Web/CSS) property sets the [margin area](/en-US/docs/Web/CSS/CSS_box_model/Introduction_to_the_CSS_box_model#margin_area) on the right side of an element. A positive value places it farther from its neighbors, while a negative value places it closer.",
  "css/margin-top": "The **`margin-top`** [CSS](/en-US/docs/Web/CSS) property sets the [margin area](/en-US/docs/Web/CSS/CSS_box_model/Introduction_to_the_CSS_box_model#margin_area) on the top of an element. A positive value places it farther from its neighbors, while a negative value places it closer.",
  "css/margin-trim": "The `margin-trim` property allows the container to trim the margins of its children where they adjoin the container's edges.",
  "css/mask": "The **`mask`** [CSS](/en-US/docs/Web/CSS) [shorthand property](/en-US/docs/Web/CSS/Shorthand_properties) hides an element (partially or fully) by masking or clipping the image at specific points.",
  "css/mask-border": "The **`mask-border`** [CSS](/en-US/docs/Web/CSS) [shorthand property](/en-US/docs/Web/CSS/Shorthand_properties) lets you create a mask along the edge of an element's border.",
  "css/mask-border-mode": "The **`mask-border-mode`** [CSS](/en-US/docs/Web/CSS) property specifies the blending mode used in a [mask border](/en-US/docs/Web/CSS/mask-border).",
  "css/mask-border-outset": "The **`mask-border-outset`** [CSS](/en-US/docs/Web/CSS) property specifies the distance by which an element's [mask border](/en-US/docs/Web/CSS/mask-border) is set out from its border box.",
  "css/mask-border-repeat": "The **`mask-border-repeat`** [CSS](/en-US/docs/Web/CSS) property sets how the [edge regions](/en-US/docs/Web/CSS/border-image-slice#edge-regions) of a source image are adjusted to fit the dimensions of an element's [mask border](/en-US/docs/Web/CSS/mask-border).",
  "css/mask-border-slice": "The **`mask-border-slice`** [CSS](/en-US/docs/Web/CSS) property divides the image set by [mask-border-source--](/docs/Web/CSS/mask-border-source) into regions. These regions are used to form the components of an element's [mask border](/en-US/docs/Web/CSS/mask-border).",
  "css/mask-border-source": "The **`mask-border-source`** [CSS](/en-US/docs/Web/CSS) property sets the source image used to create an element's [mask border](/en-US/docs/Web/CSS/mask-border).",
  "css/mask-border-width": "The **`mask-border-width`** [CSS](/en-US/docs/Web/CSS) property sets the width of an element's [mask border](/en-US/docs/Web/CSS/mask-border).",
  "css/mask-clip": "The **`mask-clip`** [CSS](/en-US/docs/Web/CSS) property determines the area which is affected by a mask. The painted content of an element must be restricted to this area.",
  "css/mask-composite": "The **`mask-composite`** [CSS](/en-US/docs/Web/CSS) property represents a compositing operation used on the current mask layer with the mask layers below it.",
  "css/mask-image": "The **`mask-image`** [CSS](/en-US/docs/Web/CSS) property sets the image that is used as mask layer for an element.\nBy default this means the alpha channel of the mask image will be multiplied with the alpha channel of the element. This can be controlled with the [mask-mode--](/docs/Web/CSS/mask-mode) property.",
  "css/mask-mode": "The **`mask-mode`** [CSS](/en-US/docs/Web/CSS) property sets whether the mask reference defined by [mask-image--](/docs/Web/CSS/mask-image) is treated as a luminance or alpha mask.",
  "css/mask-origin": "The **`mask-origin`** [CSS](/en-US/docs/Web/CSS) property sets the origin of a mask.",
  "css/mask-position": "The **`mask-position`** [CSS](/en-US/docs/Web/CSS) property sets the initial position, relative to the mask position layer set by [mask-origin--](/docs/Web/CSS/mask-origin), for each defined mask image.",
  "css/mask-repeat": "The **`mask-repeat`** [CSS](/en-US/docs/Web/CSS) property sets how mask images are repeated. A mask image can be repeated along the horizontal axis, the vertical axis, both axes, or not repeated at all.",
  "css/mask-size": "The **`mask-size`** [CSS](/en-US/docs/Web/CSS) property specifies the sizes of the mask images. The size of the image can be fully or partially constrained in order to preserve its intrinsic ratio.",
  "css/mask-type": "The **`mask-type`** [CSS](/en-US/docs/Web/CSS) property sets whether an SVG [mask--](/docs/Web/SVG/Element/mask) element is used as a _luminance_ or an _alpha_ mask. It applies to the `<mask>` element itself.",
  "css/masonry-auto-flow": "The **`masonry-auto-flow`** CSS property modifies how items are placed when using [masonry](/en-US/docs/Web/CSS/CSS_grid_layout/Masonry_layout) in [CSS Grid Layout](/en-US/docs/Web/CSS/CSS_grid_layout).",
  "css/math-depth": "The **`math-depth`** property describes a notion of _depth_ for each element of a mathematical formula, with respect to the top-level container of that formula. This is used to scale the computed value of the [font-size](/en-US/docs/Web/CSS/font-size) of elements when `font-size: math` is applied.",
  "css/math-shift": "The `math-shift` property indicates whether superscripts inside MathML formulas should be raised by a normal or compact shift.",
  "css/math-style": "The `math-style` property indicates whether MathML equations should render with normal or compact height.",
  "css/max": "The **`max()`** [CSS](/en-US/docs/Web/CSS) [function](/en-US/docs/Web/CSS/CSS_Functions) lets you set the largest (most positive) value from a list of comma-separated expressions as the value of a CSS property value. The `max()` function can be used anywhere a [&lt;length&gt;--](/docs/Web/CSS/&lt;length&gt;), [&lt;frequency&gt;--](/docs/Web/CSS/&lt;frequency&gt;), [&lt;angle&gt;--](/docs/Web/CSS/&lt;angle&gt;), [&lt;time&gt;--](/docs/Web/CSS/&lt;time&gt;), [&lt;percentage&gt;--](/docs/Web/CSS/&lt;percentage&gt;), [&lt;number&gt;--](/docs/Web/CSS/&lt;number&gt;), or [&lt;integer&gt;--](/docs/Web/CSS/&lt;integer&gt;) is allowed.",
  "css/max-block-size": "The **`max-block-size`** [CSS](/en-US/docs/Web/CSS) property specifies the maximum size of an element in the direction opposite that of the writing direction as specified by [writing-mode--](/docs/Web/CSS/writing-mode). That is, if the writing direction is horizontal, then `max-block-size` is equivalent to [max-height--](/docs/Web/CSS/max-height); if the writing direction is vertical, `max-block-size` is the same as [max-width--](/docs/Web/CSS/max-width).",
  "css/max-content": "The `max-content` sizing keyword represents the [intrinsic--](/docs/Glossary/intrinsic_size) maximum width or height of the content. For text content this means that the content will not wrap at all even if it causes overflows.",
  "css/max-height": "The **`max-height`** [CSS](/en-US/docs/Web/CSS) property sets the maximum height of an element. It prevents the [used value](/en-US/docs/Web/CSS/used_value) of the [height--](/docs/Web/CSS/height) property from becoming larger than the value specified for `max-height`.",
  "css/max-inline-size": "The **`max-inline-size`** [CSS](/en-US/docs/Web/CSS) property defines the horizontal or vertical maximum size of an element's block, depending on its writing mode. It corresponds to either the [max-width--](/docs/Web/CSS/max-width) or the [max-height--](/docs/Web/CSS/max-height) property, depending on the value of [writing-mode--](/docs/Web/CSS/writing-mode).",
  "css/max-width": "The **`max-width`** [CSS](/en-US/docs/Web/CSS) property sets the maximum width of an element. It prevents the [used value](/en-US/docs/Web/CSS/used_value) of the [width--](/docs/Web/CSS/width) property from becoming larger than the value specified by `max-width`.",
  "css/min": "The **`min()`** [CSS](/en-US/docs/Web/CSS) [function](/en-US/docs/Web/CSS/CSS_Functions) lets you set the smallest (most negative) value from a list of comma-separated expressions as the value of a CSS property value. The `min()` function can be used anywhere a [&lt;length&gt;--](/docs/Web/CSS/&lt;length&gt;), [&lt;frequency&gt;--](/docs/Web/CSS/&lt;frequency&gt;), [&lt;angle&gt;--](/docs/Web/CSS/&lt;angle&gt;), [&lt;time&gt;--](/docs/Web/CSS/&lt;time&gt;), [&lt;percentage&gt;--](/docs/Web/CSS/&lt;percentage&gt;), [&lt;number&gt;--](/docs/Web/CSS/&lt;number&gt;), or [&lt;integer&gt;--](/docs/Web/CSS/&lt;integer&gt;) is allowed.",
  "css/min-block-size": "The **`min-block-size`** [CSS](/en-US/docs/Web/CSS) property defines the minimum horizontal or vertical size of an element's block, depending on its writing mode. It corresponds to either the [min-width--](/docs/Web/CSS/min-width) or the [min-height--](/docs/Web/CSS/min-height) property, depending on the value of [writing-mode--](/docs/Web/CSS/writing-mode).",
  "css/min-content": "The `min-content` sizing keyword represents the [intrinsic--](/docs/Glossary/intrinsic_size) minimum width of the content. For text content this means that the content will take all soft-wrapping opportunities, becoming as small as the longest word.",
  "css/min-height": "The **`min-height`** [CSS](/en-US/docs/Web/CSS) property sets the minimum height of an element. It prevents the [used value](/en-US/docs/Web/CSS/used_value) of the [height--](/docs/Web/CSS/height) property from becoming smaller than the value specified for `min-height`.",
  "css/min-inline-size": "The **`min-inline-size`** [CSS](/en-US/docs/Web/CSS) property defines the horizontal or vertical minimal size of an element's block, depending on its writing mode. It corresponds to either the [min-width--](/docs/Web/CSS/min-width) or the [min-height--](/docs/Web/CSS/min-height) property, depending on the value of [writing-mode--](/docs/Web/CSS/writing-mode).",
  "css/min-width": "The **`min-width`** [CSS](/en-US/docs/Web/CSS) property sets the minimum width of an element. It prevents the [used value](/en-US/docs/Web/CSS/used_value) of the [width--](/docs/Web/CSS/width) property from becoming smaller than the value specified for `min-width`.",
  "css/minmax": "The **`minmax()`** [CSS function](/en-US/docs/Web/CSS/CSS_Functions) defines a size range greater than or equal to _min_ and less than or equal to _max_. It is used with [CSS Grids](/en-US/docs/Web/CSS/CSS_grid_layout).",
  "css/mix-blend-mode": "The **`mix-blend-mode`** [CSS](/en-US/docs/Web/CSS) property sets how an element's content should blend with the content of the element's parent and the element's background.",
  "css/mod": "The **`mod()`** [CSS](/en-US/docs/Web/CSS) [function](/en-US/docs/Web/CSS/CSS_Functions) returns a modulus left over when the first parameter is divided by the second parameter, similar to the JavaScript [remainder operator (`%`)](/en-US/docs/Web/JavaScript/Reference/Operators/Remainder). The modulus is the value left over when one operand, the dividend, is divided by a second operand, the divisor. It always takes the sign of the divisor.",
  "css/mozilla_extensions": "Firefox supports a number of _Mozilla extensions to [CSS](/en-US/docs/Web/CSS)_, including properties, values, pseudo-elements and pseudo-classes, at-rules, and media queries. These extensions are prefixed with `-moz-`.",
  "css/named-color": "The **`<named-color>`** [CSS](/en-US/docs/Web/CSS) [data type](/en-US/docs/Web/CSS/CSS_Types) is the name of a color, such as `red`, `blue`, `black`, or `lightseagreen`. Syntactically, a `<named-color>` is an [`<ident>`](/en-US/docs/Web/CSS/ident).",
  "css/namespace_separator": "The **namespace separator** (`|`) separates the selector from the namespace, identifying the [namespace--](/docs/Glossary/namespace), or lack thereof, for a type selector.",
  "css/nesting_selector": "The CSS **`&` nesting selector** explicitly states the relationship between parent and child rules when using [CSS nesting](/en-US/docs/Web/CSS/CSS_nesting). It makes the nested child rule selectors _relative to the parent element_. Without the `&` nesting selector, the child rule selector selects child elements. The child rule selectors have the same [specificity](/en-US/docs/Web/CSS/CSS_nesting/Nesting_and_specificity) weight as if they were within [:is()--](/docs/Web/CSS/:is).",
  "css/next-sibling_combinator": "The **next-sibling combinator** (`+`) separates two selectors and matches the second element only if it _immediately_ follows the first element, and both are children of the same parent [element--](/docs/Web/API/element).",
  "css/number": "The **`<number>`** [CSS](/en-US/docs/Web/CSS) [data type](/en-US/docs/Web/CSS/CSS_Types) represents a number, being either an integer or a number with a fractional component.",
  "css/object-fit": "The **`object-fit`** [CSS](/en-US/docs/Web/CSS) property sets how the content of a [replaced element](/en-US/docs/Web/CSS/Replaced_element), such as an [img--](/docs/Web/HTML/Element/img) or [video--](/docs/Web/HTML/Element/video), should be resized to fit its container.",
  "css/object-position": "The **`object-position`** [CSS](/en-US/docs/Web/CSS) property specifies the alignment of the selected [replaced element](/en-US/docs/Web/CSS/Replaced_element)'s contents within the element's box. Areas of the box which aren't covered by the replaced element's object will show the element's background.",
  "css/offset": "The **`offset`** CSS [shorthand property](/en-US/docs/Web/CSS/Shorthand_properties) sets all the properties required for animating an element along a defined path. The offset properties together help to define an _offset transform_, a [transform](/en-US/docs/Web/CSS/CSS_transforms/Using_CSS_transforms) that aligns a point in an element ([offset-anchor](/en-US/docs/Web/CSS/offset-anchor)) to an _offset position_ ([offset-position](/en-US/docs/Web/CSS/offset-position)) on a path ([offset-path](/en-US/docs/Web/CSS/offset-path)) at various points along the path ([offset-distance](/en-US/docs/Web/CSS/offset-distance)) and optionally rotates the element ([offset-rotate](/en-US/docs/Web/CSS/offset-rotate)) to follow the direction of the path.",
  "css/offset-anchor": "The **`offset-anchor`** [CSS](/en-US/docs/Web/CSS) property specifies the point inside the box of an element traveling along an [offset-path--](/docs/Web/CSS/offset-path) that is actually moving along the path.",
  "css/offset-distance": "The **`offset-distance`** CSS property specifies a position along an [offset-path--](/docs/Web/CSS/offset-path) for an element to be placed.",
  "css/offset-path": "The **`offset-path`** [CSS](/en-US/docs/Web/CSS) property specifies a path for an element to follow and determines the element's positioning within the path's parent container or the SVG coordinate system. The path is a line, a curve, or a geometrical shape along which the element gets positioned or moves.",
  "css/offset-position": "The **`offset-position`** [CSS](/en-US/docs/Web/CSS) property defines the initial position of an element along a path. This property is typically used in combination with the [offset-path--](/docs/Web/CSS/offset-path) property to create a motion effect. The value of `offset-position` determines where the element gets placed initially for moving along an offset path if an `offset-path` function such as [path()--](/docs/Web/CSS/path) does not specify its own starting position.",
  "css/offset-rotate": "The **`offset-rotate`** CSS property defines the orientation/direction of the element as it is positioned along the [offset-path--](/docs/Web/CSS/offset-path).",
  "css/opacity": "The **`opacity`** [CSS](/en-US/docs/Web/CSS) property sets the opacity of an element. Opacity is the degree to which content behind an element is hidden, and is the opposite of transparency.",
  "css/order": "The **`order`** [CSS](/en-US/docs/Web/CSS) property sets the order to lay out an item in a flex or grid container. Items in a container are sorted by ascending `order` value and then by their source code order. Items not given an explicit `order` value are assigned the default value of `0`.",
  "css/orphans": "The **`orphans`** [CSS](/en-US/docs/Web/CSS) property sets the minimum number of lines in a block container that must be shown at the _bottom_ of a [page](/en-US/docs/Web/CSS/CSS_paged_media), region, or [column](/en-US/docs/Web/CSS/CSS_multicol_layout).",
  "css/outline": "The **`outline`** [CSS](/en-US/docs/Web/CSS) [shorthand property](/en-US/docs/Web/CSS/Shorthand_properties) sets most of the outline properties in a single declaration.",
  "css/outline-color": "The **`outline-color`** CSS property sets the color of an element's outline.",
  "css/outline-offset": "The **`outline-offset`** CSS property sets the amount of space between an [outline](/en-US/docs/Web/CSS/outline) and the edge or border of an element.",
  "css/outline-style": "The **`outline-style`** [CSS](/en-US/docs/Web/CSS) property sets the style of an element's outline. An outline is a line that is drawn around an element, outside the [border--](/docs/Web/CSS/border).",
  "css/outline-width": "The [CSS](/en-US/docs/Web/CSS) **`outline-width`** property sets the thickness of an element's outline. An outline is a line that is drawn around an element, outside the [border--](/docs/Web/CSS/border).",
  "css/overflow": "The **`overflow`** [CSS](/en-US/docs/Web/CSS) [shorthand property](/en-US/docs/Web/CSS/Shorthand_properties) sets the desired behavior when content does not fit in the parent element box (overflows) in the horizontal and/or vertical direction.",
  "css/overflow-anchor": "The **`overflow-anchor`** [CSS](/en-US/docs/Web/CSS) property provides a way to opt out of the browser's scroll anchoring behavior, which adjusts scroll position to minimize content shifts.",
  "css/overflow-block": "The **`overflow-block`** [CSS](/en-US/docs/Web/CSS) property sets what shows when content overflows the block start and block end edges of a box. This may be nothing, a scroll bar, or the overflow content.",
  "css/overflow-clip-margin": "The **`overflow-clip-margin`** [CSS](/en-US/docs/Web/CSS) property determines how far outside its bounds an element with [`overflow: clip`](/en-US/docs/Web/CSS/overflow) may be painted before being clipped. The bound defined by this property is called the _overflow clip edge_ of the box.",
  "css/overflow-inline": "The **`overflow-inline`** [CSS](/en-US/docs/Web/CSS) property sets what shows when content overflows the inline start and end edges of a box. This may be nothing, a scroll bar, or the overflow content.",
  "css/overflow-wrap": "The **`overflow-wrap`** [CSS](/en-US/docs/Web/CSS) property applies to text, setting whether the browser should insert line breaks within an otherwise unbreakable string to prevent text from overflowing its line box.",
  "css/overflow-x": "The **`overflow-x`** [CSS](/en-US/docs/Web/CSS) property sets what shows when content overflows a block-level element's left and right edges. This may be nothing, a scroll bar, or the overflow content. This property may also be set by using the [`overflow`](/en-US/docs/Web/CSS/overflow) shorthand property.",
  "css/overflow-y": "The **`overflow-y`** [CSS](/en-US/docs/Web/CSS) property sets what shows when content overflows a block-level element's top and bottom edges. This may be nothing, a scroll bar, or the overflow content. This property may also be set by using the [`overflow`](/en-US/docs/Web/CSS/overflow) shorthand property.",
  "css/overflow_value": "The **`<overflow>`** [enumerated--](/docs/Glossary/enumerated) value type represents the keyword values for the [overflow-block--](/docs/Web/CSS/overflow-block), [overflow-inline--](/docs/Web/CSS/overflow-inline), [overflow-x--](/docs/Web/CSS/overflow-x), and [overflow-y--](/docs/Web/CSS/overflow-y) longhand properties and the [overflow--](/docs/Web/CSS/overflow) shorthand property. These properties apply to block containers, flex containers, and grid containers.",
  "css/overlay": "The **`overlay`** [CSS](/en-US/docs/Web/CSS) property specifies whether an element appearing in the [top layer](/en-US/docs/Glossary/Top_layer) (for example, a shown [popover](/en-US/docs/Web/API/Popover_API) or modal [dialog--](/docs/Web/HTML/Element/dialog) element) is actually rendered in the top layer. This property is only relevant within a list of [transition-property--](/docs/Web/CSS/transition-property) values, and only if `allow-discrete` is set as the [transition-behavior--](/docs/Web/CSS/transition-behavior).",
  "css/overscroll-behavior": "The **`overscroll-behavior`** CSS property sets what a browser does when reaching the boundary of a scrolling area.",
  "css/overscroll-behavior-block": "The **`overscroll-behavior-block`** CSS property sets the browser's behavior when the block direction boundary of a scrolling area is reached.",
  "css/overscroll-behavior-inline": "The **`overscroll-behavior-inline`** CSS property sets the browser's behavior when the inline direction boundary of a scrolling area is reached.",
  "css/overscroll-behavior-x": "The **`overscroll-behavior-x`** CSS property sets the browser's behavior when the horizontal boundary of a scrolling area is reached.",
  "css/overscroll-behavior-y": "The **`overscroll-behavior-y`** CSS property sets the browser's behavior when the vertical boundary of a scrolling area is reached.",
  "css/padding": "The **`padding`** [CSS](/en-US/docs/Web/CSS) [shorthand property](/en-US/docs/Web/CSS/Shorthand_properties) sets the [padding area](/en-US/docs/Web/CSS/CSS_box_model/Introduction_to_the_CSS_box_model#padding_area) on all four sides of an element at once.",
  "css/padding-block": "The **`padding-block`** [CSS](/en-US/docs/Web/CSS) [shorthand property](/en-US/docs/Web/CSS/Shorthand_properties) defines the logical block start and end padding of an element, which maps to physical padding properties depending on the element's writing mode, directionality, and text orientation.",
  "css/padding-block-end": "The **`padding-block-end`** [CSS](/en-US/docs/Web/CSS) property defines the logical block end padding of an element, which maps to a physical padding depending on the element's writing mode, directionality, and text orientation.",
  "css/padding-block-start": "The **`padding-block-start`** [CSS](/en-US/docs/Web/CSS) property defines the logical block start padding of an element, which maps to a physical padding depending on the element's writing mode, directionality, and text orientation.",
  "css/padding-bottom": "The **`padding-bottom`** [CSS](/en-US/docs/Web/CSS) property sets the height of the [padding area](/en-US/docs/Web/CSS/CSS_box_model/Introduction_to_the_CSS_box_model#padding_area) on the bottom of an element.",
  "css/padding-inline": "The **`padding-inline`** [CSS](/en-US/docs/Web/CSS) [shorthand property](/en-US/docs/Web/CSS/Shorthand_properties) defines the logical inline start and end padding of an element, which maps to physical padding properties depending on the element's writing mode, directionality, and text orientation.",
  "css/padding-inline-end": "The **`padding-inline-end`** [CSS](/en-US/docs/Web/CSS) property defines the logical inline end padding of an element, which maps to a physical padding depending on the element's writing mode, directionality, and text orientation.",
  "css/padding-inline-start": "The **`padding-inline-start`** [CSS](/en-US/docs/Web/CSS) property defines the logical inline start padding of an element, which maps to a physical padding depending on the element's writing mode, directionality, and text orientation.",
  "css/padding-left": "The **`padding-left`** [CSS](/en-US/docs/Web/CSS) property sets the width of the [padding area](/en-US/docs/Web/CSS/CSS_box_model/Introduction_to_the_CSS_box_model#padding_area) to the left of an element.",
  "css/padding-right": "The **`padding-right`** [CSS](/en-US/docs/Web/CSS) property sets the width of the [padding area](/en-US/docs/Web/CSS/CSS_box_model/Introduction_to_the_CSS_box_model#padding_area) on the right of an element.",
  "css/padding-top": "The **`padding-top`** [CSS](/en-US/docs/Web/CSS) property sets the height of the [padding area](/en-US/docs/Web/CSS/CSS_box_model/Introduction_to_the_CSS_box_model#padding_area) on the top of an element.",
  "css/page": "The **`page`** [CSS](/en-US/docs/Web/CSS) property is used to specify the named page, a specific type of page defined by the [@page--](/docs/Web/CSS/@page) [at-rule](/en-US/docs/Web/CSS/At-rule).",
  "css/page-break-after": "> **Warning:** This property has been replaced by the [break-after--](/docs/Web/CSS/break-after) property.",
  "css/page-break-before": "> **Warning:** This property has been replaced by the [break-before--](/docs/Web/CSS/break-before) property.",
  "css/page-break-inside": "> **Warning:** This property has been replaced by the [break-inside--](/docs/Web/CSS/break-inside) property.",
  "css/paint-order": "The **`paint-order`** [CSS](/en-US/docs/Web/CSS) property lets you control the order in which the fill and stroke (and painting markers) of text content and shapes are drawn.",
  "css/path": "The **`path()`** [CSS](/en-US/docs/Web/CSS) [function](/en-US/docs/Web/CSS/CSS_Functions) accepts an SVG path string, and is used in [CSS Shapes](/en-US/docs/Web/CSS/CSS_shapes) and CSS Motion Path to enable a shape to be drawn.",
  "css/percentage": "The **`<percentage>`** [CSS](/en-US/docs/Web/CSS) [data type](/en-US/docs/Web/CSS/CSS_Types) represents a percentage value. It is often used to define a size as relative to an element's parent object. Numerous properties can use percentages, such as [width--](/docs/Web/CSS/width), [height--](/docs/Web/CSS/height), [margin--](/docs/Web/CSS/margin), [padding--](/docs/Web/CSS/padding), and [font-size--](/docs/Web/CSS/font-size).",
  "css/perspective": "The **`perspective`** [CSS](/en-US/docs/Web/CSS) property determines the distance between the z=0 plane and the user in order to give a 3D-positioned element some perspective.",
  "css/perspective-origin": "The **`perspective-origin`** [CSS](/en-US/docs/Web/CSS) property determines the position at which the viewer is looking. It is used as the _vanishing point_ by the [perspective--](/docs/Web/CSS/perspective) property.",
  "css/place-content": "The **`place-content`** [CSS](/en-US/docs/Web/CSS) [shorthand property](/en-US/docs/Web/CSS/Shorthand_properties) allows you to align content along both the block and inline directions at once (i.e. the [align-content--](/docs/Web/CSS/align-content) and [justify-content--](/docs/Web/CSS/justify-content) properties) in a relevant layout system such as [Grid](/en-US/docs/Web/CSS/CSS_grid_layout) or [Flexbox](/en-US/docs/Web/CSS/CSS_flexible_box_layout).",
  "css/place-items": "The [CSS](/en-US/docs/Web/CSS) **`place-items`** [shorthand property](/en-US/docs/Web/CSS/Shorthand_properties) allows you to align items along both the block and inline directions at once (i.e. the [align-items--](/docs/Web/CSS/align-items) and [justify-items--](/docs/Web/CSS/justify-items) properties) in a relevant layout system such as [Grid](/en-US/docs/Web/CSS/CSS_grid_layout) or [Flexbox](/en-US/docs/Web/CSS/CSS_flexible_box_layout). If the second value is not set, the first value is also used for it.",
  "css/place-self": "The **`place-self`** [CSS](/en-US/docs/Web/CSS) [shorthand property](/en-US/docs/Web/CSS/Shorthand_properties) allows you to align an individual item in both the block and inline directions at once (i.e. the [align-self--](/docs/Web/CSS/align-self) and [justify-self--](/docs/Web/CSS/justify-self) properties) in a relevant layout system such as [Grid](/en-US/docs/Web/CSS/CSS_grid_layout) or [Flexbox](/en-US/docs/Web/CSS/CSS_flexible_box_layout). If the second value is not present, the first value is also used for it.",
  "css/pointer-events": "The **`pointer-events`** [CSS](/en-US/docs/Web/CSS) property sets under what circumstances (if any) a particular graphic element can become the [target](/en-US/docs/Web/API/Event/target) of pointer events.",
  "css/position": "The **`position`** [CSS](/en-US/docs/Web/CSS) property sets how an element is positioned in a document. The [top--](/docs/Web/CSS/top), [right--](/docs/Web/CSS/right), [bottom--](/docs/Web/CSS/bottom), and [left--](/docs/Web/CSS/left) properties determine the final location of positioned elements.",
  "css/position_value": "The **`<position>`** [CSS](/en-US/docs/Web/CSS) [data type](/en-US/docs/Web/CSS/CSS_Types) denotes a two-dimensional coordinate used to set a location relative to an element box. It is used in the [background-position--](/docs/Web/CSS/background-position), [object-position--](/docs/Web/CSS/object-position), [mask-position--](/docs/Web/CSS/mask-position) [offset-position--](/docs/Web/CSS/offset-position), [offset-anchor--](/docs/Web/CSS/offset-anchor) and [transform-origin--](/docs/Web/CSS/transform-origin) properties.",
  "css/pow": "The **`pow()`** [CSS](/en-US/docs/Web/CSS) [function](/en-US/docs/Web/CSS/CSS_Functions) is an exponential function that returns the value of a base raised to the power of a number.",
  "css/print-color-adjust": "The **`print-color-adjust`** CSS property sets what, if anything, the [user agent--](/docs/Glossary/user_agent) may do to optimize the appearance of the element on the output device.\nBy default, the browser is allowed to make any adjustments to the element's appearance it determines to be necessary and prudent given the type and capabilities of the output device.",
  "css/privacy_and_the_visited_selector": "Before about 2010, the [CSS](/en-US/docs/Web/CSS) [:visited--](/docs/Web/CSS/:visited) selector allowed websites to uncover a user's browsing history and figure out what sites the user had visited. This was done through [window.getComputedStyle--](/docs/Web/API/window/getComputedStyle) and other techniques. This process was quick to execute, and made it possible not only to determine where the user had been on the web, but could also be used to guess a lot of information about the user's identity.",
  "css/pseudo-classes": "A [CSS](/en-US/docs/Web/CSS) **_pseudo-class_** is a keyword added to a selector that specifies a special state of the selected element(s). For example, the pseudo-class [:hover--](/docs/Web/CSS/:hover) can be used to select a button when a user's pointer hovers over the button and this selected button can then be styled.",
  "css/pseudo-elements": "A CSS **pseudo-element** is a keyword added to a selector that lets you style a specific part of the selected element(s).",
  "css/quotes": "The [CSS](/en-US/docs/Web/CSS) **`quotes`** property sets how the browser should render quotation marks that are automatically added to the HTML [q--](/docs/Web/HTML/Element/q) element or added using the `open-quotes` or `close-quotes` (or omitted using the `no-open-quote` and `no-close-quote`) values of the of the CSS [`content`](/en-US/docs/Web/CSS/content) property.",
  "css/ratio": "The **`<ratio>`** [CSS](/en-US/docs/Web/CSS) [data type](/en-US/docs/Web/CSS/CSS_Types), used for describing [aspect ratios](/en-US/docs/Web/CSS/@media/aspect-ratio) in [media queries](/en-US/docs/Web/CSS/CSS_media_queries), denotes the proportion between two unitless values.",
  "css/ray": "The **`ray()`** [CSS](/en-US/docs/Web/CSS) [function](/en-US/docs/Web/CSS/CSS_Functions) defines the [`offset-path`](/en-US/docs/Web/CSS/offset-path) line segment that an animated element can follow. The line segment is referred to as \"ray\". The ray begins from an [offset-position--](/docs/Web/CSS/offset-position) and extends in the direction of the specified angle. The length of a ray can be constrained by specifying a size and using the `contain` keyword.",
  "css/reference": "Use this **CSS reference** to browse an [alphabetical index](#index) of all of the standard [CSS](/en-US/docs/Web/CSS) properties, [pseudo-classes](/en-US/docs/Web/CSS/Pseudo-classes), [pseudo-elements](/en-US/docs/Web/CSS/Pseudo-elements), [data types](/en-US/docs/Web/CSS/CSS_Types), [functional notations](/en-US/docs/Web/CSS/CSS_Functions) and [at-rules](/en-US/docs/Web/CSS/At-rule). You can also browse [key CSS concepts](#concepts) and a list of [selectors organized by type](#selectors). Also included is a brief [DOM-CSS / CSSOM reference](#dom-css_cssom).",
  "css/relative-size": "The **`<relative-size>`** [CSS](/en-US/docs/Web/CSS) [data type](/en-US/docs/Web/CSS/CSS_Types) describes relative size keywords. The `<relative-size>` keywords define a size relative to the computed size of the parent element. This data type is used in the [font--](/docs/Web/CSS/font) shorthand and [font-size--](/docs/Web/CSS/font-size) properties.",
  "css/rem": "The **`rem()`** [CSS](/en-US/docs/Web/CSS) [function](/en-US/docs/Web/CSS/CSS_Functions) returns a remainder left over when the first parameter is divided by the second parameter, similar to the JavaScript [remainder operator (`%`)](/en-US/docs/Web/JavaScript/Reference/Operators/Remainder). The remainder is the value left over when one operand, the dividend, is divided by a second operand, the divisor. It always takes the sign of the dividend.",
  "css/repeat": "The **`repeat()`** [CSS](/en-US/docs/Web/CSS) [function](/en-US/docs/Web/CSS/CSS_Functions) represents a repeated fragment of the [track list](/en-US/docs/Web/CSS/CSS_grid_layout/Basic_concepts_of_grid_layout), allowing a large number of columns or rows that exhibit a recurring pattern to be written in a more compact form.",
  "css/replaced_element": "In [CSS](/en-US/docs/Web/CSS), a **replaced element** is an element whose representation is outside the scope of CSS; they're external objects whose representation is independent of the CSS formatting model.",
  "css/resize": "The **`resize`** [CSS](/en-US/docs/Web/CSS) property sets whether an element is resizable, and if so, in which directions.",
  "css/resolution": "The **`<resolution>`** [CSS](/en-US/docs/Web/CSS) [data type](/en-US/docs/Web/CSS/CSS_Types), used for describing [resolutions](/en-US/docs/Web/CSS/@media/resolution) in [media queries](/en-US/docs/Web/CSS/CSS_media_queries), denotes the pixel density of an output device, i.e., its resolution.",
  "css/resolved_value": "The **resolved value** of a [CSS](/en-US/docs/Web/CSS) property is the value returned by [getComputedStyle()--](/docs/Web/API/Window/getComputedStyle).",
  "css/revert": "The **`revert`** CSS keyword reverts the cascaded value of the property from its current value to the value the property would have had if no changes had been made by the current **[style origin--](/docs/Glossary/style_origin)** to the current element. Thus, it resets the property either to user agent set value, to user set value, to its inherited value (if it is inheritable), or to initial value. It can be applied to any CSS property, including the CSS shorthand property [all--](/docs/Web/CSS/all).",
  "css/revert-layer": "The **`revert-layer`** CSS keyword rolls back the value of a property in a [cascade layer--](/docs/Web/CSS/@layer) to the value of the property in a CSS rule matching the element in a previous cascade layer. The value of the property with this keyword is recalculated as if no rules were specified on the target element in the current cascade layer.",
  "css/rotate": "The **`rotate`** [CSS](/en-US/docs/Web/CSS) property allows you to specify rotation transforms individually and independently of the [transform--](/docs/Web/CSS/transform) property. This maps better to typical user interface usage, and saves having to remember the exact order of transform functions to specify in the `transform` property.",
  "css/round": "The **`round()`** [CSS](/en-US/docs/Web/CSS) [function](/en-US/docs/Web/CSS/CSS_Functions) returns a rounded number based on a selected rounding strategy.",
  "css/row-gap": "The **`row-gap`** [CSS](/en-US/docs/Web/CSS) property sets the size of the gap ([gutter--](/docs/Glossary/gutters)) between an element's rows.",
  "css/ruby-align": "The **`ruby-align`** CSS property defines the distribution of the different ruby elements over the base.",
  "css/ruby-position": "The **`ruby-position`** CSS property defines the position of a ruby element relatives to its base element. It can be positioned over the element (`over`), under it (`under`), or between the characters on their right side (`inter-character`).",
  "css/scale": "The **`scale`** [CSS](/en-US/docs/Web/CSS) property allows you to specify scale transforms individually and independently of the [transform--](/docs/Web/CSS/transform) property. This maps better to typical user interface usage, and saves having to remember the exact order of transform functions to specify in the `transform` value.",
  "css/scaling_of_svg_backgrounds": "Given the flexibility of SVG images, there's a lot to keep in mind when using them as background images with the [background-image--](/docs/Web/CSS/background-image) property, and even more to keep in mind when also scaling them using the [background-size--](/docs/Web/CSS/background-size) property. This article describes how scaling of SVG images is handled when using these properties.",
  "css/scroll-behavior": "The **`scroll-behavior`** [CSS](/en-US/docs/Web/CSS) property sets the behavior for a scrolling box when scrolling is triggered by the navigation or CSSOM scrolling APIs.",
  "css/scroll-margin": "The **`scroll-margin`** [shorthand property](/en-US/docs/Web/CSS/Shorthand_properties) sets all of the scroll margins of an element at once, assigning values much like the [`margin`](/en-US/docs/Web/CSS/margin) property does for margins of an element.",
  "css/scroll-margin-block": "The `scroll-margin-block` [shorthand property](/en-US/docs/Web/CSS/Shorthand_properties) sets the scroll margins of an element in the block dimension.",
  "css/scroll-margin-block-end": "The `scroll-margin-block-end` property defines the margin of the scroll snap area at the end of the block dimension that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container's coordinate space), then adding the specified outsets.",
  "css/scroll-margin-block-start": "The `scroll-margin-block-start` property defines the margin of the scroll snap area at the start of the block dimension that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container's coordinate space), then adding the specified outsets.",
  "css/scroll-margin-bottom": "The `scroll-margin-bottom` property defines the bottom margin of the scroll snap area that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container's coordinate space), then adding the specified outsets.",
  "css/scroll-margin-inline": "The `scroll-margin-inline` [shorthand property](/en-US/docs/Web/CSS/Shorthand_properties) sets the scroll margins of an element in the inline dimension.",
  "css/scroll-margin-inline-end": "The `scroll-margin-inline-end` property defines the margin of the scroll snap area at the end of the inline dimension that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container's coordinate space), then adding the specified outsets.",
  "css/scroll-margin-inline-start": "The `scroll-margin-inline-start` property defines the margin of the scroll snap area at the start of the inline dimension that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container's coordinate space), then adding the specified outsets.",
  "css/scroll-margin-left": "The `scroll-margin-left` property defines the left margin of the scroll snap area that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container's coordinate space), then adding the specified outsets.",
  "css/scroll-margin-right": "The `scroll-margin-right` property defines the right margin of the scroll snap area that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container's coordinate space), then adding the specified outsets.",
  "css/scroll-margin-top": "The `scroll-margin-top` property defines the top margin of the scroll snap area that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container's coordinate space), then adding the specified outsets.",
  "css/scroll-padding": "The **`scroll-padding`** [shorthand property](/en-US/docs/Web/CSS/Shorthand_properties) sets scroll padding on all sides of an element at once, much like the [padding--](/docs/Web/CSS/padding) property does for padding on an element.",
  "css/scroll-padding-block": "The `scroll-padding-block` [shorthand property](/en-US/docs/Web/CSS/Shorthand_properties) sets the scroll padding of an element in the block dimension.",
  "css/scroll-padding-block-end": "The `scroll-padding-block-end` property defines offsets for the end edge in the block dimension of the _optimal viewing region_ of the scrollport: the region used as the target region for placing things in view of the user. This allows the author to exclude regions of the scrollport that are obscured by other content (such as fixed-positioned toolbars or sidebars) or to put more breathing room between a targeted element and the edges of the scrollport.",
  "css/scroll-padding-block-start": "The `scroll-padding-block-start` property defines offsets for the start edge in the block dimension of the _optimal viewing region_ of the scrollport: the region used as the target region for placing things in view of the user. This allows the author to exclude regions of the scrollport that are obscured by other content (such as fixed-positioned toolbars or sidebars) or to put more breathing room between a targeted element and the edges of the scrollport.",
  "css/scroll-padding-bottom": "The `scroll-padding-bottom` property defines offsets for the bottom of the _optimal viewing region_ of the scrollport: the region used as the target region for placing things in view of the user. This allows the author to exclude regions of the scrollport that are obscured by other content (such as fixed-positioned toolbars or sidebars) or to put more breathing room between a targeted element and the edges of the scrollport.",
  "css/scroll-padding-inline": "The `scroll-padding-inline` [shorthand property](/en-US/docs/Web/CSS/Shorthand_properties) sets the scroll padding of an element in the inline dimension.",
  "css/scroll-padding-inline-end": "The `scroll-padding-inline-end` property defines offsets for the end edge in the inline dimension of the _optimal viewing region_ of the scrollport: the region used as the target region for placing things in view of the user. This allows the author to exclude regions of the scrollport that are obscured by other content (such as fixed-positioned toolbars or sidebars) or to put more breathing room between a targeted element and the edges of the scrollport.",
  "css/scroll-padding-inline-start": "The `scroll-padding-inline-start` property defines offsets for the start edge in the inline dimension of the _optimal viewing region_ of the scrollport: the region used as the target region for placing things in view of the user. This allows the author to exclude regions of the scrollport that are obscured by other content (such as fixed-positioned toolbars or sidebars) or to put more breathing room between a targeted element and the edges of the scrollport.",
  "css/scroll-padding-left": "The `scroll-padding-left` property defines offsets for the left of the _optimal viewing region_ of the scrollport: the region used as the target region for placing things in view of the user. This allows the author to exclude regions of the scrollport that are obscured by other content (such as fixed-positioned toolbars or sidebars) or to put more breathing room between a targeted element and the edges of the scrollport.",
  "css/scroll-padding-right": "The `scroll-padding-right` property defines offsets for the right of the _optimal viewing region_ of the scrollport: the region used as the target region for placing things in view of the user. This allows the author to exclude regions of the scrollport that are obscured by other content (such as fixed-positioned toolbars or sidebars) or to put more breathing room between a targeted element and the edges of the scrollport.",
  "css/scroll-padding-top": "The **`scroll-padding-top`** property defines offsets for the top of the _optimal viewing region_ of the scrollport: the region used as the target region for placing things in view of the user. This allows the author to exclude regions of the scrollport that are obscured by other content (such as fixed-positioned toolbars or sidebars) or to put more breathing room between a targeted element and the edges of the scrollport.",
  "css/scroll-snap-align": "The `scroll-snap-align` property specifies the box's snap position as an alignment of its snap area (as the alignment subject) within its snap container's snap port (as the alignment container).",
  "css/scroll-snap-stop": "The **`scroll-snap-stop`** [CSS](/en-US/docs/Web/CSS) property defines whether or not the scroll container is allowed to \"pass over\" possible snap positions.",
  "css/scroll-snap-type": "The **`scroll-snap-type`** [CSS](/en-US/docs/Web/CSS) property sets how strictly snap points are enforced on the scroll container in case there is one.",
  "css/scroll-timeline": "The **`scroll-timeline`** [CSS](/en-US/docs/Web/CSS) [shorthand property](/en-US/docs/Web/CSS/Shorthand_properties) is used to define a _named scroll progress timeline_, which is progressed through by scrolling a scrollable element (_scroller_) between top and bottom (or left and right). `scroll-timeline` is set on the scroller that will provide the timeline. The starting scroll position represents 0% progress and the ending scroll position represents 100% progress. If the 0% position and 100% position coincide (i.e., the scroll container has no overflow to scroll), the timeline is inactive.",
  "css/scroll-timeline-axis": "The **`scroll-timeline-axis`** [CSS](/en-US/docs/Web/CSS) property is used to specify the scrollbar direction that will be used to provide the timeline for a _named scroll progress timeline_ animation, which is progressed through by scrolling a scrollable element (_scroller_) between top and bottom (or left and right). `scroll-timeline` is set on the scroller that will provide the timeline. See [CSS scroll-driven animations](/en-US/docs/Web/CSS/CSS_scroll-driven_animations) for more details.",
  "css/scroll-timeline-name": "The **`scroll-timeline-name`** [CSS](/en-US/docs/Web/CSS) property is used to define the name of a _named scroll progress timeline_, which is progressed through by scrolling a scrollable element (_scroller_) between top and bottom (or left and right). `scroll-timeline-name` is set on the scroller that will provide the timeline.",
  "css/scrollbar-color": "The **`scrollbar-color`** [CSS](/en-US/docs/Web/CSS) property sets the color of the scrollbar track and thumb.",
  "css/scrollbar-gutter": "The **`scrollbar-gutter`** [CSS](/en-US/docs/Web/CSS) property allows authors to reserve space for the scrollbar, preventing unwanted layout changes as the content grows while also avoiding unnecessary visuals when scrolling isn't needed.",
  "css/scrollbar-width": "The **`scrollbar-width`** property allows the author to set the maximum thickness of an element's scrollbars when they are shown.",
  "css/selector_list": "The CSS **selector list** (`,`) selects all the matching nodes. A selector list is a comma-separated list of selectors.",
  "css/shape": "The **`<shape>`** [CSS](/en-US/docs/Web/CSS) [data type](/en-US/docs/Web/CSS/CSS_Types) defines the specific form (shape) of a region. The region represents the part of an element to which the [clip--](/docs/Web/CSS/clip) property applies.",
  "css/shape-image-threshold": "The **`shape-image-threshold`** [CSS](/en-US/docs/Web/CSS) property sets the alpha channel threshold used to extract the shape using an image as the value for [shape-outside--](/docs/Web/CSS/shape-outside).",
  "css/shape-margin": "The **`shape-margin`** [CSS](/en-US/docs/Web/CSS) property sets a margin for a CSS shape created using [shape-outside--](/docs/Web/CSS/shape-outside).",
  "css/shape-outside": "The **`shape-outside`** [CSS](/en-US/docs/Web/CSS) property defines a shape—which may be non-rectangular—around which adjacent inline content should wrap. By default, inline content wraps around its margin box; `shape-outside` provides a way to customize this wrapping, making it possible to wrap text around complex objects rather than simple boxes.",
  "css/shorthand_properties": "**_Shorthand properties_** are CSS properties that let you set the values of multiple other CSS properties simultaneously. Using a shorthand property, you can write more concise (and often more readable) style sheets, saving time and energy.",
  "css/sign": "The **`sign()`** [CSS](/en-US/docs/Web/CSS) [function](/en-US/docs/Web/CSS/CSS_Functions) contains one calculation, and returns `-1` if the numeric value of the argument is negative, `+1` if the numeric value of the argument is positive, `0⁺` if the numeric value of the argument is 0⁺, and `0⁻` if the numeric value of the argument is 0⁻.",
  "css/sin": "The **`sin()`** [CSS](/en-US/docs/Web/CSS) [function](/en-US/docs/Web/CSS/CSS_Functions) is a trigonometric function that returns the sine of a number, which is a value between `-1` and `1`. The function contains a single calculation that must resolve to either a [&lt;number&gt;--](/docs/Web/CSS/&lt;number&gt;) or an [&lt;angle&gt;--](/docs/Web/CSS/&lt;angle&gt;) by interpreting the result of the argument as radians. That is, `sin(45deg)`, `sin(0.125turn)`, and `sin(3.14159 / 4)` all represent the same value, approximately `0.707`.",
  "css/specificity": "**Specificity** is the algorithm used by browsers to determine the [CSS declaration](/en-US/docs/Learn/CSS/First_steps/What_is_CSS#css_syntax) that is the most relevant to an element, which in turn, determines the property value to apply to the element. The specificity algorithm calculates the weight of a [CSS selector](/en-US/docs/Web/CSS/Reference#selectors) to determine which rule from competing CSS declarations gets applied to an element.",
  "css/specified_value": "The **specified value** of a [CSS](/en-US/docs/Web/CSS) property is the value it receives from the document's style sheet. The specified value for a given property is determined according to the following rules:",
  "css/sqrt": "The **`sqrt()`** [CSS](/en-US/docs/Web/CSS) [function](/en-US/docs/Web/CSS/CSS_Functions) is an exponential function that returns the [square root](https://en.wikipedia.org/wiki/Square_root) of a number.",
  "css/string": "The **`<string>`** [CSS](/en-US/docs/Web/CSS) [data type](/en-US/docs/Web/CSS/CSS_Types) represents a sequence of characters. Strings are used in numerous CSS properties, such as [content--](/docs/Web/CSS/content), [font-family--](/docs/Web/CSS/font-family), and [quotes--](/docs/Web/CSS/quotes).",
  "css/subsequent-sibling_combinator": "The **subsequent-sibling combinator** (`~`, a tilde) separates two selectors and matches _all instances_ of the second element that follow the first element (not necessarily immediately) and share the same parent element.",
  "css/symbols": "The **`symbols()`** CSS function enables defining counter styles inline, directly as a value of properties such as [list-style--](/docs/Web/CSS/list-style), providing a less powerful but simpler alternative to the [@counter-style--](/docs/Web/CSS/@counter-style) method of defining a counter style.",
  "css/syntax": "The basic goal of the Cascading Stylesheet ([CSS](/en-US/docs/Web/CSS)) language is to allow a browser engine to paint elements of the page with specific features, like colors, positioning, or decorations. The _CSS syntax_ reflects this goal and its basic building blocks are:",
  "css/system-color": "The **`<system-color>`** [CSS](/en-US/docs/Web/CSS) [data type](/en-US/docs/Web/CSS/CSS_Types) usually reflects the default color choices used for the different parts of a web page.",
  "css/tab-size": "The **`tab-size`** CSS property is used to customize the width of tab characters (U+0009).",
  "css/table-layout": "The **`table-layout`** CSS property sets the algorithm used to lay out [table--](/docs/Web/HTML/Element/table) cells, rows, and columns.",
  "css/tan": "The **`tan()`** [CSS](/en-US/docs/Web/CSS) [function](/en-US/docs/Web/CSS/CSS_Functions) is a trigonometric function that returns the tangent of a number, which is a value between `−infinity` and `infinity`. The function contains a single calculation that must resolve to either a [&lt;number&gt;--](/docs/Web/CSS/&lt;number&gt;) or an [&lt;angle&gt;--](/docs/Web/CSS/&lt;angle&gt;) by interpreting the result of the argument as radians.",
  "css/text-align": "The **`text-align`** [CSS](/en-US/docs/Web/CSS) property sets the horizontal alignment of the inline-level content inside a block element or table-cell box. This means it works like [vertical-align--](/docs/Web/CSS/vertical-align) but in the horizontal direction.",
  "css/text-align-last": "The **`text-align-last`** CSS property sets how the last line of a block or a line, right before a forced line break, is aligned.",
  "css/text-combine-upright": "The **`text-combine-upright`** [CSS](/en-US/docs/Web/CSS) property sets the combination of characters into the space of a single character. If the combined text is wider than 1em, the user agent must fit the contents within 1em. The resulting composition is treated as a single upright glyph for layout and decoration. This property only has an effect in vertical writing modes.",
  "css/text-decoration": "The **`text-decoration`** [shorthand](/en-US/docs/Web/CSS/Shorthand_properties) [CSS](/en-US/docs/Web/CSS) property sets the appearance of decorative lines on text. It is a shorthand for [text-decoration-line--](/docs/Web/CSS/text-decoration-line), [text-decoration-color--](/docs/Web/CSS/text-decoration-color), [text-decoration-style--](/docs/Web/CSS/text-decoration-style), and the newer [text-decoration-thickness--](/docs/Web/CSS/text-decoration-thickness) property.",
  "css/text-decoration-color": "The **`text-decoration-color`** [CSS](/en-US/docs/Web/CSS) property sets the color of decorations added to text by [text-decoration-line--](/docs/Web/CSS/text-decoration-line).",
  "css/text-decoration-line": "The **`text-decoration-line`** [CSS](/en-US/docs/Web/CSS) property sets the kind of decoration that is used on text in an element, such as an underline or overline.",
  "css/text-decoration-skip": "The **`text-decoration-skip`** [CSS](/en-US/docs/Web/CSS) property sets what parts of an element's content any text decoration affecting the element must skip over. It controls all text decoration lines drawn by the element and also any text decoration lines drawn by its ancestors.",
  "css/text-decoration-skip-ink": "The **`text-decoration-skip-ink`** [CSS](/en-US/docs/Web/CSS) property specifies how overlines and underlines are drawn when they pass over glyph ascenders and descenders.",
  "css/text-decoration-style": "The **`text-decoration-style`** [CSS](/en-US/docs/Web/CSS) property sets the style of the lines specified by [text-decoration-line--](/docs/Web/CSS/text-decoration-line). The style applies to all lines that are set with `text-decoration-line`.",
  "css/text-decoration-thickness": "The **`text-decoration-thickness`** [CSS](/en-US/docs/Web/CSS) property sets the stroke thickness of the decoration line that is used on text in an element, such as a line-through, underline, or overline.",
  "css/text-emphasis": "The **`text-emphasis`** [CSS](/en-US/docs/Web/CSS) property applies emphasis marks to text (except spaces and control characters). It is a [shorthand](/en-US/docs/Web/CSS/Shorthand_properties) for [text-emphasis-style--](/docs/Web/CSS/text-emphasis-style) and [text-emphasis-color--](/docs/Web/CSS/text-emphasis-color).",
  "css/text-emphasis-color": "The **`text-emphasis-color`** [CSS](/en-US/docs/Web/CSS) property sets the color of emphasis marks. This value can also be set using the [text-emphasis--](/docs/Web/CSS/text-emphasis) shorthand.",
  "css/text-emphasis-position": "The **`text-emphasis-position`** [CSS](/en-US/docs/Web/CSS) property sets where emphasis marks are drawn. Like ruby text, if there isn't enough room for emphasis marks, the line height is increased.",
  "css/text-emphasis-style": "The **`text-emphasis-style`** [CSS](/en-US/docs/Web/CSS) property sets the appearance of emphasis marks. It can also be set, and reset, using the [text-emphasis--](/docs/Web/CSS/text-emphasis) shorthand.",
  "css/text-indent": "The **`text-indent`** CSS property sets the length of empty space (indentation) that is put before lines of text in a block.",
  "css/text-justify": "The **`text-justify`** CSS property sets what type of justification should be applied to text when [text-align--](/docs/Web/CSS/text-align)`: justify;` is set on an element.",
  "css/text-orientation": "The **`text-orientation`** [CSS](/en-US/docs/Web/CSS) property sets the orientation of the text characters in a line. It only affects text in vertical mode (when [writing-mode--](/docs/Web/CSS/writing-mode) is not `horizontal-tb`). It is useful for controlling the display of languages that use vertical script, and also for making vertical table headers.",
  "css/text-overflow": "The **`text-overflow`** [CSS](/en-US/docs/Web/CSS) property sets how hidden overflow content is signaled to users. It can be clipped, display an ellipsis ('`…`'), or display a custom string.",
  "css/text-rendering": "The **`text-rendering`** CSS property provides information to the rendering engine about what to optimize for when rendering text.",
  "css/text-shadow": "The **`text-shadow`** CSS property adds shadows to text. It accepts a comma-separated list of shadows to be applied to the text and any of its [`decorations`](/en-US/docs/Web/CSS/text-decoration). Each shadow is described by some combination of X and Y offsets from the element, blur radius, and color.",
  "css/text-size-adjust": "The **`text-size-adjust`** [CSS](/en-US/docs/Web/API/CSS) property controls the text inflation algorithm used on some smartphones and tablets. Other browsers will ignore this property.",
  "css/text-transform": "The **`text-transform`** CSS property specifies how to capitalize an element's text. It can be used to make text appear in all-uppercase or all-lowercase, or with each word capitalized. It also can help improve legibility for ruby.",
  "css/text-underline-offset": "The **`text-underline-offset`** [CSS](/en-US/docs/Web/CSS) property sets the offset distance of an underline text decoration line (applied using [text-decoration--](/docs/Web/CSS/text-decoration)) from its original position.",
  "css/text-underline-position": "The **`text-underline-position`** [CSS](/en-US/docs/Web/CSS) property specifies the position of the underline which is set using the [text-decoration--](/docs/Web/CSS/text-decoration) property's `underline` value.",
  "css/text-wrap": "The **`text-wrap`** CSS shorthand property controls how text inside an element is wrapped. The different values provide:",
  "css/text-wrap-mode": "The **`text-wrap-mode`** CSS property controls whether the text inside an element is wrapped. The different values provide alternate ways of wrapping the content of a block element. It can also be set, and reset, using the [text-wrap--](/docs/Web/CSS/text-wrap) shorthand.",
  "css/text-wrap-style": "The **`text-wrap-style`** CSS property controls how text inside an element is wrapped. The different values provide alternate ways of wrapping the content of a block element. It can also be set, and reset, using the [text-wrap--](/docs/Web/CSS/text-wrap) shorthand.",
  "css/time": "The **`<time>`** [CSS](/en-US/docs/Web/CSS) [data type](/en-US/docs/Web/CSS/CSS_Types) represents a time value expressed in seconds or milliseconds. It is used in [animation--](/docs/Web/CSS/animation), [transition--](/docs/Web/CSS/transition), and related properties.",
  "css/time-percentage": "The **`<time-percentage>`** [CSS](/en-US/docs/Web/CSS) [data type](/en-US/docs/Web/CSS/CSS_Types) represents a value that can be either a [time--](/docs/Web/CSS/time) or a [percentage--](/docs/Web/CSS/percentage).",
  "css/timeline-scope": "The **`timeline-scope`** [CSS](/en-US/docs/Web/CSS) property modifies the scope of a named animation timeline.",
  "css/top": "The **`top`** [CSS](/en-US/docs/Web/CSS) property sets the vertical position of a [positioned element](/en-US/docs/Web/CSS/position). It does not effect non-positioned elements.",
  "css/touch-action": "The **`touch-action`** CSS property sets how an element's region can be manipulated by a touchscreen user (for example, by zooming features built into the browser).",
  "css/transform": "The **`transform`** [CSS](/en-US/docs/Web/CSS) property lets you rotate, scale, skew, or translate an element.\nIt modifies the coordinate space of the CSS [visual formatting model](/en-US/docs/Web/CSS/Visual_formatting_model).",
  "css/transform-box": "The **`transform-box`** CSS property defines the layout box to which the [transform--](/docs/Web/CSS/transform), individual transform properties [translate--](/docs/Web/CSS/translate),[scale--](/docs/Web/CSS/scale), and [rotate--](/docs/Web/CSS/rotate), and [transform-origin--](/docs/Web/CSS/transform-origin) properties relate.",
  "css/transform-function": "The **`<transform-function>`** [CSS](/en-US/docs/Web/CSS) [data type](/en-US/docs/Web/CSS/CSS_Types) represents a transformation that affects an element's appearance. Transformation [functions](/en-US/docs/Web/CSS/CSS_Functions) can rotate, resize, distort, or move an element in 2D or 3D space. It is used in the [transform--](/docs/Web/CSS/transform) property.",
  "css/transform-origin": "The **`transform-origin`** [CSS](/en-US/docs/Web/CSS) property sets the origin for an element's transformations.",
  "css/transform-style": "The **`transform-style`** [CSS](/en-US/docs/Web/CSS) property sets whether children of an element are positioned in the 3D space or are flattened in the plane of the element.",
  "css/transition": "The **`transition`** [CSS](/en-US/docs/Web/CSS) property is a [shorthand property](/en-US/docs/Web/CSS/Shorthand_properties) for [transition-property--](/docs/Web/CSS/transition-property), [transition-duration--](/docs/Web/CSS/transition-duration), [transition-timing-function--](/docs/Web/CSS/transition-timing-function), [transition-delay--](/docs/Web/CSS/transition-delay), and [transition-behavior--](/docs/Web/CSS/transition-behavior).",
  "css/transition-behavior": "The **`transition-behavior`** [CSS](/en-US/docs/Web/CSS) property specifies whether transitions will be started for properties whose animation behavior is [discrete](/en-US/docs/Web/CSS/CSS_animated_properties#discrete).",
  "css/transition-delay": "The **`transition-delay`** CSS property specifies the duration to wait before starting a property's [transition effect](/en-US/docs/Web/CSS/CSS_transitions/Using_CSS_transitions) when its value changes.",
  "css/transition-duration": "The **`transition-duration`** [CSS](/en-US/docs/Web/CSS) property sets the length of time a transition animation should take to complete. By default, the value is `0s`, meaning that no animation will occur.",
  "css/transition-property": "The **`transition-property`** [CSS](/en-US/docs/Web/CSS) property sets the CSS properties to which a [transition effect](/en-US/docs/Web/CSS/CSS_transitions/Using_CSS_transitions) should be applied.",
  "css/transition-timing-function": "The **`transition-timing-function`** CSS property sets how intermediate values are calculated for CSS properties being affected by a [transition effect](/en-US/docs/Web/CSS/CSS_transitions/Using_CSS_transitions).",
  "css/translate": "The **`translate`** [CSS](/en-US/docs/Web/CSS) property allows you to specify translation transforms individually and independently of the [transform--](/docs/Web/CSS/transform) property. This maps better to typical user interface usage, and saves having to remember the exact order of transform functions to specify in the `transform` value.",
  "css/tutorials": "Learning CSS may be a daunting task.\nIn order to help you, we have written numerous **tutorials about CSS**.\nSome are aimed at complete beginners, while others present complex features to be used by more experienced users.",
  "css/type_selectors": "The CSS **type selector** matches elements by node name. In other words, it selects all elements of the given type within a document.",
  "css/unicode-bidi": "The **`unicode-bidi`** [CSS](/en-US/docs/Web/CSS) property, together with the [direction--](/docs/Web/CSS/direction) property, determines how bidirectional text in a document is handled. For example, if a block of content contains both left-to-right and right-to-left text, the user-agent uses a complex Unicode algorithm to decide how to display the text. The `unicode-bidi` property overrides this algorithm and allows the developer to control the text embedding.",
  "css/universal_selectors": "The CSS **universal selector** (`*`) matches elements of any type.",
  "css/unset": "The **`unset`** CSS keyword resets a property to its inherited value if the property naturally inherits from its parent, and to its [initial value](/en-US/docs/Web/CSS/initial_value) if not. In other words, it behaves like the [inherit--](/docs/Web/CSS/inherit) keyword in the first case, when the property is an [inherited property](/en-US/docs/Web/CSS/Inheritance#inherited_properties), and like the [initial--](/docs/Web/CSS/initial) keyword in the second case, when the property is a [non-inherited property](/en-US/docs/Web/CSS/Inheritance#non-inherited_properties).",
  "css/url": "The **`url()`** [CSS](/en-US/docs/Web/CSS) [function](/en-US/docs/Web/CSS/CSS_Functions) is used to include a file. The parameter is an absolute URL, a relative URL, a blob URL, or a data URL. The **`url()`** function can be passed as a parameter of another CSS functions, like the [attr--](/docs/Web/CSS/attr) function. Depending on the property for which it is a value, the resource sought can be an image, font, or a stylesheet. The `url()` functional notation is the value for the `<url>` data type.",
  "css/used_value": "The **used value** of a [CSS](/en-US/docs/Web/CSS) property is its value after all calculations have been performed on the [computed value](/en-US/docs/Web/CSS/computed_value).",
  "css/user-modify": "The **`user-modify`** property has no effect in Firefox. It was originally planned to determine whether or not the content of an element can be edited by a user.",
  "css/user-select": "The **`user-select`** [CSS](/en-US/docs/Web/CSS) property controls whether the user can select text. This doesn't have any effect on content loaded as part of a browser's user interface (its [chrome--](/docs/Glossary/Chrome)), except in textboxes.",
  "css/using_css_custom_properties": "**Custom properties** (sometimes referred to as **CSS variables** or **cascading variables**) are entities defined by CSS authors that represent specific values to be reused throughout a document. They are set using the [@property--](/docs/Web/CSS/@property) at-rule or by [custom property syntax](/en-US/docs/Web/CSS/--*) (e.g., **`--primary-color: blue;`**). Custom properties are accessed using the CSS [var()--](/docs/Web/CSS/var) function (e.g., **`color: var(--primary-color);`**).",
  "css/value_definition_syntax": "**CSS value definition syntax**, a formal grammar, is used for defining the set of valid values for a CSS property or function. In addition to this syntax, the set of valid values can be further restricted by semantic constraints (for example, for a number to be strictly positive).",
  "css/var": "The **`var()`** [CSS](/en-US/docs/Web/CSS) [function](/en-US/docs/Web/CSS/CSS_Functions) can be used to insert the value of a [custom property](/en-US/docs/Web/CSS/--*) (sometimes called a \"CSS variable\") instead of any part of a value of another property.",
  "css/vertical-align": "The **`vertical-align`** [CSS](/en-US/docs/Web/CSS) property sets vertical alignment of an inline, inline-block or table-cell box.",
  "css/view-timeline": "The **`view-timeline`** [CSS](/en-US/docs/Web/CSS) [shorthand property](/en-US/docs/Web/CSS/Shorthand_properties) is used to define a _named view progress timeline_, which is progressed through based on the change in visibility of an element (known as the _subject_) inside a scrollable element (_scroller_). `view-timeline` is set on the subject.",
  "css/view-timeline-axis": "The **`view-timeline-axis`** [CSS](/en-US/docs/Web/CSS) property is used to specify the scrollbar direction that will be used to provide the timeline for a _named view progress timeline_ animation, which is progressed through based on the change in visibility of an element (known as the _subject_) inside a scrollable element (_scroller_). `view-timeline-axis` is set on the subject. See [CSS scroll-driven animations](/en-US/docs/Web/CSS/CSS_scroll-driven_animations) for more details.",
  "css/view-timeline-inset": "The **`view-timeline-inset`** [CSS](/en-US/docs/Web/CSS) property is used to specify one or two values representing an adjustment to the position of the scrollport (see [Scroll container--](/docs/Glossary/Scroll_container) for more details) in which the subject element of a _named view progress timeline_ animation is deemed to be visible. Put another way, this allows you to specify start and/or end inset (or outset) values that offset the position of the timeline.",
  "css/view-timeline-name": "The **`view-timeline-name`** [CSS](/en-US/docs/Web/CSS) property is used to define the name of a _named view progress timeline_, which is progressed through based on the change in visibility of an element (known as the _subject_) inside a scrollable element (_scroller_). `view-timeline` is set on the subject.",
  "css/view-transition-name": "The **`view-transition-name`** [CSS](/en-US/docs/Web/CSS) property provides the selected element with a distinct identifying name (a [custom-ident--](/docs/Web/CSS/custom-ident)) and causes it to participate in a separate [view transition](/en-US/docs/Web/API/View_Transitions_API) from the root view transition — or no view transition if the `none` value is specified.",
  "css/viewport_concepts": "This article explains the concept of the viewport — what it is, its impact in terms of CSS, SVG, and mobile devices — and differentiates between the visual viewport and the layout viewport.",
  "css/visibility": "The **`visibility`** CSS property shows or hides an element without changing the layout of a document. The property can also hide rows or columns in a [table--](/docs/Web/HTML/Element/table).",
  "css/visual_formatting_model": "In CSS, the **visual formatting model** describes how user agents take the document tree, and process and display it for visual media. This includes [continuous media--](/docs/Glossary/continuous_media) such as a computer screen and [paged media](/en-US/docs/Web/CSS/CSS_paged_media) such as a book or document printed by browser print functions. Most of the information applies equally to continuous and paged media.",
  "css/webkit_extensions": "User agents based on WebKit or Blink, such as Safari and Chrome, support several special extensions to [CSS](/en-US/docs/Web/CSS). These extensions are prefixed with `-webkit-`.",
  "css/white-space": "The **`white-space`** CSS property sets how [white space--](/docs/Glossary/whitespace) inside an element is handled.",
  "css/white-space-collapse": "The **`white-space-collapse`** CSS property controls how [white space--](/docs/Glossary/whitespace) inside an element is collapsed.",
  "css/widows": "The **`widows`** [CSS](/en-US/docs/Web/CSS) property sets the minimum number of lines in a block container that must be shown at the _top_ of a [page](/en-US/docs/Web/CSS/CSS_paged_media), region, or [column](/en-US/docs/Web/CSS/CSS_multicol_layout).",
  "css/width": "The **`width`** CSS property sets an element's width. By default, it sets the width of the [content area](/en-US/docs/Web/CSS/CSS_box_model/Introduction_to_the_CSS_box_model#content_area), but if [box-sizing--](/docs/Web/CSS/box-sizing) is set to `border-box`, it sets the width of the [border area](/en-US/docs/Web/CSS/CSS_box_model/Introduction_to_the_CSS_box_model#border_area).",
  "css/will-change": "The **`will-change`** [CSS](/en-US/docs/Web/CSS) property hints to browsers how an element is expected to change. Browsers may set up optimizations before an element is actually changed. These kinds of optimizations can increase the responsiveness of a page by doing potentially expensive work before they are actually required.",
  "css/word-break": "The **`word-break`** [CSS](/en-US/docs/Web/CSS) property sets whether line breaks appear wherever the text would otherwise overflow its content box.",
  "css/word-spacing": "The **`word-spacing`** [CSS](/en-US/docs/Web/CSS) property sets the length of space between words and between tags.",
  "css/writing-mode": "The **`writing-mode`** [CSS](/en-US/docs/Web/CSS) property sets whether lines of text are laid out horizontally or vertically, as well as the direction in which blocks progress. When set for an entire document, it should be set on the root element (`html` element for HTML documents).",
  "css/z-index": "The **`z-index`** CSS property sets the z-order of a [positioned](/en-US/docs/Web/CSS/position) element and its descendants or flex and grid items. Overlapping elements with a larger z-index cover those with a smaller one.",
  "css/zoom": "The non-standard **`zoom`** [CSS](/en-US/docs/Web/CSS) property can be used to control the magnification level of an element. [transform: scale()--](/docs/Web/CSS/transform-function/scale) should be used instead of this property, if possible. However, unlike CSS Transforms, `zoom` affects the layout size of the element.",
  "html/attributes/accept": "The **`accept`** attribute takes as its value a comma-separated list of one or more file types, or [unique file type specifiers](#unique_file_type_specifiers), describing which file types to allow.",
  "html/attributes/autocomplete": "The HTML `autocomplete` attribute lets web developers specify what if any permission the [user agent--](/docs/Glossary/user_agent) has to provide automated assistance in filling out form field values, as well as guidance to the browser as to the type of information expected in the field.",
  "html/attributes/capture": "|\n| `user`        | The user-facing camera and/or microphone should be used.   |\n| `environment` | The outward-facing camera and/or microphone should be used |",
  "html/attributes/crossorigin": "The **`crossorigin`** attribute, valid on the [audio--](/docs/Web/HTML/Element/audio), [img--](/docs/Web/HTML/Element/img), [link--](/docs/Web/HTML/Element/link), [script--](/docs/Web/HTML/Element/script), and [video--](/docs/Web/HTML/Element/video) elements, provides support for [CORS](/en-US/docs/Web/HTTP/CORS), defining how the element handles cross-origin requests, thereby enabling the configuration of the CORS requests for the element's fetched data. Depending on the element, the attribute can be a CORS settings attribute.",
  "html/attributes/dirname": "The **`dirname`** attribute can be used on [textarea--](/docs/Web/HTML/Element/textarea) and [input--](/docs/Web/HTML/Element/input) elements and describes the directionality of the element's text content during form submission.\nThe browser uses this attribute's value to determine whether text the user has entered is left-to-right or right-to-left oriented.\nWhen used, the element's text directionality value is included in form submission data along with the `dirname` attribute's value as the name of the field.",
  "html/attributes/disabled": "The Boolean **`disabled`** attribute, when present, makes the element not mutable, focusable, or even submitted with the form. The user can neither edit nor focus on the control, nor its form control descendants.",
  "html/attributes/elementtiming": "The **`elementtiming`** attribute is used to indicate that an element is flagged for tracking by [PerformanceObserver--](/docs/Web/API/PerformanceObserver) objects using the `\"element\"` type. For more details, see the [PerformanceElementTiming--](/docs/Web/API/PerformanceElementTiming) interface.",
  "html/attributes/for": "The **`for`** attribute is an allowed attribute for [label--](/docs/Web/HTML/Element/label) and [output--](/docs/Web/HTML/Element/output). When used on a `<label>` element it indicates the form element that this label describes. When used on an `<output>` element it allows for an explicit relationship between the elements that represent values which are used in the output.",
  "html/attributes/max": "The **`max`** attribute defines the maximum value that is acceptable and valid for the input containing the attribute. If the [`value`](/en-US/docs/Web/HTML/Element/input#value) of the element is greater than this, the element fails [validation](/en-US/docs/Learn/Forms/Form_validation). This value must be greater than or equal to the value of the [`min`](min) attribute. If the `max` attribute is present but is not specified or is invalid, no `max` value is applied. If the `max` attribute is valid and a non-empty value is greater than the maximum allowed by the `max` attribute, constraint validation will prevent form submission.",
  "html/attributes/maxlength": "The **`maxlength`** attribute defines the maximum [string length](/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/length) that the user can enter into an [input--](/docs/Web/HTML/Element/input) or [textarea--](/docs/Web/HTML/Element/textarea). The attribute must have an integer value of 0 or higher.",
  "html/attributes/min": "The **`min`** attribute defines the minimum value that is acceptable and valid for the input containing the attribute. If the [`value`](/en-US/docs/Web/HTML/Element/input#value) of the element is less than this, the element fails [validation](/en-US/docs/Learn/Forms/Form_validation). This value must be less than or equal to the value of the `max` attribute.",
  "html/attributes/minlength": "The **`minlength`** attribute defines the minimum [string length](/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/length) that the user can enter into an [input--](/docs/Web/HTML/Element/input) or [textarea--](/docs/Web/HTML/Element/textarea). The attribute must have an integer value of 0 or higher.",
  "html/attributes/multiple": "The Boolean **`multiple`** attribute, if set, means the form control accepts one or more values. Valid for the [email--](/docs/Web/HTML/Element/input/email) and [file--](/docs/Web/HTML/Element/input/file) input types and the [select--](/docs/Web/HTML/Element/select), the manner by which the user opts for multiple values depends on the form control.",
  "html/attributes/pattern": "The **`pattern`** attribute specifies a [regular expression](/en-US/docs/Web/JavaScript/Guide/Regular_expressions) the form control's value should match. If a non-`null` value doesn't conform to the constraints set by the `pattern` value, the [ValidityState--](/docs/Web/API/ValidityState) object's read-only [patternMismatch--](/docs/Web/API/ValidityState/patternMismatch) property will be true.",
  "html/attributes/placeholder": "The **`placeholder`** attribute defines the text displayed in a form control when the control has no value. The placeholder text should provide a brief hint to the user as to the expected type of data that should be entered into the control.",
  "html/attributes/readonly": "The Boolean **`readonly`** attribute, when present, makes the element not mutable, meaning the user can not edit the control.",
  "html/attributes/rel": "|\n| [`alternate`](#alternate)                                            | Alternate representations of the current document.                                                                                                                                                                                                                                      | Link                    | Link                                             | Not allowed             |\n| [`author`](#author)                                                  | Author of the current document or article.                                                                                                                                                                                                                                              | Link                    | Link                                             | Not allowed             |\n| [`bookmark`](#bookmark)                                              | Permalink for the nearest ancestor section.                                                                                                                                                                                                                                             | Not allowed             | Link                                             | Not allowed             |\n| [`canonical`](#canonical)                                            | Preferred URL for the current document.                                                                                                                                                                                                                                                 | Link                    | Not allowed                                      | Not allowed             |\n| [`dns-prefetch`](/en-US/docs/Web/HTML/Attributes/rel/dns-prefetch)   | Tells the browser to preemptively perform DNS resolution for the target resource's origin.                                                                                                                                                                                              | External Resource       | Not allowed                                      | Not allowed             |\n| [`external`](#external)                                              | The referenced document is not part of the same site as the current document.                                                                                                                                                                                                           | Not allowed             | Annotation                                       | Annotation              |\n| [`help`](#help)                                                      | Link to context-sensitive help.                                                                                                                                                                                                                                                         | Link                    | Link                                             | Link                    |\n| [`icon`](#icon)                                                      | An icon representing the current document.                                                                                                                                                                                                                                              | External Resource       | Not allowed                                      | Not allowed             |\n| [`license`](#license)                                                | Indicates that the main content of the current document is covered by the copyright license described by the referenced document.                                                                                                                                                       | Link                    | Link                                             | Link                    |\n| [`manifest`](/en-US/docs/Web/HTML/Attributes/rel/manifest)           | Web app manifest.                                                                                                                                                                                                                                                                       | Link                    | Not allowed                                      | Not allowed             |\n| [`me`](/en-US/docs/Web/HTML/Attributes/rel/me)                       | Indicates that the current document represents the person who owns the linked content.                                                                                                                                                                                                  | Link                    | Link                                             | Not allowed             |\n| [`modulepreload`](/en-US/docs/Web/HTML/Attributes/rel/modulepreload) | Tells to browser to preemptively fetch the script and store it in the document's module map for later evaluation. Optionally, the module's dependencies can be fetched as well.                                                                                                         | External Resource       | Not allowed                                      | Not allowed             |\n| [`next`](#next)                                                      | Indicates that the current document is a part of a series and that the next document in the series is the referenced document.                                                                                                                                                          | Link                    | Link                                             | Link                    |\n| [`nofollow`](#nofollow)                                              | Indicates that the current document's original author or publisher does not endorse the referenced document.                                                                                                                                                                            | Not allowed             | Annotation                                       | Annotation              |\n| [`noopener`](/en-US/docs/Web/HTML/Attributes/rel/noopener)           | Creates a top-level browsing context that is not an auxiliary browsing context if the hyperlink would create either of those, to begin with (i.e., has an appropriate `target` attribute value).                                                                                        | Not allowed             | Annotation                                       | Annotation              |\n| [`noreferrer`](/en-US/docs/Web/HTML/Attributes/rel/noreferrer)       | No `Referer` header will be included. Additionally, has the same effect as `noopener`.                                                                                                                                                                                                  | Not allowed             | Annotation                                       | Annotation              |\n| [`opener`](#opener)                                                  | Creates an auxiliary browsing context if the hyperlink would otherwise create a top-level browsing context that is not an auxiliary browsing context (i.e., has \"`_blank`\" as `target` attribute value).                                                                                | Not allowed             | Annotation                                       | Annotation              |\n| [`pingback`](#pingback)                                              | Gives the address of the pingback server that handles pingbacks to the current document.                                                                                                                                                                                                | External Resource       | Not allowed                                      | Not allowed             |\n| [`preconnect`](/en-US/docs/Web/HTML/Attributes/rel/preconnect)       | Specifies that the user agent should preemptively connect to the target resource's origin.                                                                                                                                                                                              | External Resource       | Not allowed                                      | Not allowed             |\n| [`prefetch`](/en-US/docs/Web/HTML/Attributes/rel/prefetch)           | Specifies that the user agent should preemptively fetch and cache the target resource as it is likely to be required for a followup navigation.                                                                                                                                         | External Resource       | Not allowed                                      | Not allowed             |\n| [`preload`](/en-US/docs/Web/HTML/Attributes/rel/preload)             | Specifies that the user agent must preemptively fetch and cache the target resource for current navigation according to the potential destination given by the [`as`](/en-US/docs/Web/HTML/Element/link#as) attribute (and the priority associated with the corresponding destination). | External Resource       | Not allowed                                      | Not allowed             |\n| [`prerender`](/en-US/docs/Web/HTML/Attributes/rel/prerender)         | Specifies that the user agent should preemptively fetch the target resource and process it in a way that helps deliver a faster response in the future.                                                                                                                                 | External Resource       | Not allowed                                      | Not allowed             |\n| [`prev`](#prev)                                                      | Indicates that the current document is a part of a series and that the previous document in the series is the referenced document.                                                                                                                                                      | Link                    | Link                                             | Link                    |\n| [`privacy-policy`](#privacy-policy)                                  | Gives a link to a information about the data collection and usage practices that apply to the current document.                                                                                                                                                                         | Link                    | Link                                             | Not allowed             |\n| [`search`](#search)                                                  | Gives a link to a resource that can be used to search through the current document and its related pages.                                                                                                                                                                               | Link                    | Link                                             | Link                    |\n| [`stylesheet`](#stylesheet)                                          | Imports a style sheet.                                                                                                                                                                                                                                                                  | External Resource       | Not allowed                                      | Not allowed             |\n| [`tag`](#tag)                                                        | Gives a tag (identified by the given address) that applies to the current document.                                                                                                                                                                                                     | Not allowed             | Link                                             | Not allowed             |\n| [`terms-of-service`](#terms-of-service)                              | Link to the agreement, or terms of service, between the document's provider and users who wish to use the document.                                                                                                                                                                     | Link                    | Link                                             | Not allowed             |",
  "html/attributes/required": "The [Boolean](/en-US/docs/Glossary/Boolean/HTML) **`required`** attribute, if present, indicates that the user must specify a value for the input before the owning form can be submitted.",
  "html/attributes/size": "The **`size`** attribute defines the width of the [input--](/docs/Web/HTML/Element/input) and the height of the [select--](/docs/Web/HTML/Element/select) element. For the `input`, if the `type` attribute is [text--](/docs/Web/HTML/Element/input/text) or [password--](/docs/Web/HTML/Element/input/password) then it's the number of characters. This must be an integer value of 0 or higher. If no `size` is specified, or an invalid value is specified, the input has no size declared, and the form control will be the default width based on the user agent. If CSS targets the element with properties impacting the width, CSS takes precedence.",
  "html/attributes/step": "The **`step`** attribute is a number that specifies the granularity that the value must adhere to or the keyword `any`. It is valid for the numeric input types, including the [date--](/docs/Web/HTML/Element/input/date), [month--](/docs/Web/HTML/Element/input/month), [week--](/docs/Web/HTML/Element/input/week), [time--](/docs/Web/HTML/Element/input/time), [datetime-local--](/docs/Web/HTML/Element/input/datetime-local), [number--](/docs/Web/HTML/Element/input/number) and [range--](/docs/Web/HTML/Element/input/range) types.",
  "html/elements/a": "The **`<a>`** [HTML](/en-US/docs/Web/HTML) element (or _anchor_ element), with [its `href` attribute](#href), creates a hyperlink to web pages, files, email addresses, locations in the same page, or anything else a URL can address.",
  "html/elements/abbr": "The **`<abbr>`** [HTML](/en-US/docs/Web/HTML) element represents an abbreviation or acronym.",
  "html/elements/acronym": "The **`<acronym>`** [HTML](/en-US/docs/Web/HTML) element allows authors to clearly indicate a sequence of characters that compose an acronym or abbreviation for a word.",
  "html/elements/address": "The **`<address>`** [HTML](/en-US/docs/Web/HTML) element indicates that the enclosed HTML provides contact information for a person or people, or for an organization.",
  "html/elements/area": "The **`<area>`** [HTML](/en-US/docs/Web/HTML) element defines an area inside an image map that has predefined clickable areas. An _image map_ allows geometric areas on an image to be associated with [hypertext links--](/docs/Glossary/Hyperlink).",
  "html/elements/article": "The **`<article>`** [HTML](/en-US/docs/Web/HTML) element represents a self-contained composition in a document, page, application, or site, which is intended to be independently distributable or reusable (e.g., in syndication). Examples include: a forum post, a magazine or newspaper article, or a blog entry, a product card, a user-submitted comment, an interactive widget or gadget, or any other independent item of content.",
  "html/elements/aside": "The **`<aside>`** [HTML](/en-US/docs/Web/HTML) element represents a portion of a document whose content is only indirectly related to the document's main content. Asides are frequently presented as sidebars or call-out boxes.",
  "html/elements/audio": "The **`<audio>`** [HTML](/en-US/docs/Web/HTML) element is used to embed sound content in documents. It may contain one or more audio sources, represented using the `src` attribute or the [source--](/docs/Web/HTML/Element/source) element: the browser will choose the most suitable one. It can also be the destination for streamed media, using a [MediaStream--](/docs/Web/API/MediaStream).",
  "html/elements/b": "The **`<b>`** [HTML](/en-US/docs/Web/HTML) element is used to draw the reader's attention to the element's contents, which are not otherwise granted special importance. This was formerly known as the Boldface element, and most browsers still draw the text in boldface. However, you should not use `<b>` for styling text or granting importance. If you wish to create boldface text, you should use the CSS [font-weight--](/docs/Web/CSS/font-weight) property. If you wish to indicate an element is of special importance, you should use the [strong--](/docs/Web/HTML/Element/strong) element.",
  "html/elements/base": "The **`<base>`** [HTML](/en-US/docs/Web/HTML) element specifies the base URL to use for all _relative_ URLs in a document. There can be only one `<base>` element in a document.",
  "html/elements/bdi": "The **`<bdi>`** [HTML](/en-US/docs/Web/HTML) element tells the browser's bidirectional algorithm to treat the text it contains in isolation from its surrounding text. It's particularly useful when a website dynamically inserts some text and doesn't know the directionality of the text being inserted.",
  "html/elements/bdo": "The **`<bdo>`** [HTML](/en-US/docs/Web/HTML) element overrides the current directionality of text, so that the text within is rendered in a different direction.",
  "html/elements/big": "The **`<big>`** [HTML](/en-US/docs/Web/HTML) deprecated element renders the enclosed text at a font size one level larger than the surrounding text (`medium` becomes `large`, for example). The size is capped at the browser's maximum permitted font size.",
  "html/elements/blockquote": "The **`<blockquote>`** [HTML](/en-US/docs/Web/HTML) element indicates that the enclosed text is an extended quotation. Usually, this is rendered visually by indentation (see [Notes](#usage_notes) for how to change it). A URL for the source of the quotation may be given using the `cite` attribute, while a text representation of the source can be given using the [cite--](/docs/Web/HTML/Element/cite) element.",
  "html/elements/body": "The **`<body>`** [HTML](/en-US/docs/Web/HTML) element represents the content of an HTML document. There can be only one `<body>` element in a document.",
  "html/elements/br": "The **`<br>`** [HTML](/en-US/docs/Web/HTML) element produces a line break in text (carriage-return). It is useful for writing a poem or an address, where the division of lines is significant.",
  "html/elements/button": "The **`<button>`** [HTML](/en-US/docs/Web/HTML) element is an interactive element activated by a user with a mouse, keyboard, finger, voice command, or other assistive technology. Once activated, it then performs an action, such as submitting a [form](/en-US/docs/Learn/Forms) or opening a dialog.",
  "html/elements/canvas": "Use the **HTML `<canvas>` element** with either the [canvas scripting API](/en-US/docs/Web/API/Canvas_API) or the [WebGL API](/en-US/docs/Web/API/WebGL_API) to draw graphics and animations.",
  "html/elements/caption": "The **`<caption>`** [HTML](/en-US/docs/Web/HTML) element specifies the caption (or title) of a table, providing the table an [accessible description--](/docs/Glossary/accessible_description).",
  "html/elements/center": "The **`<center>`** [HTML](/en-US/docs/Web/HTML) element is a [block-level element](/en-US/docs/Glossary/Block-level_content) that displays its block-level or inline contents centered horizontally within its containing element. The container is usually, but isn't required to be, [body--](/docs/Web/HTML/Element/body).",
  "html/elements/cite": "The **`<cite>`** [HTML](/en-US/docs/Web/HTML) element is used to mark up the title of a cited creative work. The reference may be in an abbreviated form according to context-appropriate conventions related to citation metadata.",
  "html/elements/code": "The **`<code>`** [HTML](/en-US/docs/Web/HTML) element displays its contents styled in a fashion intended to indicate that the text is a short fragment of computer code. By default, the content text is displayed using the [user agent's--](/docs/Glossary/user_agent) default monospace font.",
  "html/elements/col": "The **`<col>`** [HTML](/en-US/docs/Web/HTML) element defines one or more columns in a column group represented by its parent [colgroup--](/docs/Web/HTML/Element/colgroup) element. The `<col>` element is only valid as a child of a [colgroup--](/docs/Web/HTML/Element/colgroup) element that has no [`span`](/en-US/docs/Web/HTML/Element/colgroup#span) attribute defined.",
  "html/elements/colgroup": "The **`<colgroup>`** [HTML](/en-US/docs/Web/HTML) element defines a group of columns within a table.",
  "html/elements/data": "The **`<data>`** [HTML](/en-US/docs/Web/HTML) element links a given piece of content with a machine-readable translation. If the content is time- or date-related, the [time--](/docs/Web/HTML/Element/time) element must be used.",
  "html/elements/datalist": "The **`<datalist>`** [HTML](/en-US/docs/Web/HTML) element contains a set of [option--](/docs/Web/HTML/Element/option) elements that represent the permissible or recommended options available to choose from within other controls.",
  "html/elements/dd": "The **`<dd>`** [HTML](/en-US/docs/Web/HTML) element provides the description, definition, or value for the preceding term ([dt--](/docs/Web/HTML/Element/dt)) in a description list ([dl--](/docs/Web/HTML/Element/dl)).",
  "html/elements/del": "The **`<del>`** [HTML](/en-US/docs/Web/HTML) element represents a range of text that has been deleted from a document. This can be used when rendering \"track changes\" or source code diff information, for example. The [ins--](/docs/Web/HTML/Element/ins) element can be used for the opposite purpose: to indicate text that has been added to the document.",
  "html/elements/details": "The **`<details>`** [HTML](/en-US/docs/Web/HTML) element creates a disclosure widget in which information is visible only when the widget is toggled into an \"open\" state. A summary or label must be provided using the [summary--](/docs/Web/HTML/Element/summary) element.",
  "html/elements/dfn": "The **`<dfn>`** [HTML](/en-US/docs/Web/HTML) element indicates a term to be defined. The `<dfn>` element should be used in a complete definition statement, where the ancestor [p--](/docs/Web/HTML/Element/p) element, the [dt--](/docs/Web/HTML/Element/dt)/[dd--](/docs/Web/HTML/Element/dd) pairing, or the nearest [section--](/docs/Web/HTML/Element/section) ancestor of the `<dfn>` element, is considered to be the full definition of the term.",
  "html/elements/dialog": "The **`<dialog>`** [HTML](/en-US/docs/Web/HTML) element represents a modal or non-modal dialog box or other interactive component, such as a dismissible alert, inspector, or subwindow.",
  "html/elements/dir": "The **`<dir>`** [HTML](/en-US/docs/Web/HTML) element is used as a container for a directory of files and/or folders, potentially with styles and icons applied by the [user agent--](/docs/Glossary/user_agent). Do not use this obsolete element; instead, you should use the [ul--](/docs/Web/HTML/Element/ul) element for lists, including lists of files.",
  "html/elements/div": "The **`<div>`** [HTML](/en-US/docs/Web/HTML) element is the generic container for flow content. It has no effect on the content or layout until styled in some way using [CSS--](/docs/Glossary/CSS) (e.g. styling is directly applied to it, or some kind of layout model like [Flexbox](/en-US/docs/Web/CSS/CSS_flexible_box_layout) is applied to its parent element).",
  "html/elements/dl": "The **`<dl>`** [HTML](/en-US/docs/Web/HTML) element represents a description list. The element encloses a list of groups of terms (specified using the [dt--](/docs/Web/HTML/Element/dt) element) and descriptions (provided by [dd--](/docs/Web/HTML/Element/dd) elements). Common uses for this element are to implement a glossary or to display metadata (a list of key-value pairs).",
  "html/elements/dt": "The **`<dt>`** [HTML](/en-US/docs/Web/HTML) element specifies a term in a description or definition list, and as such must be used inside a [dl--](/docs/Web/HTML/Element/dl) element. It is usually followed by a [dd--](/docs/Web/HTML/Element/dd) element; however, multiple `<dt>` elements in a row indicate several terms that are all defined by the immediate next [dd--](/docs/Web/HTML/Element/dd) element.",
  "html/elements/em": "The **`<em>`** [HTML](/en-US/docs/Web/HTML) element marks text that has stress emphasis. The `<em>` element can be nested, with each level of nesting indicating a greater degree of emphasis.",
  "html/elements/embed": "The **`<embed>`** [HTML](/en-US/docs/Web/HTML) element embeds external content at the specified point in the document. This content is provided by an external application or other source of interactive content such as a browser plug-in.",
  "html/elements/fencedframe": "The **`<fencedframe>`** [HTML](/en-US/docs/Web/HTML) element represents a nested [browsing context--](/docs/Glossary/browsing_context), embedding another HTML page into the current one. `<fencedframe>`s are very similar to [iframe--](/docs/Web/HTML/Element/iframe) elements in form and function, except that:",
  "html/elements/fieldset": "The **`<fieldset>`** [HTML](/en-US/docs/Web/HTML) element is used to group several controls as well as labels ([label--](/docs/Web/HTML/Element/label)) within a web form.",
  "html/elements/figcaption": "The **`<figcaption>`** [HTML](/en-US/docs/Web/HTML) element represents a caption or legend describing the rest of the contents of its parent [figure--](/docs/Web/HTML/Element/figure) element, providing the `<figure>` an [accessible description--](/docs/Glossary/accessible_description).",
  "html/elements/figure": "The **`<figure>`** [HTML](/en-US/docs/Web/HTML) element represents self-contained content, potentially with an optional caption, which is specified using the [figcaption--](/docs/Web/HTML/Element/figcaption) element. The figure, its caption, and its contents are referenced as a single unit.",
  "html/elements/font": "The **`<font>`** [HTML](/en-US/docs/Web/HTML) element defines the font size, color and face for its content.",
  "html/elements/footer": "The **`<footer>`** [HTML](/en-US/docs/Web/HTML) element represents a footer for its nearest ancestor [sectioning content](/en-US/docs/Web/HTML/Content_categories#sectioning_content) or [sectioning root](/en-US/docs/Web/HTML/Element/Heading_Elements#labeling_section_content) element. A `<footer>` typically contains information about the author of the section, copyright data or links to related documents.",
  "html/elements/form": "The **`<form>`** [HTML](/en-US/docs/Web/HTML) element represents a document section containing interactive controls for submitting information.",
  "html/elements/frame": "The **`<frame>`** [HTML](/en-US/docs/Web/HTML) element defines a particular area in which another HTML document can be displayed. A frame should be used within a [frameset--](/docs/Web/HTML/Element/frameset).",
  "html/elements/frameset": "The **`<frameset>`** [HTML](/en-US/docs/Web/HTML) element is used to contain [frame--](/docs/Web/HTML/Element/frame) elements.",
  "html/elements/head": "The **`<head>`** [HTML](/en-US/docs/Web/HTML) element contains machine-readable information ([metadata--](/docs/Glossary/metadata)) about the document, like its [title](/en-US/docs/Web/HTML/Element/title), [scripts](/en-US/docs/Web/HTML/Element/script), and [style sheets](/en-US/docs/Web/HTML/Element/style).",
  "html/elements/header": "The **`<header>`** [HTML](/en-US/docs/Web/HTML) element represents introductory content, typically a group of introductory or navigational aids. It may contain some heading elements but also a logo, a search form, an author name, and other elements.",
  "html/elements/heading_elements": "The **`<h1>`** to **`<h6>`** [HTML](/en-US/docs/Web/HTML) elements represent six levels of section headings. `<h1>` is the highest section level and `<h6>` is the lowest. By default, all heading elements create a [block-level](/en-US/docs/Glossary/Block-level_content) box in the layout, starting on a new line and taking up the full width available in their containing block.",
  "html/elements/hgroup": "The **`<hgroup>`** [HTML](/en-US/docs/Web/HTML) element represents a heading and related content. It groups a single [`<h1>–<h6>`](/en-US/docs/Web/HTML/Element/Heading_Elements) element with one or more [`<p>`](/en-US/docs/Web/HTML/Element/p).",
  "html/elements/hr": "The **`<hr>`** [HTML](/en-US/docs/Web/HTML) element represents a thematic break between paragraph-level elements: for example, a change of scene in a story, or a shift of topic within a section.",
  "html/elements/html": "The **`<html>`** [HTML](/en-US/docs/Web/HTML) element represents the root (top-level element) of an HTML document, so it is also referred to as the _root element_. All other elements must be descendants of this element.",
  "html/elements/i": "The **`<i>`** [HTML](/en-US/docs/Web/HTML) element represents a range of text that is set off from the normal text for some reason, such as idiomatic text, technical terms, taxonomical designations, among others. Historically, these have been presented using italicized type, which is the original source of the `<i>` naming of this element.",
  "html/elements/iframe": "The **`<iframe>`** [HTML](/en-US/docs/Web/HTML) element represents a nested [browsing context--](/docs/Glossary/browsing_context), embedding another HTML page into the current one.",
  "html/elements/img": "The **`<img>`** [HTML](/en-US/docs/Web/HTML) element embeds an image into the document.",
  "html/elements/input": "The **`<input>`** [HTML](/en-US/docs/Web/HTML) element is used to create interactive controls for web-based forms in order to accept data from the user; a wide variety of types of input data and control widgets are available, depending on the device and [user agent--](/docs/Glossary/user_agent). The `<input>` element is one of the most powerful and complex in all of HTML due to the sheer number of combinations of input types and attributes.",
  "html/elements/ins": "The **`<ins>`** [HTML](/en-US/docs/Web/HTML) element represents a range of text that has been added to a document. You can use the [del--](/docs/Web/HTML/Element/del) element to similarly represent a range of text that has been deleted from the document.",
  "html/elements/kbd": "The **`<kbd>`** [HTML](/en-US/docs/Web/HTML) element represents a span of inline text denoting textual user input from a keyboard, voice input, or any other text entry device. By convention, the [user agent--](/docs/Glossary/user_agent) defaults to rendering the contents of a `<kbd>` element using its default monospace font, although this is not mandated by the HTML standard.",
  "html/elements/label": "The **`<label>`** [HTML](/en-US/docs/Web/HTML) element represents a caption for an item in a user interface.",
  "html/elements/legend": "The **`<legend>`** [HTML](/en-US/docs/Web/HTML) element represents a caption for the content of its parent [fieldset--](/docs/Web/HTML/Element/fieldset).",
  "html/elements/li": "The **`<li>`** [HTML](/en-US/docs/Web/HTML) element is used to represent an item in a list. It must be contained in a parent element: an ordered list ([ol--](/docs/Web/HTML/Element/ol)), an unordered list ([ul--](/docs/Web/HTML/Element/ul)), or a menu ([menu--](/docs/Web/HTML/Element/menu)). In menus and unordered lists, list items are usually displayed using bullet points. In ordered lists, they are usually displayed with an ascending counter on the left, such as a number or letter.",
  "html/elements/link": "The **`<link>`** [HTML](/en-US/docs/Web/HTML) element specifies relationships between the current document and an external resource.\nThis element is most commonly used to link to [stylesheets--](/docs/Glossary/CSS), but is also used to establish site icons (both \"favicon\" style icons and icons for the home screen and apps on mobile devices) among other things.",
  "html/elements/main": "The **`<main>`** [HTML](/en-US/docs/Web/HTML) element represents the dominant content of the [body--](/docs/Web/HTML/Element/body) of a document. The main content area consists of content that is directly related to or expands upon the central topic of a document, or the central functionality of an application.",
  "html/elements/map": "The **`<map>`** [HTML](/en-US/docs/Web/HTML) element is used with [area--](/docs/Web/HTML/Element/area) elements to define an image map (a clickable link area).",
  "html/elements/mark": "The **`<mark>`** [HTML](/en-US/docs/Web/HTML) element represents text which is **marked** or **highlighted** for reference or notation purposes due to the marked passage's relevance in the enclosing context.",
  "html/elements/marquee": "The **`<marquee>`** [HTML](/en-US/docs/Web/HTML) element is used to insert a scrolling area of text. You can control what happens when the text reaches the edges of its content area using its attributes.",
  "html/elements/menu": "The **`<menu>`** [HTML](/en-US/docs/Web/HTML) element is described in the HTML specification as a semantic alternative to [ul--](/docs/Web/HTML/Element/ul), but treated by browsers (and exposed through the accessibility tree) as no different than [ul--](/docs/Web/HTML/Element/ul). It represents an unordered list of items (which are represented by [li--](/docs/Web/HTML/Element/li) elements).",
  "html/elements/menuitem": "The **`<menuitem>`** [HTML](/en-US/docs/Web/HTML) element represents a command that a user is able to invoke through a popup menu. This includes context menus, as well as menus that might be attached to a menu button.",
  "html/elements/meta": "The **`<meta>`** [HTML](/en-US/docs/Web/HTML) element represents [metadata--](/docs/Glossary/Metadata) that cannot be represented by other HTML meta-related elements, like [base--](/docs/Web/HTML/Element/base), [link--](/docs/Web/HTML/Element/link), [script--](/docs/Web/HTML/Element/script), [style--](/docs/Web/HTML/Element/style) or [title--](/docs/Web/HTML/Element/title).",
  "html/elements/meter": "The **`<meter>`** [HTML](/en-US/docs/Web/HTML) element represents either a scalar value within a known range or a fractional value.",
  "html/elements/nav": "The **`<nav>`** [HTML](/en-US/docs/Web/HTML) element represents a section of a page whose purpose is to provide navigation links, either within the current document or to other documents. Common examples of navigation sections are menus, tables of contents, and indexes.",
  "html/elements/nobr": "The **`<nobr>`** [HTML](/en-US/docs/Web/HTML) element prevents the text it contains from automatically wrapping across multiple lines, potentially resulting in the user having to scroll horizontally to see the entire width of the text.",
  "html/elements/noembed": "The **`<noembed>`** [HTML](/en-US/docs/Web/HTML) element is an obsolete, non-standard way to provide alternative, or \"fallback\", content for browsers that do not support the [embed--](/docs/Web/HTML/Element/embed) element or do not support the type of [embedded content](/en-US/docs/Web/HTML/Content_categories#embedded_content) an author wishes to use. This element was deprecated in HTML 4.01 and above in favor of placing fallback content between the opening and closing tags of an [object--](/docs/Web/HTML/Element/object) element.",
  "html/elements/noframes": "The **`<noframes>`** [HTML](/en-US/docs/Web/HTML) element provides content to be presented in browsers that don't support (or have disabled support for) the [frame--](/docs/Web/HTML/Element/frame) element. Although most commonly-used browsers support frames, there are exceptions, including certain special-use browsers including some mobile browsers, as well as text-mode browsers.",
  "html/elements/noscript": "The **`<noscript>`** [HTML](/en-US/docs/Web/HTML) element defines a section of HTML to be inserted if a script type on the page is unsupported or if scripting is currently turned off in the browser.",
  "html/elements/object": "The **`<object>`** [HTML](/en-US/docs/Web/HTML) element represents an external resource, which can be treated as an image, a nested browsing context, or a resource to be handled by a plugin.",
  "html/elements/ol": "The **`<ol>`** [HTML](/en-US/docs/Web/HTML) element represents an ordered list of items — typically rendered as a numbered list.",
  "html/elements/optgroup": "The **`<optgroup>`** [HTML](/en-US/docs/Web/HTML) element creates a grouping of options within a [select--](/docs/Web/HTML/Element/select) element.",
  "html/elements/option": "The **`<option>`** [HTML](/en-US/docs/Web/HTML) element is used to define an item contained in a [select--](/docs/Web/HTML/Element/select), an [optgroup--](/docs/Web/HTML/Element/optgroup), or a [datalist--](/docs/Web/HTML/Element/datalist) element. As such, `<option>` can represent menu items in popups and other lists of items in an HTML document.",
  "html/elements/output": "The **`<output>`** [HTML](/en-US/docs/Web/HTML) element is a container element into which a site or app can inject the results of a calculation or the outcome of a user action.",
  "html/elements/p": "The **`<p>`** [HTML](/en-US/docs/Web/HTML) element represents a paragraph. Paragraphs are usually represented in visual media as blocks of text separated from adjacent blocks by blank lines and/or first-line indentation, but HTML paragraphs can be any structural grouping of related content, such as images or form fields.",
  "html/elements/param": "The **`<param>`** [HTML](/en-US/docs/Web/HTML) element defines parameters for an [object--](/docs/Web/HTML/Element/object) element.",
  "html/elements/picture": "The **`<picture>`** [HTML](/en-US/docs/Web/HTML) element contains zero or more [source--](/docs/Web/HTML/Element/source) elements and one [img--](/docs/Web/HTML/Element/img) element to offer alternative versions of an image for different display/device scenarios.",
  "html/elements/plaintext": "The **`<plaintext>`** [HTML](/en-US/docs/Web/HTML) element renders everything following the start tag as raw text, ignoring any following HTML. There is no closing tag, since everything after it is considered raw text.",
  "html/elements/portal": "The **`<portal>`** [HTML](/en-US/docs/Web/HTML) element enables the embedding of another HTML page into the current one for the purposes of allowing smoother navigation into new pages.",
  "html/elements/pre": "The **`<pre>`** [HTML](/en-US/docs/Web/HTML) element represents preformatted text which is to be presented exactly as written in the HTML file. The text is typically rendered using a non-proportional, or [monospaced](https://en.wikipedia.org/wiki/Monospaced_font), font. Whitespace inside this element is displayed as written.",
  "html/elements/progress": "The **`<progress>`** [HTML](/en-US/docs/Web/HTML) element displays an indicator showing the completion progress of a task, typically displayed as a progress bar.",
  "html/elements/q": "The **`<q>`** [HTML](/en-US/docs/Web/HTML) element indicates that the enclosed text is a short inline quotation. Most modern browsers implement this by surrounding the text in quotation marks. This element is intended for short quotations that don't require paragraph breaks; for long quotations use the [blockquote--](/docs/Web/HTML/Element/blockquote) element.",
  "html/elements/rb": "The **`<rb>`** [HTML](/en-US/docs/Web/HTML) element is used to delimit the base text component of a [ruby--](/docs/Web/HTML/Element/ruby) annotation, i.e. the text that is being annotated. One `<rb>` element should wrap each separate atomic segment of the base text.",
  "html/elements/rp": "The **`<rp>`** [HTML](/en-US/docs/Web/HTML) element is used to provide fall-back parentheses for browsers that do not support display of ruby annotations using the [ruby--](/docs/Web/HTML/Element/ruby) element. One `<rp>` element should enclose each of the opening and closing parentheses that wrap the [rt--](/docs/Web/HTML/Element/rt) element that contains the annotation's text.",
  "html/elements/rt": "The **`<rt>`** [HTML](/en-US/docs/Web/HTML) element specifies the ruby text component of a ruby annotation, which is used to provide pronunciation, translation, or transliteration information for East Asian typography. The `<rt>` element must always be contained within a [ruby--](/docs/Web/HTML/Element/ruby) element.",
  "html/elements/rtc": "The **`<rtc>`** [HTML](/en-US/docs/Web/HTML) element embraces semantic annotations of characters presented in a ruby of [rb--](/docs/Web/HTML/Element/rb) elements used inside of [ruby--](/docs/Web/HTML/Element/ruby) element. [rb--](/docs/Web/HTML/Element/rb) elements can have both pronunciation ([rt--](/docs/Web/HTML/Element/rt)) and semantic ([rtc--](/docs/Web/HTML/Element/rtc)) annotations.",
  "html/elements/ruby": "The **`<ruby>`** [HTML](/en-US/docs/Web/HTML) element represents small annotations that are rendered above, below, or next to base text, usually used for showing the pronunciation of East Asian characters. It can also be used for annotating other kinds of text, but this usage is less common.",
  "html/elements/s": "The **`<s>`** [HTML](/en-US/docs/Web/HTML) element renders text with a strikethrough, or a line through it. Use the `<s>` element to represent things that are no longer relevant or no longer accurate. However, `<s>` is not appropriate when indicating document edits; for that, use the [del--](/docs/Web/HTML/Element/del) and [ins--](/docs/Web/HTML/Element/ins) elements, as appropriate.",
  "html/elements/samp": "The **`<samp>`** [HTML](/en-US/docs/Web/HTML) element is used to enclose inline text which represents sample (or quoted) output from a computer program. Its contents are typically rendered using the browser's default monospaced font (such as [Courier](<https://en.wikipedia.org/wiki/Courier_(typeface)>) or Lucida Console).",
  "html/elements/script": "The **`<script>`** [HTML](/en-US/docs/Web/HTML) element is used to embed executable code or data; this is typically used to embed or refer to JavaScript code. The `<script>` element can also be used with other languages, such as [WebGL](/en-US/docs/Web/API/WebGL_API)'s GLSL shader programming language and [JSON](/en-US/docs/Glossary/JSON).",
  "html/elements/search": "The **`<search>`** [HTML](/en-US/docs/Web/HTML) element is a container representing the parts of the document or application with form controls or other content related to performing a search or filtering operation. The `<search>` element semantically identifies the purpose of the element's contents as having search or filtering capabilities. The search or filtering functionality can be for the website or application, the current web page or document, or the entire Internet or subsection thereof.",
  "html/elements/section": "The **`<section>`** [HTML](/en-US/docs/Web/HTML) element represents a generic standalone section of a document, which doesn't have a more specific semantic element to represent it. Sections should always have a heading, with very few exceptions.",
  "html/elements/select": "The **`<select>`** [HTML](/en-US/docs/Web/HTML) element represents a control that provides a menu of options.",
  "html/elements/slot": "The **`<slot>`** [HTML](/en-US/docs/Web/HTML) element—part of the [Web Components](/en-US/docs/Web/API/Web_components) technology suite—is a placeholder inside a web component that you can fill with your own markup, which lets you create separate DOM trees and present them together.",
  "html/elements/small": "The **`<small>`** [HTML](/en-US/docs/Web/HTML) element represents side-comments and small print, like copyright and legal text, independent of its styled presentation. By default, it renders text within it one font-size smaller, such as from `small` to `x-small`.",
  "html/elements/source": "The **`<source>`** [HTML](/en-US/docs/Web/HTML) element specifies one or more media resources for the [picture--](/docs/Web/HTML/Element/picture), [audio--](/docs/Web/HTML/Element/audio), and [video--](/docs/Web/HTML/Element/video) elements. It is a [void element--](/docs/Glossary/void_element), which means that it has no content and does not require a closing tag. This element is commonly used to offer the same media content in multiple file formats in order to provide compatibility with a broad range of browsers given their differing support for [image file formats](/en-US/docs/Web/Media/Formats/Image_types) and [media file formats](/en-US/docs/Web/Media/Formats).",
  "html/elements/span": "The **`<span>`** [HTML](/en-US/docs/Web/HTML) element is a generic inline container for phrasing content, which does not inherently represent anything. It can be used to group elements for styling purposes (using the [`class`](/en-US/docs/Web/HTML/Global_attributes#class) or [`id`](/en-US/docs/Web/HTML/Global_attributes#id) attributes), or because they share attribute values, such as [`lang`](/en-US/docs/Web/HTML/Global_attributes#lang). It should be used only when no other semantic element is appropriate. `<span>` is very much like a [div--](/docs/Web/HTML/Element/div) element, but [div--](/docs/Web/HTML/Element/div) is a [block-level element](/en-US/docs/Glossary/Block-level_content) whereas a `<span>` is an [inline-level element](/en-US/docs/Glossary/Inline-level_content).",
  "html/elements/strike": "The **`<strike>`** [HTML](/en-US/docs/Web/HTML) element places a strikethrough (horizontal line) over text.",
  "html/elements/strong": "The **`<strong>`** [HTML](/en-US/docs/Web/HTML) element indicates that its contents have strong importance, seriousness, or urgency. Browsers typically render the contents in bold type.",
  "html/elements/style": "The **`<style>`** [HTML](/en-US/docs/Web/HTML) element contains style information for a document, or part of a document. It contains CSS, which is applied to the contents of the document containing the `<style>` element.",
  "html/elements/sub": "The **`<sub>`** [HTML](/en-US/docs/Web/HTML) element specifies inline text which should be displayed as subscript for solely typographical reasons. Subscripts are typically rendered with a lowered baseline using smaller text.",
  "html/elements/summary": "The **`<summary>`** [HTML](/en-US/docs/Web/HTML) element specifies a summary, caption, or legend for a [details--](/docs/Web/HTML/Element/details) element's disclosure box. Clicking the `<summary>` element toggles the state of the parent `<details>` element open and closed.",
  "html/elements/sup": "The **`<sup>`** [HTML](/en-US/docs/Web/HTML) element specifies inline text which is to be displayed as superscript for solely typographical reasons. Superscripts are usually rendered with a raised baseline using smaller text.",
  "html/elements/table": "The **`<table>`** [HTML](/en-US/docs/Web/HTML) element represents tabular data—that is, information presented in a two-dimensional table comprised of rows and columns of cells containing data.",
  "html/elements/tbody": "The **`<tbody>`** [HTML](/en-US/docs/Web/HTML) element encapsulates a set of table rows ([tr--](/docs/Web/HTML/Element/tr) elements), indicating that they comprise the body of a table's (main) data.",
  "html/elements/td": "The **`<td>`** [HTML](/en-US/docs/Web/HTML) element defines a cell of a table that contains data and may be used as a child of the [tr--](/docs/Web/HTML/Element/tr) element.",
  "html/elements/template": "The **`<template>`** [HTML](/en-US/docs/Web/HTML) element serves as a mechanism for holding [HTML--](/docs/Glossary/HTML) fragments, which can either be used later via JavaScript or generated immediately into shadow DOM.",
  "html/elements/textarea": "The **`<textarea>`** [HTML](/en-US/docs/Web/HTML) element represents a multi-line plain-text editing control, useful when you want to allow users to enter a sizeable amount of free-form text, for example a comment on a review or feedback form.",
  "html/elements/tfoot": "The **`<tfoot>`** [HTML](/en-US/docs/Web/HTML) element encapsulates a set of table rows ([tr--](/docs/Web/HTML/Element/tr) elements), indicating that they comprise the foot of a table with information about the table's columns. This is usually a summary of the columns, e.g., a sum of the given numbers in a column.",
  "html/elements/th": "The **`<th>`** [HTML](/en-US/docs/Web/HTML) element defines a cell as the header of a group of table cells and may be used as a child of the [tr--](/docs/Web/HTML/Element/tr) element. The exact nature of this group is defined by the [`scope`](#scope) and [`headers`](#headers) attributes.",
  "html/elements/thead": "The **`<thead>`** [HTML](/en-US/docs/Web/HTML) element encapsulates a set of table rows ([tr--](/docs/Web/HTML/Element/tr) elements), indicating that they comprise the head of a table with information about the table's columns. This is usually in the form of column headers ([th--](/docs/Web/HTML/Element/th) elements).",
  "html/elements/time": "The **`<time>`** [HTML](/en-US/docs/Web/HTML) element represents a specific period in time. It may include the `datetime` attribute to translate dates into machine-readable format, allowing for better search engine results or custom features such as reminders.",
  "html/elements/title": "The **`<title>`** [HTML](/en-US/docs/Web/HTML) element defines the document's title that is shown in a [browser--](/docs/Glossary/Browser)'s title bar or a page's tab. It only contains text; tags within the element are ignored.",
  "html/elements/tr": "The **`<tr>`** [HTML](/en-US/docs/Web/HTML) element defines a row of cells in a table. The row's cells can then be established using a mix of [td--](/docs/Web/HTML/Element/td) (data cell) and [th--](/docs/Web/HTML/Element/th) (header cell) elements.",
  "html/elements/track": "The **`<track>`** [HTML](/en-US/docs/Web/HTML) element is used as a child of the media elements, [audio--](/docs/Web/HTML/Element/audio) and [video--](/docs/Web/HTML/Element/video). It lets you specify timed text tracks (or time-based data), for example to automatically handle subtitles. The tracks are formatted in [WebVTT format](/en-US/docs/Web/API/WebVTT_API) (`.vtt` files) — Web Video Text Tracks.",
  "html/elements/tt": "The **`<tt>`** [HTML](/en-US/docs/Web/HTML) element creates inline text which is presented using the [user agent's--](/docs/Glossary/user_agent) default monospace font face. This element was created for the purpose of rendering text as it would be displayed on a fixed-width display such as a teletype, text-only screen, or line printer.",
  "html/elements/u": "The **`<u>`** [HTML](/en-US/docs/Web/HTML) element represents a span of inline text which should be rendered in a way that indicates that it has a non-textual annotation. This is rendered by default as a simple solid underline, but may be altered using CSS.",
  "html/elements/ul": "The **`<ul>`** [HTML](/en-US/docs/Web/HTML) element represents an unordered list of items, typically rendered as a bulleted list.",
  "html/elements/var": "The **`<var>`** [HTML](/en-US/docs/Web/HTML) element represents the name of a variable in a mathematical expression or a programming context. It's typically presented using an italicized version of the current typeface, although that behavior is browser-dependent.",
  "html/elements/video": "The **`<video>`** [HTML](/en-US/docs/Web/HTML) element embeds a media player which supports video playback into the document. You can use `<video>` for audio content as well, but the [audio--](/docs/Web/HTML/Element/audio) element may provide a more appropriate user experience.",
  "html/elements/wbr": "The **`<wbr>`** [HTML](/en-US/docs/Web/HTML) element represents a word break opportunity—a position within text where the browser may optionally break a line, though its line-breaking rules would not otherwise create a break at that location.",
  "html/elements/xmp": "",
  "html/global_attributes/accesskey": "The **`accesskey`** [global attribute](/en-US/docs/Web/HTML/Global_attributes) provides a hint for generating a keyboard shortcut for the current element. The attribute value must consist of a single printable character (which includes accented and other characters that can be generated by the keyboard).",
  "html/global_attributes/autocapitalize": "The **`autocapitalize`** [global attribute](/en-US/docs/Web/HTML/Global_attributes) is an [enumerated](/en-US/docs/Glossary/Enumerated) attribute that controls whether inputted text is automatically capitalized and, if so, in what manner. This is relevant to:",
  "html/global_attributes/autofocus": "The **`autofocus`** [global attribute](/en-US/docs/Web/HTML/Global_attributes) is a Boolean attribute indicating that an element should be focused on page load, or when the [dialog--](/docs/Web/HTML/Element/dialog) that it is part of is displayed.",
  "html/global_attributes/class": "The **`class`** [global attribute](/en-US/docs/Web/HTML/Global_attributes) is a space-separated list of the case-sensitive classes of the element. Classes allow CSS and JavaScript to select and access specific elements via the [class selectors](/en-US/docs/Web/CSS/Class_selectors) or functions like the DOM method [document.getElementsByClassName--](/docs/Web/API/document/getElementsByClassName).",
  "html/global_attributes/contenteditable": "The **`contenteditable`** [global attribute](/en-US/docs/Web/HTML/Global_attributes) is an enumerated attribute indicating if the element should be editable by the user. If so, the browser modifies its widget to allow editing.",
  "html/global_attributes/data-_star_": "The **`data-*`** [global attributes](/en-US/docs/Web/HTML/Global_attributes) form a class of attributes called **custom data attributes**, that allow proprietary information to be exchanged between the [HTML](/en-US/docs/Web/HTML) and its [DOM](/en-US/docs/Web/API/Document_Object_Model) representation by scripts.",
  "html/global_attributes/dir": "The **`dir`** [global attribute](/en-US/docs/Web/HTML/Global_attributes) is an [enumerated](/en-US/docs/Glossary/Enumerated) attribute that indicates the directionality of the element's text.",
  "html/global_attributes/draggable": "The **`draggable`** [global attribute](/en-US/docs/Web/HTML/Global_attributes) is an [enumerated](/en-US/docs/Glossary/Enumerated) attribute that indicates whether the element can be dragged, either with native browser behavior or the [HTML Drag and Drop API](/en-US/docs/Web/API/HTML_Drag_and_Drop_API).",
  "html/global_attributes/enterkeyhint": "The **`enterkeyhint`** [global attribute](/en-US/docs/Web/HTML/Global_attributes)\nis an [enumerated](/en-US/docs/Glossary/Enumerated) attribute defining what action label (or icon) to present for the enter key on virtual keyboards.",
  "html/global_attributes/exportparts": "The **`exportparts`** [global attribute](/en-US/docs/Web/HTML/Global_attributes) allows you to select and style elements existing in nested [shadow trees--](/docs/Glossary/shadow_tree), by exporting their `part` names.",
  "html/global_attributes/hidden": "The **`hidden`** [global attribute](/en-US/docs/Web/HTML/Global_attributes) is an [enumerated--](/docs/Glossary/enumerated) attribute indicating that the browser should not render the contents of the element. For example, it can be used to hide elements of the page that can't be used until the login process has been completed.",
  "html/global_attributes/id": "The **`id`** [global attribute](/en-US/docs/Web/HTML/Global_attributes) defines an identifier (ID) which must be unique in the whole document. Its purpose is to identify the element when linking (using a [fragment identifier](/en-US/docs/Web/HTTP/Basics_of_HTTP/Identifying_resources_on_the_Web#fragment)), scripting, or styling (with [CSS--](/docs/Glossary/CSS)).",
  "html/global_attributes/inert": "The **`inert`** [global attribute](/en-US/docs/Web/HTML/Global_attributes) is a Boolean attribute indicating that the browser will ignore the element. With the `inert` attribute, all of the element's flat tree descendants (such as modal [dialog--](/docs/Web/HTML/Element/dialog)s) that don't otherwise escape inertness are ignored. The `inert` attribute also makes the browser ignore input events sent by the user, including focus-related events and events from assistive technologies.",
  "html/global_attributes/inputmode": "The **`inputmode`** [global attribute](/en-US/docs/Web/HTML/Global_attributes) is an [enumerated](/en-US/docs/Glossary/Enumerated) attribute that hints at the type of data that might be entered by the user while editing the element or its contents.\nThis allows a browser to display an appropriate virtual keyboard.",
  "html/global_attributes/is": "The **`is`** [global attribute](/en-US/docs/Web/HTML/Global_attributes) allows you to specify that a standard HTML element should behave like a defined custom built-in element (see [Using custom elements](/en-US/docs/Web/API/Web_components/Using_custom_elements) for more details).",
  "html/global_attributes/itemid": "The **`itemid`** [global attribute](/en-US/docs/Web/HTML/Global_attributes) provides microdata in the form of a unique, global identifier of an item.",
  "html/global_attributes/itemprop": "The **`itemprop`** [global attribute](/en-US/docs/Web/HTML/Global_attributes) is used to add properties to an item. Every HTML element can have an `itemprop` attribute specified, and an `itemprop` consists of a name-value pair. Each name-value pair is called a **property**, and a group of one or more properties forms an **item**. Property values are either a string or a URL and can be associated with a very wide range of elements including [audio--](/docs/Web/HTML/Element/audio), [embed--](/docs/Web/HTML/Element/embed), [iframe--](/docs/Web/HTML/Element/iframe), [img--](/docs/Web/HTML/Element/img), [link--](/docs/Web/HTML/Element/link), [object--](/docs/Web/HTML/Element/object), [source--](/docs/Web/HTML/Element/source), [track--](/docs/Web/HTML/Element/track), and [video--](/docs/Web/HTML/Element/video).",
  "html/global_attributes/itemref": "Properties that are not descendants of an element with the [`itemscope`](/en-US/docs/Web/HTML/Global_attributes/itemscope) attribute can be associated with an item using the [global attribute](/en-US/docs/Web/HTML/Global_attributes) **`itemref`**.",
  "html/global_attributes/itemscope": "**`itemscope`** is a boolean [global attribute](/en-US/docs/Web/HTML/Global_attributes) that defines the scope of associated metadata. Specifying the **`itemscope`** attribute for an element creates a new item, which results in a number of name-value pairs that are associated with the element.",
  "html/global_attributes/itemtype": "The [global attribute](/en-US/docs/Web/HTML/Global_attributes) **`itemtype`** specifies the URL of the vocabulary that will be used to define `itemprop`'s (item properties) in the data structure.",
  "html/global_attributes/lang": "The **`lang`** [global attribute](/en-US/docs/Web/HTML/Global_attributes) helps define the language of an element: the language that non-editable elements are written in, or the language that the editable elements should be written in by the user. The attribute contains a single \"language tag\" in the format defined in {{RFC(5646, \"Tags for Identifying Languages (also known as BCP 47)\")}}.",
  "html/global_attributes/nonce": "The **`nonce`** [global attribute](/en-US/docs/Web/HTML/Global_attributes)\nis a content attribute defining a cryptographic nonce (\"number used once\") which can be used by\n[Content Security Policy](/en-US/docs/Web/HTTP/CSP) to determine whether or not a given fetch will\nbe allowed to proceed for a given element.",
  "html/global_attributes/part": "The **`part`** [global attribute](/en-US/docs/Web/HTML/Global_attributes) contains a space-separated list of the part names of the element. Part names allows CSS to select and style specific elements in a shadow tree via the [::part--](/docs/Web/CSS/::part) pseudo-element.",
  "html/global_attributes/popover": "The **`popover`** [global attribute](/en-US/docs/Web/HTML/Global_attributes) is used to designate an element as a popover element.",
  "html/global_attributes/slot": "The **`slot`** [global attribute](/en-US/docs/Web/HTML/Global_attributes) assigns a slot in a [shadow DOM](/en-US/docs/Web/API/Web_components/Using_shadow_DOM) shadow tree to an element: An element with a `slot` attribute is assigned to the slot created by the [slot--](/docs/Web/HTML/Element/slot) element whose [`name`](/en-US/docs/Web/HTML/Element/slot#name) attribute's value matches that `slot` attribute's value.",
  "html/global_attributes/spellcheck": "The **`spellcheck`** [global attribute](/en-US/docs/Web/HTML/Global_attributes) is an [enumerated](/en-US/docs/Glossary/Enumerated) attribute that defines whether the element may be checked for spelling errors.",
  "html/global_attributes/style": "The **`style`** [global attribute](/en-US/docs/Web/HTML/Global_attributes) contains [CSS](/en-US/docs/Web/CSS) styling declarations to be applied to the element. Note that it is recommended for styles to be defined in a separate file or files. This attribute and the [style--](/docs/Web/HTML/Element/style) element have mainly the purpose of allowing for quick styling, for example for testing purposes.",
  "html/global_attributes/tabindex": "The **`tabindex`** [global attribute](/en-US/docs/Web/HTML/Global_attributes) allows developers to make HTML elements focusable, allow or prevent them from being sequentially focusable (usually with the <kbd>Tab</kbd> key, hence the name) and determine their relative ordering for sequential focus navigation.",
  "html/global_attributes/title": "The **`title`** [global attribute](/en-US/docs/Web/HTML/Global_attributes) contains text representing advisory information related to the element it belongs to.",
  "html/global_attributes/translate": "The **`translate`** [global attribute](/en-US/docs/Web/HTML/Global_attributes) is an [enumerated](/en-US/docs/Glossary/Enumerated) attribute that is used to specify whether an element's _translatable attribute_ values and its [Text--](/docs/Web/API/Text) node children should be translated when the page is localized, or whether to leave them unchanged.",
  "html/global_attributes/virtualkeyboardpolicy": "The **`virtualkeyboardpolicy`** [global attribute](/en-US/docs/Web/HTML/Global_attributes) is an enumerated attribute. When specified on an element that the element's content is editable (for example, it is an [input--](/docs/Web/HTML/Element/input) or [textarea--](/docs/Web/HTML/Element/textarea) element, or an element with the [`contenteditable`](/en-US/docs/Web/HTML/Global_attributes/contenteditable) attribute set), it controls the on-screen virtual keyboard behavior on devices such as tablets, mobile phones, or other devices where a hardware keyboard may not be available.",
  "html/manifest/background_color": "The `background_color` member defines a placeholder background color for the application page to display before its stylesheet is loaded. This value is used by the user agent to draw the background color of a shortcut when the manifest is available before the stylesheet has loaded.",
  "html/manifest/categories": "The `categories` member is an array of strings defining the names of categories that the application supposedly belongs to. There is no standard list of possible values, but the W3C maintains [a list of known categories](https://github.com/w3c/manifest/wiki/Categories).",
  "html/manifest/description": "The `description` member is a string in which developers can explain what the application does. `description` is directionality-capable, which means it can be displayed left to right or right to left based on the values of the [`dir`](/en-US/docs/Web/Manifest) and [`lang`](/en-US/docs/Web/Manifest) manifest members.",
  "html/manifest/display": "The `display` member is a string that determines the developers' preferred display mode for the website. The display mode changes how much of browser UI is shown to the user and can range from `browser` (when the full browser window is shown) to `fullscreen` (when the app is fullscreened).",
  "html/manifest/display_override": "The [`display`](/en-US/docs/Web/Manifest/display) member is used to determine the developer's preferred display mode for a website. It follows a process where the browser falls back to the next display mode if the requested one is not supported. In some advanced use cases, this fallback process might not be enough.",
  "html/manifest/file_handlers": "The `file_handlers` member specifies an array of objects representing the types of files an installed [progressive web app (PWA)](/en-US/docs/Web/Progressive_web_apps) can handle.",
  "html/manifest/icons": "The `icons` member specifies an array of objects representing image files that can serve as application icons for different contexts. For example, they can be used to represent the web application amongst a list of other applications, or to integrate the web application with an OS's task switcher and/or system preferences.",
  "html/manifest/id": "The `id` member is a string that represents the _identity of the web application_ — the unique identifier for the web application. If the web application ID does not match an existing ID, the application will be treated as a unique identity even if it is from the same URL.",
  "html/manifest/launch_handler": "The `launch_handler` member defines values that control the launch of a web application. Currently it can only contain a single value, `client_mode`, which specifies the context in which the app should be loaded when launched. For example, in an existing web app client containing an instance of the app, or in a new web app client. This leaves scope for more `launch_handler` values to be defined in the future.",
  "html/manifest/name": "The `name` member is a string that represents the name of the web application as it is usually displayed to the user (e.g., amongst a list of other applications, or as a label for an icon). `name` is directionality-capable, which means it can be displayed left-to-right or right-to-left based on the values of the [`dir`](/en-US/docs/Web/Manifest) and [`lang`](/en-US/docs/Web/Manifest) manifest members.",
  "html/manifest/orientation": "The `orientation` member defines the default orientation for all the website's top-level [browsing contexts--](/docs/Glossary/Browsing_context).",
  "html/manifest/prefer_related_applications": "The `prefer_related_applications` member is a boolean value that specifies that applications listed in [`related_applications`](/en-US/docs/Web/Manifest/related_applications) should be preferred over the web application. If the `prefer_related_applications` member is set to `true`, the user agent might suggest installing one of the related applications instead of this web app.",
  "html/manifest/protocol_handlers": "The `protocol_handlers` member specifies an array of objects that are protocols which this web app can register and handle. Protocol handlers register the application in an OS's application preferences; the registration associates a specific application with the given protocol scheme. For example, when using the protocol handler `mailto://` on a web page, registered email applications open.",
  "html/manifest/related_applications": "The `related_applications` field is an array of objects specifying native applications that are installable by, or accessible to, the underlying platform — for example, a native Android application obtainable through the Google Play Store. Such applications are intended to be alternatives to the manifest's website that provides similar/equivalent functionality — like the native app equivalent.",
  "html/manifest/scope": "The `scope` member is a string that defines the navigation scope of this web application's application context. It restricts what web pages can be viewed while the manifest is applied. If the user navigates outside the scope, it reverts to a normal web page inside a browser tab or window.",
  "html/manifest/screenshots": "The `screenshots` member defines an array of screenshots intended to showcase the application. These images are intended to be used by progressive web app stores.",
  "html/manifest/serviceworker": "The `serviceworker` member specifies a serviceworker that is Just-In-Time (JIT)-installed and registered to run a web-based payment app providing a payment mechanism for a specified payment method in a merchant website. See [Payment Handler API--](/docs/Web/API/Payment_Handler_API) for more details.",
  "html/manifest/share_target": "The `share_target` manifest member allows installed [Progressive Web Apps--](/docs/Glossary/Progressive_Web_Apps) (PWAs) to be registered as a share target in the system's share dialog.",
  "html/manifest/short_name": "The `short_name` member is a string that represents the name of the web application displayed to the user if there is not enough space to display [`name`](/en-US/docs/Web/Manifest/name) (e.g., as a label for an icon on the phone home screen). `short_name` is directionality-capable, which means it can be displayed left-to-right or right-to-left based on the value of the [`dir`](/en-US/docs/Web/Manifest) and [`lang`](/en-US/docs/Web/Manifest) manifest members.",
  "html/manifest/shortcuts": "The `shortcuts` member defines an array of shortcuts or links to key tasks or pages within a web app. A user agent can use these values to assemble a context menu to be displayed by the operating system when a user engages with the web app's icon. When user invokes a shortcut, the user agent will navigate to the address given by shortcut's `url` member.",
  "html/manifest/start_url": "The `start_url` member is a string that represents the _start URL of the web application_ — the preferred URL that should be loaded when the user launches the web application (e.g., when the user taps on the web application's icon from a device's application menu or homescreen).",
  "html/manifest/theme_color": "The `theme_color` member is a string that defines the default theme color for the application. This sometimes affects how the OS displays the site (e.g., on Android's task switcher, the theme color surrounds the site).",
  "webdriver/commands/closewindow": "The _Close Window_ [command](/en-US/docs/Web/WebDriver/Command) of the [WebDriver](/en-US/docs/Web/WebDriver) API closes the current top-level browsing context (window or tab) and returns with the list of currently open [`WebWindow`](/en-US/docs/Web/WebDriver/WebWindow)s. If it is the last window that is being closed, the WebDriver session will implicitly be deleted. Subsequent commands after the session is ended will therefore cause [invalid session ID](/en-US/docs/Web/WebDriver/Errors/InvalidSessionID) errors.",
  "webdriver/commands/getelementattribute": "The _Get Element Attribute_ [command](/en-US/docs/Web/WebDriver/Command) of the [WebDriver](/en-US/docs/Web/WebDriver) API returns the attribute of the referenced [web element](/en-US/docs/Web/WebDriver/WebElement). If for example the element is an [img--](/docs/Web/HTML/Element/img), the returned attribute is `\"//TODO\"`, which is equivalent to calling [Element.getAttribute--](/docs/Web/API/Element/getAttribute) on the element. For XML/XHTML documents it may be cased differently.",
  "webdriver/commands/getelementproperty": "The _Get Element Property_ [command](/en-US/docs/Web/WebDriver/Commands) of the [WebDriver](/en-US/docs/Web/WebDriver) API returns the property of the referenced [web element](/en-US/docs/Web/WebDriver/WebElement). Given `<input value=foo>` where the user changes the value to `bar`, the returned property is `bar` rather than the initial value `foo`. This is equivalent to calling [Element.getProperty--](/docs/Web/API/Element/getProperty) on the element.",
  "webdriver/commands/getelementtagname": "The _Get Element Tag Name_ [command](/en-US/docs/Web/WebDriver/Command) of the [WebDriver](/en-US/docs/Web/WebDriver) API returns the tag name of the referenced [web element](/en-US/docs/Web/WebDriver/WebElement). If for example the element is an [img--](/docs/Web/HTML/Element/img), the returned tag name is `\"IMG\"`, which is equivalent to calling [Element.tagName--](/docs/Web/API/Element/tagName) on the element. For XML/XHTML documents it may be cased differently.",
  "webdriver/commands/gettimeouts": "The _Get Timeouts_ [command](/en-US/docs/Web/WebDriver/Commands) of the [WebDriver](/en-US/docs/Web/WebDriver) API returns the timeouts associated with the current session. The [session timeout](/en-US/docs/Web/WebDriver/Timeouts) durations control such behavior as timeouts on [script injection](/en-US/docs/Web/WebDriver/Timeouts#script), [document navigation](/en-US/docs/Web/WebDriver/Timeouts#pageload), and [element retrieval](/en-US/docs/Web/WebDriver/Timeouts#implicit).",
  "webdriver/commands/getwindowhandles": "The _Get Window Handles_ [command](/en-US/docs/Web/WebDriver/Command) of the [WebDriver](/en-US/docs/Web/WebDriver) API returns a list of all [`WebWindow`](/en-US/docs/Web/WebDriver/WebWindow)s. Each tab or window, depending on whether you are using a tabbed browser, is associated by a _window handle_ that is used as a reference when [switching to the window](/en-US/docs/Web/WebDriver/Commands/SwitchToWindow).",
  "webdriver/commands/getwindowrect": "The _Get Window Rect_ [command](/en-US/docs/Web/WebDriver/Commands) of the [WebDriver](/en-US/docs/Web/WebDriver) API returns the size and position of the given [`WebElement`](/en-US/docs/Web/WebDriver/WebElement). Many [WebDriver clients](/en-US/docs/Web/WebDriver/Clients) present separate API methods for getting an element's location and dimensions, but as an optimization they both use this primitive.",
  "webdriver/commands/newwindow": "The _New Window_ [command](/en-US/docs/Web/WebDriver/Commands) of the [WebDriver](/en-US/docs/Web/WebDriver) API opens a new top-level browsing context of type _window_ or _tab_, and returns with a dictionary containing the _handle_ of the new [WebWindow](/en-US/docs/Web/WebDriver/WebWindow) and its created _type_. If the requested _type_ cannot be created by the browser, the alternative type will be tried to create.",
  "webdriver/commands/settimeouts": "The _Set Timeouts_ [command](/en-US/docs/Web/WebDriver/Commands) of the [WebDriver](/en-US/docs/Web/WebDriver) API sets the timeouts associated with the current session. The [session timeout](/en-US/docs/Web/WebDriver/Timeouts) durations control such behavior as timeouts on [script injection](/en-US/docs/Web/WebDriver/Timeouts#script), [document navigation](/en-US/docs/Web/WebDriver/Timeouts#pageload), and [element retrieval](/en-US/docs/Web/WebDriver/Timeouts#implicit).",
  "webdriver/commands/setwindowrect": "The _Set Window Rect_ [command](/en-US/docs/Web/WebDriver/Commands) of the [WebDriver](/en-US/docs/Web/WebDriver) API alters the size and position of the operating system window associated with the current [`window`](/en-US/docs/Web/API/Window). The command acts as the setter of [Get Window Rect](/en-US/docs/Web/WebDriver/Commands/GetWindowRect), which return object you can pass directly as this command's payload.",
  "http/headers/accept": "The **`Accept`** request HTTP header indicates which content types, expressed as [MIME types](/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types), the client is able to understand. The server uses [content negotiation](/en-US/docs/Web/HTTP/Content_negotiation) to select one of the proposals and informs the client of the choice with the [Content-Type--](/docs/Web/HTTP/Headers/Content-Type) response header. Browsers set required values for this header based on the context of the request. For example, a browser uses different values in a request when fetching a CSS stylesheet, image, video, or a script.",
  "http/headers/accept-ch": "The **`Accept-CH`** header may be set by a server to specify\nwhich [client hints](/en-US/docs/Web/HTTP/Client_hints) headers a client\nshould include in subsequent requests.",
  "http/headers/accept-ch-lifetime": "> **Warning:** The header was removed from the specification in [draft 8](https://datatracker.ietf.org/doc/html/draft-ietf-httpbis-client-hints-08).",
  "http/headers/accept-charset": "> **Warning:** Do not use this header. Browsers omit this header and servers should ignore it.",
  "http/headers/accept-encoding": "The **`Accept-Encoding`** request HTTP header indicates the content encoding (usually a compression algorithm) that the client can understand. The server uses [content negotiation](/en-US/docs/Web/HTTP/Content_negotiation) to select one of the proposals and informs the client of that choice with the [Content-Encoding--](/docs/Web/HTTP/Headers/Content-Encoding) response header.",
  "http/headers/accept-language": "The **`Accept-Language`** request HTTP header indicates the natural language and locale that the client prefers.\nThe server uses [content negotiation](/en-US/docs/Web/HTTP/Content_negotiation) to select one of the proposals and informs the client of the choice with the [Content-Language--](/docs/Web/HTTP/Headers/Content-Language) response header.\nBrowsers set required values for this header according to their active user interface language.\nUsers rarely change it, and such changes are not recommended because they may lead to [fingerprinting](/en-US/docs/Glossary/Fingerprinting).",
  "http/headers/accept-patch": "The **`Accept-Patch`** response HTTP header advertises which media-type the server is able to understand in a PATCH request.",
  "http/headers/accept-post": "The **`Accept-Post`** response HTTP header advertises which [media types](/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) are accepted by the server for HTTP post requests.",
  "http/headers/accept-ranges": "The **`Accept-Ranges`** HTTP response header is a marker used\nby the server to advertise its support for partial requests from the client for file downloads. The value of this field\nindicates the unit that can be used to define a range.",
  "http/headers/access-control-allow-credentials": "The **`Access-Control-Allow-Credentials`** response header tells browsers whether the server allows cross-origin HTTP requests to include credentials.",
  "http/headers/access-control-allow-headers": "The **`Access-Control-Allow-Headers`** response header is used in response to a [preflight request--](/docs/Glossary/preflight_request) which includes the [Access-Control-Request-Headers--](/docs/Web/HTTP/Headers/Access-Control-Request-Headers) to indicate which HTTP headers can be used during the actual request.",
  "http/headers/access-control-allow-methods": "The **`Access-Control-Allow-Methods`** response header\nspecifies one or more methods allowed when accessing a resource in response to a\n[preflight request--](/docs/Glossary/preflight_request).",
  "http/headers/access-control-allow-origin": "The **`Access-Control-Allow-Origin`** response header indicates whether the response can be shared with requesting code from the given [origin--](/docs/Glossary/origin).",
  "http/headers/access-control-expose-headers": "The **`Access-Control-Expose-Headers`** response header allows a server to indicate which response headers should be made available to scripts running in the browser, in response to a cross-origin request.",
  "http/headers/access-control-max-age": "The **`Access-Control-Max-Age`** response header indicates how long the results of a [preflight request--](/docs/Glossary/preflight_request) (that is the information contained in the [Access-Control-Allow-Methods--](/docs/Web/HTTP/Headers/Access-Control-Allow-Methods) and [Access-Control-Allow-Headers--](/docs/Web/HTTP/Headers/Access-Control-Allow-Headers) headers) can be cached.",
  "http/headers/access-control-request-headers": "The **`Access-Control-Request-Headers`** request header is used by browsers when issuing a [preflight request--](/docs/Glossary/preflight_request) to let the server know which [HTTP headers](/en-US/docs/Web/HTTP/Headers) the client might send when the actual request is made (such as with [fetch()--](/docs/Web/API/fetch) or [XMLHttpRequest.setRequestHeader()--](/docs/Web/API/XMLHttpRequest/setRequestHeader)). The complementary server-side header of [Access-Control-Allow-Headers--](/docs/Web/HTTP/Headers/Access-Control-Allow-Headers) will answer this browser-side header.",
  "http/headers/access-control-request-method": "The **`Access-Control-Request-Method`** request header is used\nby browsers when issuing a [preflight request--](/docs/Glossary/preflight_request), to let the server know\nwhich [HTTP method](/en-US/docs/Web/HTTP/Methods) will be used when the\nactual request is made. This header is necessary as the preflight request is always an\n{{HTTPMethod(\"OPTIONS\")}} and doesn't use the same method as the actual request.",
  "http/headers/age": "The **`Age`** header contains the time in seconds the object was in a proxy cache.",
  "http/headers/allow": "The **`Allow`** header lists the set of methods supported by a resource.",
  "http/headers/alt-svc": "The [Alt-Svc--](/docs/Web/HTTP/Headers/Alt-Svc) HTTP header allows a server to indicate that another network location (the \"alternative service\") can be treated as authoritative for that origin when making future requests.",
  "http/headers/alt-used": "The [Alt-Used--](/docs/Web/HTTP/Headers/Alt-Used) HTTP header is used in requests to identify the alternative service in use, just as the [Host--](/docs/Web/HTTP/Headers/Host) HTTP header field identifies the host and port of the origin.",
  "http/headers/authorization": "The HTTP **`Authorization`** request header can be used to provide credentials that authenticate a user agent with a server, allowing access to a protected resource.",
  "http/headers/cache-control": "The **`Cache-Control`** HTTP header field holds _directives_ (instructions) — in both requests and responses — that control [caching](/en-US/docs/Web/HTTP/Caching) in browsers and shared caches (e.g. Proxies, CDNs).",
  "http/headers/clear-site-data": "The **`Clear-Site-Data`** header clears browsing data (cookies, storage, cache) associated with the requesting website. It allows web developers to have more control over the data stored by a client browser for their origins.",
  "http/headers/connection": "The **`Connection`** general header controls whether the\nnetwork connection stays open after the current transaction finishes. If the value sent\nis `keep-alive`, the connection is persistent and not closed, allowing for\nsubsequent requests to the same server to be done.",
  "http/headers/content-digest": "The **`Content-Digest`** response or request header provides a [digest--](/docs/Glossary/digest) of the actual message content, the stream of octets framed in an HTTP message.\nAs such, `Content-Digest` is dependent on among other things [Content-Encoding--](/docs/Web/HTTP/Headers/Content-Encoding) and [Content-Range--](/docs/Web/HTTP/Headers/Content-Range), but not dependent on, for example, HTTP/1.1's [Transfer-Encoding--](/docs/Web/HTTP/Headers/Transfer-Encoding).\n`Content-Digest` may coincide with [Repr-Digest--](/docs/Web/HTTP/Headers/Repr-Digest) if a representation was sent in a single message.",
  "http/headers/content-disposition": "In a regular HTTP response, the **`Content-Disposition`** response header is a header indicating if the content is expected to be displayed _inline_ in the browser, that is, as a Web page or as part of a Web page, or as an _attachment_, that is downloaded and saved locally.",
  "http/headers/content-dpr": "The **`Content-DPR`** response header is used to confirm the _image_ device to pixel ratio in requests where the screen [DPR--](/docs/Web/HTTP/Headers/DPR) [client hint](/en-US/docs/Web/HTTP/Client_hints) was used to select an image resource.",
  "http/headers/content-encoding": "The **`Content-Encoding`** [representation header--](/docs/Glossary/representation_header) lists any encodings that have been applied to the representation (message payload), and in what order.\nThis lets the recipient know how to decode the representation in order to obtain the original payload format.\nContent encoding is mainly used to compress the message data without losing information about the origin media type.",
  "http/headers/content-language": "The **`Content-Language`** [representation header--](/docs/Glossary/representation_header) is used to **describe the language(s) intended for the audience**, so users can differentiate it according to their own preferred language.",
  "http/headers/content-length": "The **`Content-Length`** header indicates the size of the message body, in bytes, sent to the recipient.",
  "http/headers/content-location": "The **`Content-Location`** header indicates an alternate\nlocation for the returned data. The principal use is to indicate the URL of a resource\ntransmitted as the result of [content negotiation](/en-US/docs/Web/HTTP/Content_negotiation).",
  "http/headers/content-range": "The **`Content-Range`** response HTTP header indicates where in\na full body message a partial message belongs.",
  "http/headers/content-security-policy": "The HTTP **`Content-Security-Policy`** response header allows\nwebsite administrators to control resources the user agent is allowed to load for a\ngiven page. With a few exceptions, policies mostly involve specifying server origins and\nscript endpoints. This helps guard against cross-site scripting attacks\n([Cross-site_scripting--](/docs/Glossary/Cross-site_scripting)).",
  "http/headers/content-security-policy-report-only": "The HTTP **`Content-Security-Policy-Report-Only`** response header allows web developers to experiment with policies by monitoring (but not enforcing) their effects. These violation reports consist of [JSON--](/docs/Glossary/JSON) documents sent via an HTTP `POST` request to the specified URI defined in a [Reporting-Endpoints--](/docs/Web/HTTP/Headers/Reporting-Endpoints) HTTP response header.",
  "http/headers/content-type": "The **`Content-Type`** representation header is used to indicate the original [media type--](/docs/Glossary/MIME_type) of the resource (prior to any content encoding applied for sending).",
  "http/headers/cookie": "The **`Cookie`** HTTP request header contains stored [HTTP cookies](/en-US/docs/Web/HTTP/Cookies) associated with the server (i.e. previously sent by the server with the [Set-Cookie--](/docs/Web/HTTP/Headers/Set-Cookie) header or set in JavaScript using [Document.cookie--](/docs/Web/API/Document/cookie)).",
  "http/headers/critical-ch": "The **`Critical-CH`** [client hint](/en-US/docs/Web/HTTP/Client_hints) response header is used along with [Accept-CH--](/docs/Web/HTTP/Headers/Accept-CH) to specify that accepted client hints are also [critical client hints](/en-US/docs/Web/HTTP/Client_hints#critical_client_hints).",
  "http/headers/cross-origin-embedder-policy": "The HTTP **`Cross-Origin-Embedder-Policy`** (COEP) response header configures\nembedding cross-origin resources into the document.",
  "http/headers/cross-origin-opener-policy": "The HTTP **`Cross-Origin-Opener-Policy`** (COOP) response header allows you to ensure a top-level document does not share a browsing context group with cross-origin documents.",
  "http/headers/cross-origin-resource-policy": "The HTTP **`Cross-Origin-Resource-Policy`** response header\nconveys a desire that the browser blocks no-cors cross-origin/cross-site requests to the\ngiven resource.",
  "http/headers/date": "The **`Date`** general HTTP header contains the date and time\nat which the message originated.",
  "http/headers/device-memory": "The **`Device-Memory`** [device client hint](/en-US/docs/Web/HTTP/Client_hints#device_client_hints) request header field indicates the approximate amount of available RAM on the client device. The header is part of the [Device Memory API--](/docs/Web/API/Device_Memory_API).",
  "http/headers/digest": "> Use [Content-Digest--](/docs/Web/HTTP/Headers/Content-Digest) instead.\n> For `id-*` digest algorithms, use [Repr-Digest--](/docs/Web/HTTP/Headers/Repr-Digest).",
  "http/headers/dnt": "The **`DNT`** (**D**o **N**ot\n**T**rack) request header indicates the user's tracking preference. It lets\nusers indicate whether they would prefer privacy rather than personalized content.",
  "http/headers/downlink": "The **`Downlink`** [Client hint](/en-US/docs/Web/HTTP/Client_hints) request header field provides the approximate bandwidth of the client's connection to the server, in Mbps.",
  "http/headers/dpr": "The **`DPR`** [device client hint](/en-US/docs/Web/HTTP/Client_hints) request header provides the client device pixel ratio. This ratio is the number of physical device pixels corresponding to every [CSS pixel--](/docs/Glossary/CSS_pixel).",
  "http/headers/early-data": "The **`Early-Data`** header is set by\nan intermediary to indicate that the request has been conveyed in [TLS early data](/en-US/docs/Web/Security/Transport_Layer_Security#tls_1.3),\nand also indicates that the intermediary understands the {{HTTPStatus(\"425\", \"425 (Too Early)\")}} status code.",
  "http/headers/ect": "The **`ECT`** [Client hint](/en-US/docs/Web/HTTP/Client_hints) request header field indicates the [effective connection type--](/docs/Glossary/effective_connection_type): `slow-2g`, `2g`, `3g`, `4g`.",
  "http/headers/etag": "The **`ETag`** (or **entity tag**) HTTP response header is an identifier for a\nspecific version of a resource. It lets caches be more efficient and save bandwidth, as\na web server does not need to resend a full response if the content was not changed.\nAdditionally, etags help to prevent simultaneous updates of a resource from overwriting\neach other ([\"mid-air collisions\"](#avoiding_mid-air_collisions)).",
  "http/headers/expect": "The **`Expect`** HTTP request header indicates expectations\nthat need to be met by the server to handle the request successfully.",
  "http/headers/expect-ct": "The `Expect-CT` header lets sites opt in to reporting and/or enforcement of [Certificate Transparency](/en-US/docs/Web/Security/Certificate_Transparency) requirements. Certificate Transparency (CT) aims to prevent the use of misissued certificates for that site from going unnoticed.",
  "http/headers/expires": "The **`Expires`** HTTP header contains the date/time after which the\nresponse is considered expired.",
  "http/headers/forwarded": "The **`Forwarded`** request header contains information that may be added by [reverse proxy servers](/en-US/docs/Web/HTTP/Proxy_servers_and_tunneling) (load balancers, CDNs, and so on) that would otherwise be altered or lost when proxy servers are involved in the path of the request.",
  "http/headers/from": "The **`From`** request header contains an Internet email\naddress for a human user who controls the requesting user agent.",
  "http/headers/host": "The **`Host`** request header specifies the host and port\nnumber of the server to which the request is being sent.",
  "http/headers/if-match": "The **`If-Match`** HTTP request header makes a request conditional.",
  "http/headers/if-modified-since": "The **`If-Modified-Since`** request HTTP header makes the\nrequest conditional: the server sends back the requested resource, with a\n{{HTTPStatus(\"200\")}} status, only if it has been last modified after the given date. If\nthe resource has not been modified since, the response is a {{HTTPStatus(\"304\")}}\nwithout any body; the [Last-Modified--](/docs/Web/HTTP/Headers/Last-Modified) response header of a previous\nrequest contains the date of last modification. Unlike\n[If-Unmodified-Since--](/docs/Web/HTTP/Headers/If-Unmodified-Since), `If-Modified-Since` can only be used\nwith a {{HTTPMethod(\"GET\")}} or {{HTTPMethod(\"HEAD\")}}.",
  "http/headers/if-none-match": "The **`If-None-Match`** HTTP request header makes the request conditional. For {{HTTPMethod(\"GET\")}} and {{HTTPMethod(\"HEAD\")}} methods, the server will return the requested resource, with a {{HTTPStatus(\"200\")}} status, only if it doesn't have an [ETag--](/docs/Web/HTTP/Headers/ETag) matching the given ones. For other methods, the request will be processed only if the eventually existing resource's [ETag--](/docs/Web/HTTP/Headers/ETag) doesn't match any of the values listed.",
  "http/headers/if-range": "The **`If-Range`** HTTP request header makes a range request\nconditional: if the condition is fulfilled, the range request is issued, and the\nserver sends back a {{HTTPStatus(\"206\")}} `Partial Content` answer with the\nappropriate body. If the condition is not fulfilled, the full resource is sent back\nwith a {{HTTPStatus(\"200\")}} `OK` status.",
  "http/headers/if-unmodified-since": "The HyperText Transfer Protocol (HTTP) **`If-Unmodified-Since`** request header makes the\nrequest for the resource conditional: the server will send the requested resource or accept it in\nthe case of a {{HTTPMethod(\"POST\")}} or another non-[safe--](/docs/Glossary/Safe/HTTP) method only if the resource has not been modified after the date specified by this HTTP header. If the resource has been modified\nafter the specified date, the response will be a {{HTTPStatus(\"412\", \"412 Precondition Failed\")}} error.",
  "http/headers/keep-alive": "The **`Keep-Alive`** general header allows the sender to hint about how the connection may be used to set a timeout and a maximum amount of requests.",
  "http/headers/large-allocation": "The non-standard **`Large-Allocation`** response header tells the browser that the page being loaded is going to want to perform a large allocation.\nIt's not implemented in current versions of any browser, but is harmless to send to any browser.",
  "http/headers/last-modified": "The **`Last-Modified`** response HTTP header contains a date\nand time when the origin server believes the resource was last modified. It is used\nas a validator to determine if the resource is the same as the previously stored one. Less accurate\nthan an [ETag--](/docs/Web/HTTP/Headers/ETag) header, it is a fallback mechanism. Conditional requests\ncontaining [If-Modified-Since--](/docs/Web/HTTP/Headers/If-Modified-Since) or [If-Unmodified-Since--](/docs/Web/HTTP/Headers/If-Unmodified-Since)\nheaders make use of this field.",
  "http/headers/link": "The HTTP **`Link`** entity-header field provides a means for serializing one or more links in HTTP headers. In many cases, it has the same effect as the HTML [link--](/docs/Web/HTML/Element/link) element.",
  "http/headers/location": "The **`Location`** response header indicates the URL to\nredirect a page to. It only provides a meaning when served with a\n`3xx` (redirection) or `201` (created) status response.",
  "http/headers/max-forwards": "The **`Max-Forwards`** request HTTP header is used with the [`TRACE`](/en-US/docs/Web/HTTP/Methods/TRACE) method to limit the number of nodes (usually proxies) that request goes through. Its value is an integer value indicating the _maximum amount_ of nodes it must visit. At each node, the value is decremented and the `TRACE` request is forwarded to the next node, until the destination is reached, or the received value of `Max-Forwards` is zero. The request is then sent back, except for some headers, as the body of a `200 OK` response.",
  "http/headers/nel": "The HTTP **`NEL`** response header is used to configure network request logging.",
  "http/headers/no-vary-search": "The **`No-Vary-Search`** response header specifies a set of rules that define how a URL's query parameters will affect cache matching. These rules dictate whether the same URL with different URL parameters should be saved as separate browser cache entries.",
  "http/headers/observe-browsing-topics": "> **Warning:** This feature is currently opposed by two browser vendors. See the [Standards positions](#standards_positions) section below for details of opposition.",
  "http/headers/origin": "The **`Origin`** request header indicates the [origin--](/docs/Glossary/origin) (scheme, hostname, and port) that _caused_ the request.\nFor example, if a user agent needs to request resources included in a page, or fetched by scripts that it executes, then the origin of the page may be included in the request.",
  "http/headers/origin-agent-cluster": "The **`Origin-Agent-Cluster`** HTTP response header is used to request that the associated [Document--](/docs/Web/API/Document) should be placed in an _origin-keyed [agent cluster](https://tc39.es/ecma262/#sec-agent-clusters)_. This means that operating system resources (for example, the operating system process) used to evaluate the document should be shared only with other documents from the same [origin--](/docs/Glossary/origin).",
  "http/headers/permissions-policy": "The HTTP **`Permissions-Policy`** header provides a mechanism to allow and deny the use of browser features in a document or within any [iframe--](/docs/Web/HTML/Element/iframe) elements in the document.",
  "http/headers/pragma": "The **`Pragma`** HTTP/1.0 general header is an\nimplementation-specific header that may have various effects along the request-response\nchain. This header serves for backwards compatibility with the HTTP/1.0 caches that do not have a\n[Cache-Control--](/docs/Web/HTTP/Headers/Cache-Control) HTTP/1.1 header.",
  "http/headers/proxy-authenticate": "The HTTP **`Proxy-Authenticate`** response header defines the\nauthentication method that should be used to gain access to a resource behind a\n[proxy server--](/docs/Glossary/proxy_server). It authenticates the request to the proxy server, allowing\nit to transmit the request further.",
  "http/headers/proxy-authorization": "The HTTP **`Proxy-Authorization`** request header contains the\ncredentials to authenticate a user agent to a proxy server, usually after the server has\nresponded with a {{HTTPStatus(\"407\")}} `Proxy Authentication Required` status\nand the [Proxy-Authenticate--](/docs/Web/HTTP/Headers/Proxy-Authenticate) header.",
  "http/headers/range": "The **`Range`** HTTP request header indicates the parts of a resource that the server should return.\nSeveral parts can be requested at the same time in one `Range` header, and the server may send back these ranges in a multipart document.\nIf the server sends back ranges, it uses the {{HTTPStatus(\"206\", \"206 Partial Content\")}} status code for the response.\nIf the ranges are invalid, the server returns the {{HTTPStatus(\"416\", \"416 Range Not Satisfiable\")}} error.",
  "http/headers/referer": "The **`Referer`** HTTP request header contains the absolute or partial address from which a resource has been requested.\nThe `Referer` header allows a server to identify referring pages that people are visiting from or where requested resources are being used.\nThis data can be used for analytics, logging, optimized caching, and more.",
  "http/headers/referrer-policy": "The **`Referrer-Policy`** [HTTP header--](/docs/Glossary/HTTP_header) controls how much [referrer information](/en-US/docs/Web/Security/Referer_header:_privacy_and_security_concerns) (sent with the [Referer--](/docs/Web/HTTP/Headers/Referer) header) should be included with requests. Aside from the HTTP header, you can [set this policy in HTML](#integration_with_html).",
  "http/headers/reporting-endpoints": "The HTTP **`Reporting-Endpoints`** response header allows website administrators to specify one or more endpoints that are used to receive errors such as CSP violation reports, [Cross-Origin-Opener-Policy--](/docs/Web/HTTP/Headers/Cross-Origin-Opener-Policy) reports, or other generic violations.",
  "http/headers/repr-digest": "The **`Repr-Digest`** response or request header provides a [digest--](/docs/Glossary/digest) of the [selected representation](https://www.rfc-editor.org/rfc/rfc9110#section-6.4) of the target resource. It is invariant under e.g., [Content-Encoding--](/docs/Web/HTTP/Headers/Content-Encoding) or [Content-Range--](/docs/Web/HTTP/Headers/Content-Range), which do affect the [Content-Digest--](/docs/Web/HTTP/Headers/Content-Digest). Furthermore, [Content Negotiation](/en-US/docs/Web/HTTP/Content_negotiation) can result in different selected representations with different representation digests.",
  "http/headers/retry-after": "The **`Retry-After`** response HTTP header indicates how long\nthe user agent should wait before making a follow-up request. There are three main cases\nthis header is used:",
  "http/headers/rtt": "The **`RTT`** [Client hint](/en-US/docs/Web/HTTP/Client_hints) request header field provides the approximate round trip time on the application layer, in milliseconds. The RTT hint, unlike transport layer RTT, includes server processing time.",
  "http/headers/save-data": "The **`Save-Data`** [network client hint](/en-US/docs/Web/HTTP/Client_hints#network_client_hints) request header field is a boolean which indicates the client's preference for reduced data usage.\nThis could be for reasons such as high transfer costs, slow connection speeds, etc.",
  "http/headers/sec-browsing-topics": "> **Warning:** This feature is currently opposed by two browser vendors. See the [Standards positions](#standards_positions) section below for details of opposition.",
  "http/headers/sec-ch-prefers-color-scheme": "The **`Sec-CH-Prefers-Color-Scheme`** [user preference media feature client hint](/en-US/docs/Web/HTTP/Client_hints#user_preference_media_features_client_hints) request header provides the user's preference for light or dark color themes. A user indicates their preference through an operating system setting (for example, light or dark mode) or a user agent setting.",
  "http/headers/sec-ch-prefers-reduced-motion": "The **`Sec-CH-Prefers-Reduced-Motion`** [user agent client hint](/en-US/docs/Web/HTTP/Client_hints#user_preference_media_features_client_hints) request header indicates the user agent's preference for animations to be displayed with reduced motion.",
  "http/headers/sec-ch-prefers-reduced-transparency": "The **`Sec-CH-Prefers-Reduced-Transparency`** [user agent client hint](/en-US/docs/Web/HTTP/Client_hints#user_preference_media_features_client_hints) request header indicates the user agent's preference for reduced transparency.",
  "http/headers/sec-ch-ua": "The **`Sec-CH-UA`** [user agent client hint](/en-US/docs/Web/HTTP/Client_hints#user-agent_client_hints) request header provides the user-agent's branding and significant version information.",
  "http/headers/sec-ch-ua-arch": "The **`Sec-CH-UA-Arch`** [user agent client hint](/en-US/docs/Web/HTTP/Client_hints#user-agent_client_hints) request header provides the user-agent's underlying CPU architecture, such as ARM or x86.",
  "http/headers/sec-ch-ua-bitness": "The **`Sec-CH-UA-Bitness`** [user agent client hint](/en-US/docs/Web/HTTP/Client_hints#user-agent_client_hints) request header provides the \"bitness\" of the user-agent's underlying CPU architecture.\nThis is the size in bits of an integer or memory address—typically 64 or 32 bits.",
  "http/headers/sec-ch-ua-full-version": "The **`Sec-CH-UA-Full-Version`** [user agent client hint](/en-US/docs/Web/HTTP/Client_hints#user-agent_client_hints) request header provides the user-agent's full version string.",
  "http/headers/sec-ch-ua-full-version-list": "The **`Sec-CH-UA-Full-Version-List`** [user agent client hint](/en-US/docs/Web/HTTP/Client_hints#user-agent_client_hints) request header provides the user-agent's branding and full version information.",
  "http/headers/sec-ch-ua-mobile": "The **`Sec-CH-UA-Mobile`** [user agent client hint](/en-US/docs/Web/HTTP/Client_hints#user-agent_client_hints) request header indicates whether the browser is on a mobile device.\nIt can also be used by a desktop browser to indicate a preference for a \"mobile\" user experience.",
  "http/headers/sec-ch-ua-model": "The **`Sec-CH-UA-Model`** [user agent client hint](/en-US/docs/Web/HTTP/Client_hints#user-agent_client_hints) request header indicates the device model on which the browser is running.",
  "http/headers/sec-ch-ua-platform": "The **`Sec-CH-UA-Platform`** [user agent client hint](/en-US/docs/Web/HTTP/Client_hints#user-agent_client_hints) request header provides the platform or operating system on which the user agent is running.\nFor example: \"Windows\" or \"Android\".",
  "http/headers/sec-ch-ua-platform-version": "The **`Sec-CH-UA-Platform-Version`** [user agent client hint](/en-US/docs/Web/HTTP/Client_hints#user-agent_client_hints) request header provides the version of the operating system on which the user agent is running.",
  "http/headers/sec-fetch-dest": "The **`Sec-Fetch-Dest`** [fetch metadata request header--](/docs/Glossary/Fetch_metadata_request_header) indicates the request's _destination_. That is the initiator of the original fetch request, which is where (and how) the fetched data will be used.",
  "http/headers/sec-fetch-mode": "The **`Sec-Fetch-Mode`** [fetch metadata request header--](/docs/Glossary/Fetch_metadata_request_header) indicates the [mode](/en-US/docs/Web/API/Request/mode) of the request.",
  "http/headers/sec-fetch-site": "The **`Sec-Fetch-Site`** [fetch metadata request header--](/docs/Glossary/Fetch_metadata_request_header) indicates the relationship between a request initiator's origin and the origin of the requested resource.",
  "http/headers/sec-fetch-user": "The **`Sec-Fetch-User`** [fetch metadata request header--](/docs/Glossary/Fetch_metadata_request_header) is only sent for requests initiated by user activation, and its value will always be `?1`.",
  "http/headers/sec-gpc": "The **`Sec-GPC`** ([**G**lobal **P**rivacy **C**ontrol](https://globalprivacycontrol.org/)) request header indicates whether the user consents to a website or service selling or sharing their personal information with third parties.",
  "http/headers/sec-purpose": "The **`Sec-Purpose`** [fetch metadata request header--](/docs/Glossary/Fetch_metadata_request_header) indicates the purpose for which the requested resource will be used, when that purpose is something other than immediate use by the user-agent.",
  "http/headers/sec-websocket-accept": "The **Sec-WebSocket-Accept** header is used in the websocket opening\nhandshake. It would appear in the response headers. That is, this is header is sent from\nserver to client to inform that server is willing to initiate a websocket connection.",
  "http/headers/server": "The **`Server`** header describes the\nsoftware used by the origin server that handled the request — that is, the server that\ngenerated the response.",
  "http/headers/server-timing": "The **`Server-Timing`** header communicates one or more metrics and descriptions for a given request-response cycle. It is used to surface any backend server timing metrics (e.g. database read/write, CPU time, file system access, etc.) in the developer tools in the user's browser or in the [PerformanceServerTiming--](/docs/Web/API/PerformanceServerTiming) interface.",
  "http/headers/service-worker-navigation-preload": "The **`Service-Worker-Navigation-Preload`** request header indicates that the request was the result of a [fetch()--](/docs/Web/API/fetch) operation made during service worker navigation preloading.\nIt allows a server to respond with a different resource than for a normal `fetch()`.",
  "http/headers/set-cookie": "The **`Set-Cookie`** HTTP response header is used to send a cookie from the server to the user agent, so that the user agent can send it back to the server later.\nTo send multiple cookies, multiple **`Set-Cookie`** headers should be sent in the same response.",
  "http/headers/set-login": "The **`Set-Login`** [response header--](/docs/Glossary/Response_header) is sent by a federated identity provider (IdP) to set its login status — by this, we mean \"whether any users are logged into the IdP on the current browser or not\". This is stored by the browser and used by the [FedCM API](/en-US/docs/Web/API/FedCM_API) to reduce the number of requests it makes to the IdP (because it does not need to waste time requesting accounts when there are no users logged in to the IdP). It also mitigates [potential timing attacks](https://github.com/fedidcg/FedCM/issues/447).",
  "http/headers/sourcemap": "The **`SourceMap`** [HTTP](/en-US/docs/Web/HTTP) response header links generated code to a [source map](https://firefox-source-docs.mozilla.org/devtools-user/debugger/how_to/use_a_source_map/index.html), enabling the browser to reconstruct the original source and present the reconstructed original in the debugger.",
  "http/headers/speculation-rules": "The **`Speculation-Rules`** response header provides one or more URLs pointing to text resources containing speculation rule JSON definitions. When the response is an HTML document, these rules will be added to the document's speculation rule set. See the [Speculation Rules API](/en-US/docs/Web/API/Speculation_Rules_API) for more information.",
  "http/headers/strict-transport-security": "The HTTP **`Strict-Transport-Security`** response header (often abbreviated as [HSTS--](/docs/Glossary/HSTS)) informs browsers that the site should only be accessed using HTTPS, and that any future attempts to access it using HTTP should automatically be converted to HTTPS.",
  "http/headers/supports-loading-mode": "The **`Supports-Loading-Mode`** header allows a response to opt-in to being loaded in a novel, higher-risk context that it would otherwise fail to be loaded in.",
  "http/headers/te": "The **`TE`** request header specifies the transfer encodings\nthe user agent is willing to accept. (you could informally call it\n`Accept-Transfer-Encoding`, which would be more intuitive).",
  "http/headers/timing-allow-origin": "The **`Timing-Allow-Origin`** response header specifies origins that are allowed to see values of attributes retrieved via features of the [Resource Timing API](/en-US/docs/Web/API/Performance_API/Resource_timing), which would otherwise be reported as zero due to cross-origin restrictions.",
  "http/headers/tk": "The **`Tk`** response header indicates the tracking status that\napplied to the corresponding request.",
  "http/headers/trailer": "The **Trailer** response header allows the sender to include additional\nfields at the end of chunked messages in order to supply metadata that might be\ndynamically generated while the message body is sent, such as a message integrity check,\ndigital signature, or post-processing status.",
  "http/headers/transfer-encoding": "The **`Transfer-Encoding`** header specifies the form of encoding used to safely transfer the [payload body--](/docs/Glossary/Payload_body) to the user.",
  "http/headers/upgrade": "The HTTP 1.1 (only) `Upgrade` header can be used to upgrade an already established client/server connection to a different protocol (over the same transport protocol). For example, it can be used by a client to upgrade a connection from HTTP 1.1 to HTTP 2.0, or an HTTP or HTTPS connection into a WebSocket.",
  "http/headers/upgrade-insecure-requests": "The HTTP **`Upgrade-Insecure-Requests`** request header sends a signal to the server expressing the client's preference for an encrypted and authenticated response, and that it can successfully handle the {{CSP(\"upgrade-insecure-requests\")}} [CSP](/en-US/docs/Web/HTTP/CSP) directive.",
  "http/headers/user-agent": "The **User-Agent** [request header--](/docs/Glossary/request_header) is a characteristic string that lets servers and network peers identify the application, operating system, vendor, and/or version of the requesting [user agent--](/docs/Glossary/user_agent).",
  "http/headers/vary": "The **`Vary`** HTTP response header describes the parts of the request message aside from the method and URL that influenced the content of the response it occurs in. Most often, this is used to create a cache key when [content negotiation](/en-US/docs/Web/HTTP/Content_negotiation) is in use.",
  "http/headers/via": "The **`Via`** general header is added by proxies, both forward\nand reverse, and can appear in the request or response headers. It\nis used for tracking message forwards, avoiding request loops, and identifying the\nprotocol capabilities of senders along the request/response chain.",
  "http/headers/viewport-width": "The **`Viewport-Width`** [device client hint](/en-US/docs/Web/HTTP/Client_hints) request header provides the client's layout viewport width in [CSS pixels--](/docs/Glossary/CSS_pixel). The value is rounded up to the smallest following integer (i.e. ceiling value).",
  "http/headers/want-content-digest": "The **`Want-Content-Digest`** request or response header states the wish for a [Content-Digest--](/docs/Web/HTTP/Headers/Content-Digest) header. It is the `Content-` analogue of [Want-Repr-Digest--](/docs/Web/HTTP/Headers/Want-Repr-Digest).",
  "http/headers/want-digest": "> Use [Want-Content-Digest--](/docs/Web/HTTP/Headers/Want-Content-Digest) instead.\n> For `id-*` digest algorithms, use [Want-Repr-Digest--](/docs/Web/HTTP/Headers/Want-Repr-Digest).",
  "http/headers/want-repr-digest": "The **`Want-Repr-Digest`** request or response header states the wish for a [Repr-Digest--](/docs/Web/HTTP/Headers/Repr-Digest) header.",
  "http/headers/warning": "> Some of the information can be inferred from other headers such as [Age--](/docs/Web/HTTP/Headers/Age).",
  "http/headers/width": "The **`Width`** [device client hint](/en-US/docs/Web/HTTP/Client_hints#device_client_hints) request header field indicates the desired resource width in physical pixels — the intrinsic size of an image. The provided pixel value is a number rounded to the smallest following integer (i.e. ceiling value).",
  "http/headers/www-authenticate": "The HTTP **`WWW-Authenticate`** response header defines the [HTTP authentication](/en-US/docs/Web/HTTP/Authentication) methods (\"challenges\") that might be used to gain access to a specific resource.",
  "http/headers/x-content-type-options": "The **`X-Content-Type-Options`** response HTTP header is a\nmarker used by the server to indicate that the [MIME types](/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) advertised in the\n[Content-Type--](/docs/Web/HTTP/Headers/Content-Type) headers should be followed and not be changed. The header allows you to avoid [MIME type sniffing](/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types#mime_sniffing) by saying that the MIME types are deliberately\nconfigured.",
  "http/headers/x-dns-prefetch-control": "The **`X-DNS-Prefetch-Control`** HTTP response header controls\nDNS prefetching, a feature by which browsers proactively perform domain name resolution\non both links that the user may choose to follow as well as URLs for items referenced by\nthe document, including images, CSS, JavaScript, and so forth.",
  "http/headers/x-forwarded-for": "The **`X-Forwarded-For`** (XFF) request header is a de-facto standard header for identifying the originating IP address of a client connecting to a web server through a proxy server.",
  "http/headers/x-forwarded-host": "The **`X-Forwarded-Host`** (XFH) header is a de-facto standard\nheader for identifying the original host requested by the client in the\n[Host--](/docs/Web/HTTP/Headers/Host) HTTP request header.",
  "http/headers/x-forwarded-proto": "The **`X-Forwarded-Proto`** (XFP) header is a de-facto standard\nheader for identifying the protocol (HTTP or HTTPS) that a client used to connect to\nyour proxy or load balancer. Your server access logs contain the protocol used between\nthe server and the load balancer, but not the protocol used between the client and the\nload balancer. To determine the protocol used between the client and the load balancer,\nthe `X-Forwarded-Proto` request header can be used.",
  "http/headers/x-frame-options": "The **`X-Frame-Options`** [HTTP](/en-US/docs/Web/HTTP) response header can be used to indicate whether a browser should be allowed to render a page in a [frame--](/docs/Web/HTML/Element/frame), [iframe--](/docs/Web/HTML/Element/iframe), [embed--](/docs/Web/HTML/Element/embed) or [object--](/docs/Web/HTML/Element/object). Sites can use this to avoid [click-jacking](/en-US/docs/Web/Security/Types_of_attacks#click-jacking) attacks, by ensuring that their content is not embedded into other sites.",
  "http/headers/x-xss-protection": "The HTTP **`X-XSS-Protection`** response header was a feature of Internet Explorer, Chrome and Safari that stopped pages from loading when they detected reflected cross-site scripting ([XSS--](/docs/Glossary/Cross-site_scripting)) attacks. These protections are largely unnecessary in modern browsers when sites implement a strong [Content-Security-Policy--](/docs/Web/HTTP/Headers/Content-Security-Policy) that disables the use of inline JavaScript (`'unsafe-inline'`)."
}